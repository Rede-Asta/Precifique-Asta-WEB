{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/components/vitrine-modal/vitrine-image-cropper.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/components/vitrine-modal/vitrine-image-cropper.vue","mtime":1696439584665},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1673370377290},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IHsgQ3JvcHBlciwgQ2lyY2xlU3RlbmNpbCB9IGZyb20gJ3Z1ZS1hZHZhbmNlZC1jcm9wcGVyJwpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBjb21wb25lbnRzOiB7IENyb3BwZXIsIENpcmNsZVN0ZW5jaWwgfSwKICAgIG5hbWU6ICdWaXRyaW5lTW9kYWwnLAogICAgcHJvcHM6IHsKICAgICAgc2hvd0ltYWdlQ3JvcHBlcjogewogICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgfSwKICAgICAgaW1hZ2VUb0Nyb3A6IHsKICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgfQogICAgfSwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgIGNyb3BwZXI6IHt9IGFzIGFueSwKICAgICAgc2l6ZTogewogICAgICAgIHdpZHRoOiAwLAogICAgICAgIGhlaWdodDogMAogICAgICB9LAogICAgICByZXN1bHRJbWFnZTogJycsCiAgICAgIHJlc3VsdEltYWdlQmxvYjoge30sCiAgICAgIHJlZnJlc2hDcm9wcGVyOiBmYWxzZQogICAgfSksCiAgICBtb3VudGVkKCkgewogICAgICBjb25zb2xlLmxvZygnTW91bnRlZCEnKQogICAgICB0aGlzLmNyb3BwZXIgPSB0aGlzLiRyZWZzLmNyb3BwZXIgYXMgQ3JvcHBlcjsKICAgICAgdGhpcy5jcm9wcGVyLnJlZnJlc2goKQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgbW92ZShkaXJlY3Rpb24pIHsKICAgICAgICB0aGlzLmNyb3BwZXIgPSB0aGlzLiRyZWZzLmNyb3BwZXIgYXMgQ3JvcHBlcjsKICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAnbGVmdCcpIHsKICAgICAgICAgIHRoaXMuY3JvcHBlci5tb3ZlKC10aGlzLnNpemUud2lkdGggLyA4KTsKICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0JykgewogICAgICAgICAgdGhpcy5jcm9wcGVyLm1vdmUodGhpcy5zaXplLndpZHRoIC8gOCk7CiAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICd0b3AnKSB7CiAgICAgICAgICB0aGlzLmNyb3BwZXIubW92ZSgwLCAtdGhpcy5zaXplLmhlaWdodCAvIDgpOwogICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnYm90dG9tJykgewogICAgICAgICAgdGhpcy5jcm9wcGVyLm1vdmUoMCwgdGhpcy5zaXplLmhlaWdodCAvIDgpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgY2hhbmdlQ3JvcCh7Y29vcmRpbmF0ZXMsIGNhbnZhc30pIHsKICAgICAgICB0aGlzLmNyb3BwZXIgPSB0aGlzLiRyZWZzLmNyb3BwZXIgYXMgQ3JvcHBlcjsKICAgICAgICBpZiAoIXRoaXMucmVmcmVzaENyb3BwZXIpIHsKICAgICAgICAgIHRoaXMuY3JvcHBlci5yZWZyZXNoKCkKICAgICAgICB9CiAgICAgICAgdGhpcy5zaXplLndpZHRoID0gTWF0aC5yb3VuZChjb29yZGluYXRlcy53aWR0aCk7CiAgICAgICAgdGhpcy5zaXplLmhlaWdodCA9IE1hdGgucm91bmQoY29vcmRpbmF0ZXMuaGVpZ2h0KTsKICAgICAgICAvLyBjb25zb2xlLmxvZygic2l6ZWVlZWUiLCB0aGlzLnNpemUpCiAgICAgICAgdGhpcy5yZXN1bHRJbWFnZSA9IGNhbnZhcy50b0RhdGFVUkwoKTsKICAgICAgfSwKICAgICAgc2V0Wm9vbUNyb3BwZXIoZmFjdG9yKSB7CiAgICAgICAgdGhpcy5jcm9wcGVyID0gdGhpcy4kcmVmcy5jcm9wcGVyIGFzIENyb3BwZXI7CiAgICAgICAgdGhpcy5jcm9wcGVyLnpvb20oZmFjdG9yKTsKICAgICAgfSwKICAgICAgYXN5bmMgc2F2ZUNyb3BwZXJJbWFnZU1vZGFsKCkgewogICAgICAgIHRoaXMucmVzdWx0SW1hZ2VCbG9iID0gYXdhaXQgKGF3YWl0IGZldGNoKHRoaXMucmVzdWx0SW1hZ2UpKS5ibG9iKCk7CgogICAgICAgIHRoaXMuY2xvc2VDcm9wcGVySW1hZ2VNb2RhbCgnc3VjY2VzcycsIHsKICAgICAgICAgIGltYWdlX3VybDogdGhpcy5yZXN1bHRJbWFnZSwKICAgICAgICAgIHVwbG9hZFByb2dyZXNzOiAwLAogICAgICAgICAgaW1hZ2VGaWxlOiB0aGlzLnJlc3VsdEltYWdlQmxvYiwKICAgICAgICB9KTsKICAgICAgfSwKCiAgICAgIGNsb3NlQ3JvcHBlckltYWdlTW9kYWwobXNnOiBzdHJpbmcsIGltYWdlVXJsKSB7CiAgICAgICAgdGhpcy4kZW1pdCgndXBsb2FkSW1hZ2UnLCBbbXNnLCBpbWFnZVVybF0pOwogICAgICB9CiAgICB9LAogIH0pCg=="},{"version":3,"sources":["vitrine-image-cropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"vitrine-image-cropper.vue","sourceRoot":"src/components/vitrine-modal","sourcesContent":["<template>\n<modal :active=\"showImageCropper\">\n    <div class=\"card custom-modal\">\n        <div class=\"card-body text-center d-flex flex-column justify-content-between\">\n          <div class=\"custom-close\" title=\"Fechar Modal de Excluir\" @click=\"$emit('closeImageCropper')\">\n            <i class=\"fas fa-times\"></i>                \n          </div>\n\n          <div>\n            <h4 class=\"font-weight-bold text-dark text-center text-uppercase\">Ajustar Imagem</h4>\n            <p class=\"text-muted text-center mb-1\">Ajuste a imagem da sua logo.</p>\n          </div>\n\n          <div v-if=\"imageToCrop !== ''\" class=\"container-cropper\">\n              <div class=\"d-flex flex-column align-items-center justify-content-center position-relative bg-black\">\n                <cropper\n                  class=\"cropper\"\n                  ref=\"cropper\"\n                  :src=\"imageToCrop\"\n                  default-boundaries=\"fill\"\n                  :stencil-props=\"{\n                    aspectRatio: 1.91/1,\n                  }\"\n                   :stencil-size=\"{\n                    width: 1640,\n                    height: 856\n                  }\"\n                  :canvas=\"{\n                    widht: 1640,\n                    height:856\n                    }\"\n                 \n                  image-restriction=\"none\"\n                  @change=\"changeCrop\">\n                </cropper>\n  \n                <div class=\"d-flex align-items-center justify-content-center cropper-actions\">\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\"\n                    @click=\"setZoomCropper(0.9)\">\n                    <span class=\"material-icons\">zoom_out</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\"\n                    @click=\"setZoomCropper(1.1)\">\n                    <span class=\"material-icons\">zoom_in</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Top\" @click=\"move('top')\">\n                    <span class=\"material-icons\">arrow_upward</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Left\" @click=\"move('left')\">\n                    <span class=\"material-icons\">arrow_back</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Right\" @click=\"move('right')\">\n                    <span class=\"material-icons\">arrow_forward</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Bottom\" @click=\"move('bottom')\">\n                    <span class=\"material-icons\">arrow_downward</span>\n                  </button>\n                </div>   \n                  \n              </div>\n              <div class=\"d-flex justify-content-end mt-4\">\n                <button class=\"btn btn-link text-muted\" @click=\"$emit('closeImageCropper')\">\n                  Voltar\n                </button>\n                <button class=\"btn btn-primary d-flex align-items-center\" @click=\"saveCropperImageModal()\">\n                  Salvar\n                </button>\n              </div>\n          </div>\n        </div>\n    </div>\n</modal>\n\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Cropper, CircleStencil } from 'vue-advanced-cropper'\nexport default Vue.extend({\n  components: { Cropper, CircleStencil },\n    name: 'VitrineModal',\n    props: {\n      showImageCropper: {\n        type: Boolean,\n        required: true\n      },\n      imageToCrop: {\n        type: String,\n        required: true\n      }\n    },\n    data: () => ({\n      cropper: {} as any,\n      size: {\n        width: 0,\n        height: 0\n      },\n      resultImage: '',\n      resultImageBlob: {},\n      refreshCropper: false\n    }),\n    mounted() {\n      console.log('Mounted!')\n      this.cropper = this.$refs.cropper as Cropper;\n      this.cropper.refresh()\n    },\n    methods: {\n      move(direction) {\n        this.cropper = this.$refs.cropper as Cropper;\n        if (direction === 'left') {\n          this.cropper.move(-this.size.width / 8);\n        } else if (direction === 'right') {\n          this.cropper.move(this.size.width / 8);\n        } else if (direction === 'top') {\n          this.cropper.move(0, -this.size.height / 8);\n        } else if (direction === 'bottom') {\n          this.cropper.move(0, this.size.height / 8);\n        }\n      },\n      changeCrop({coordinates, canvas}) {\n        this.cropper = this.$refs.cropper as Cropper;\n        if (!this.refreshCropper) {\n          this.cropper.refresh()\n        }\n        this.size.width = Math.round(coordinates.width);\n        this.size.height = Math.round(coordinates.height);\n        // console.log(\"sizeeeee\", this.size)\n        this.resultImage = canvas.toDataURL();\n      },\n      setZoomCropper(factor) {\n        this.cropper = this.$refs.cropper as Cropper;\n        this.cropper.zoom(factor);\n      },\n      async saveCropperImageModal() {\n        this.resultImageBlob = await (await fetch(this.resultImage)).blob();\n\n        this.closeCropperImageModal('success', {\n          image_url: this.resultImage,\n          uploadProgress: 0,\n          imageFile: this.resultImageBlob,\n        });\n      },\n\n      closeCropperImageModal(msg: string, imageUrl) {\n        this.$emit('uploadImage', [msg, imageUrl]);\n      }\n    },\n  })\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-modal {\n    width: 32vw;\n    background-color: #f4f5f9;\n    \n    .btn {\n        font-size: 14px;\n    }\n\n    .slider {\n        top: 6px !important;\n    }\n\n    .variant {\n        font-size: 14px;\n    }\n\n    @media screen and (max-width: 992px) {\n        width: 100vw;\n        height: 100vh;\n        border-radius: 0;\n        \n        .btn {\n            font-size: 12px;\n        }\n\n        h4 {\n            margin-top: 20px;\n        }\n    }\n\n    @media screen and (min-width: 992px) and (max-width: 1360px) {\n        width: 45vw;\n    }\n\n    @media screen and (min-width: 1361px) and (max-width: 1600px) {\n        width: 40vw;\n    }\n}\n\n.preview-image {\n\n}\n\n.cropper {\n    //height: 400px;\n    //width: 1640px;\n    //height: 856px;\n    background: #dddddd;\n}\n\n.cropper-actions {\n    position: absolute;\n    background: rgba(255, 255, 255, .9);\n    border-radius: 6px;\n\n    @media screen and (max-width: 992px) {\n        bottom: 5px;\n        flex-direction: row;\n    }\n\n    @media screen and (min-width: 992px) {\n        left: 5px;\n        flex-direction: column;\n    }\n}\n\n.bg-black {\n    background: #000000;\n}\n\n.container-cropper {\n    max-height: 80vh;\n    min-height: -webkit-fill-available;\n}\n\n</style>"]}]}