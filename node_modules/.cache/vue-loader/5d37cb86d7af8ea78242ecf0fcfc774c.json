{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/views/Cupon/CuponEditView.vue?vue&type=style&index=0&id=45f69a30&scoped=true&lang=scss&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/views/Cupon/CuponEditView.vue","mtime":1696439584697},{"path":"/home/aline/GitHub/admin-frontend/node_modules/css-loader/dist/cjs.js","mtime":1673370389401},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673370389594},{"path":"/home/aline/GitHub/admin-frontend/node_modules/postcss-loader/src/index.js","mtime":1673370389569},{"path":"/home/aline/GitHub/admin-frontend/node_modules/sass-loader/dist/cjs.js","mtime":1673370393532},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucHJvZHVjdC1lZGl0LXdyYXBwZXIgewogIG1heC13aWR0aDogNjgwcHg7CgogICZfX2JyZWFkY3J1bWJzIHsKICAgIGxpbmUtaGVpZ2h0OiAxICFpbXBvcnRhbnQ7CgogICAgY29sb3I6ICMwMDAwMDA7CgogICAgZm9udC13ZWlnaHQ6IDUwMDsKCiAgICBhIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7CiAgICB9CgogICAgc3Bhbi5tYXRlcmlhbC1pY29ucyB7CiAgICAgIGZvbnQtc2l6ZTogMXJlbTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["CuponEditView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CuponEditView.vue","sourceRoot":"src/views/Cupon","sourcesContent":["<template>\n  <section>\n    <Header/>\n\n    <main class=\"product-edit-wrapper container mb-5\">\n      <div class=\"product-edit-wrapper__breadcrumbs d-flex align-items-center mb-4\">\n        <router-link to=\"/cupons\" class=\"mr-1\">\n          <span class=\"material-icons\">arrow_back</span>\n          Cupons\n        </router-link>\n        / Editar \n      </div>\n\n      <cupon-create-or-edit-info\n        id=\"create-or-edit-info\"\n        class=\"mb-3\"\n        :open=\"true\"\n        :is-parent-loading=\"isLoading\"\n        :has-created-product=\"true\"\n        :is-service=\"isService\"\n        :is-update-page=\"true\"\n        @submit-valid=\"updateCupon\"\n      />\n    </main>\n\n    <Footer/>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\n// import ProductCreateOrEditInfo from \"@/views/Product/ProductCreateOrEditInfo.vue\";\nimport CuponCreateOrEditInfo from \"@/views/Cupon/CuponCreateOrEditInfo.vue\";\n// import ProductCreateOrEditImages from \"@/views/Product/ProductCreateOrEditImages.vue\";\n// import ProductCreateOrEditImages from \"@/views/Cupon/\";\n\nimport cuponService from \"@/services/cupon.service\";\nimport Swal, { SweetAlertType } from \"sweetalert2\";\nimport VueSimpleAlert from \"vue-simple-alert\";\n\n// interface IData {\n//   cupon: any;\n//   // cuponService: cuponService;\n//   isLoading: boolean;\n// }\n\nexport default Vue.extend({\n  name: \"CuponEditView\",\n\n  components: {\n    CuponCreateOrEditInfo,\n  },\n\n  data(){\n    return {\n      cupon: null,\n      cuponService: new cuponService(),\n      isLoading: false,\n    }\n  },\n\n  computed: {\n    // isService(): boolean {\n    //   if (!this.product) return false;\n    //   return this.product.register_type === 'Service';\n    // }\n  },\n\n  async created() {\n    // await this.getProduct();\n  },\n\n  methods: { \n    async updateCupon(data, couponGuid){\n      console.log(\"dataaaefet\", data)\n      const response = await this.cuponService.updateCupon(data, couponGuid)\n      console.log(\"rrereresponse\", response.data)\n      switch (response.status) {\n        case 200:\n          this.toastMessage(\"success\", \"Atualizado com sucesso!\");\n          this.$router.back();\n          break;\n        case 500:\n          this.toastMessage(\"error\", \"Erro, tente novamente\");\n          break;   \n      }\n    },\n\n    toastMessage(type: SweetAlertType, title: string) {\n      VueSimpleAlert.fire({\n        type,\n        title,\n        toast: true,\n        position: \"top-end\",\n        showConfirmButton: false,\n        timer: 3000,\n        onOpen: (toast) => {\n          toast.addEventListener(\"mouseenter\", Swal.stopTimer),\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n        },\n      });\n    },\n\n    // async getProduct() {\n    //   try {\n    //     const {data} = await this.productsService.getProductDetail(this.$route.params.productGuid);\n    //     this.product = data;\n    //   } catch (e) {\n    //     console.error(e);\n    //   }\n    // },\n\n    // async updateProduct(data) {\n    //   this.isLoading = true;\n    //   try {\n    //     await this.productsService.editProductNew(data, this.product?.guid);\n    //   } catch (e) {\n    //     let errorMessage = 'Erro ao atualizar produto';\n\n    //     if (e.response && e.response.status === 304) {\n    //       errorMessage = 'JÃ¡ existe um produto com esse nome!';\n    //     }\n\n    //     await this.$alert(errorMessage, '', 'error', {\n    //       toast: true,\n    //       position: 'top-end',\n    //       showConfirmButton: false,\n    //       timer: 3000,\n    //     });\n\n    //     console.error(e);\n    //   }\n    //   this.isLoading = false;\n    // },\n  }\n});\n</script>\n\n<style scoped lang=\"scss\">\n.product-edit-wrapper {\n  max-width: 680px;\n\n  &__breadcrumbs {\n    line-height: 1 !important;\n\n    color: #000000;\n\n    font-weight: 500;\n\n    a {\n      display: flex;\n      align-items: center;\n      text-decoration: none !important;\n    }\n\n    span.material-icons {\n      font-size: 1rem;\n    }\n  }\n}\n</style>"]}]}