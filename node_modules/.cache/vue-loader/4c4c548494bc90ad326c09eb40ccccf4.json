{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/views/Product/ProductCreateOrEditInfo.vue?vue&type=style&index=0&id=3ada227c&scoped=true&lang=scss&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/views/Product/ProductCreateOrEditInfo.vue","mtime":1696439584865},{"path":"/home/aline/GitHub/admin-frontend/node_modules/css-loader/dist/cjs.js","mtime":1673370389401},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673370389594},{"path":"/home/aline/GitHub/admin-frontend/node_modules/postcss-loader/src/index.js","mtime":1673370389569},{"path":"/home/aline/GitHub/admin-frontend/node_modules/sass-loader/dist/cjs.js","mtime":1673370393532},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCB7CiAgLmN1c3RvbS1jb250cm9sLWxhYmVsIHsKICAgIGNvbG9yOiAjNTM1NTU2RTU7CiAgICBmb250LXNpemU6IDFyZW07CiAgICBmb250LXdlaWdodDogNzAwOwogIH0KfQoKLnByb2R1Y3QtY3JlYXRlLWluZm8gewogICZfX291dGxpbmUtYnRuIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRwcmltYXJ5OwogICAgYm9yZGVyLXJhZGl1czogNXB4OwoKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwoKICAgIGNvbG9yOiAkcHJpbWFyeTsKICAgIGZvbnQtc2l6ZTogLjYyNXJlbTsKCiAgICBwYWRkaW5nOiA1cHg7CiAgICBtYXJnaW4tdG9wOiBjYWxjKDFyZW0gKyA4cHgpOwoKICAgIGhlaWdodDogMzRweDsKCiAgICAmLS1jbGVhciB7CiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKCiAgICAgICRjbGVhci1jb2xvcjogI2ZmZjsKCiAgICAgIGNvbG9yOiAkY2xlYXItY29sb3I7CiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CgogICAgICB3aWR0aDogMjhweDsKICAgICAgaGVpZ2h0OiAyOHB4OwogICAgICBtYXJnaW4tdG9wOiBjYWxjKDFyZW0gKyAxM3B4KTsKCiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5OwoKICAgICAgc3BhbiB7CiAgICAgICAgbGluZS1oZWlnaHQ6IDE7CiAgICAgICAgZm9udC1zaXplOiAxOHB4OwogICAgICB9CgogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIH0KICB9CgogICZfX2Rhc2ggewogICAgbWFyZ2luLXRvcDogY2FsYygxcmVtICsgOHB4ICsgMThweCk7CiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoMCwgMCwgMCwgMC4wMikgMCUsIHJnYmEoMCwgMCwgMCwgMC4yKSA1MS41NiUsIHJnYmEoMCwgMCwgMCwgMC4wMikgMTAwJSk7CiAgICBoZWlnaHQ6IDFweDsKICAgIHdpZHRoOiAyMHB4OwogIH0KCiAgJl9fc2t1IHsKICAgICYtLXZhcmlhbnQtdGl0bGUgewogICAgICBzcGFuIHsKICAgICAgICBjb2xvcjogIzUzNTU1NkU1OwogICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["ProductCreateOrEditInfo.vue"],"names":[],"mappingsfA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProductCreateOrEditInfo.vue","sourceRoot":"src/views/Product","sourcesContent":["<template>\n  <product-create-or-edit-step :step=\"1\" :open=\"open\" :title=\"stepTitle\" :hide-steps=\"isUpdatePage\">\n    <fieldset class=\"product-create-info p-1 px-md-5\" :disabled=\"disabled\">\n      <form-select label=\"Categoria\" option-label-key=\"name\" placeholder=\"Escolha uma categoria\" name=\"category\"\n        id=\"product-category\" :options=\"allCategories\" v-model=\"selectedCategory\"\n        :disabled=\"disabled || isUpdate && productInfo[variantsKeyName].length > 1\"\n        :selectable=\"isUpdate ? validateIsSelectable : () => true\" />\n\n      <form-input id=\"product-name\" :label=\"`Nome do ${registerType}`\" :placeholder=\"productNamePlaceholder\"\n        name=\"product-name\" v-model.trim=\"productInfo.name\" :error=\"validationMessage($v.productInfo.name)\" />\n\n      <form-input id=\"product-description\" :label=\"`Descrição do ${registerType}`\" name=\"product-description\"\n        :textarea=\"true\" :max-length=\"500\" v-model.trim=\"productInfo.description\"\n        :error=\"validationMessage($v.productInfo.description)\" />\n\n      <template v-for=\"(v, index) in $v.productInfo[this.variantsKeyName].$each.$iter\">\n        <div class=\"product-create-info__sku\">\n          <div v-if=\"selectedCategory.variant_status\"\n            class=\"product-create-info__sku--variant-title d-flex align-items-center mb-2\">\n            <span class=\"mr-1\">{{ selectedCategory.variant_name }}:</span>\n            <span class=\"mr-3\">{{ v.$model.value.variant_value || v.$model.value }}</span>\n\n            <b-form-checkbox v-model=\"v.$model.status\">Disponível</b-form-checkbox>\n          </div>\n\n          <div class=\"align-items-start\" style=\"display: flex\" v-show=\"!productInfo.price_to_match && v.$model.status\">\n            <div v-show=\"v.$model.in_promotion || isService\">\n              <div class=\"d-flex align-items-start\">\n                <form-price-input max-width=\"120px\" label=\"Preço\" :error=\"validationMessage(v.old_price)\"\n                  :help=\"getOldPriceHelpText()\" prefix=\"R$\" v-model=\"v.$model.old_price\" />\n                <div class=\"product-create-info__dash mx-1\"></div>\n              </div>\n            </div>\n\n            <form-price-input class=\"mr-2\" :label=\"v.$model.in_promotion || isService ? '' : 'Preço'\"\n              :help=\"getNewPriceHelpText(v.$model.in_promotion)\" prefix=\"R$\" :error=\"validationMessage(v.new_price)\"\n              max-width=\"120px\" v-model=\"v.$model.new_price\"\n              @input=\"v.$model.in_promotion || isService ? null : v.$model.old_price = $event\" />\n\n            <div v-show=\"!isService\">\n              <button class=\"product-create-info__outline-btn\"\n                :class=\"{ 'product-create-info__outline-btn--clear': v.$model.in_promotion }\"\n                @click=\"setSKUPromotion(index, !v.$model.in_promotion)\">\n\n                <template v-if=\"!v.$model.in_promotion\">\n                  Inserir promoção\n                </template>\n\n                <span v-else class=\"material-icons\">\n                  clear\n                </span>\n\n              </button>\n            </div>\n          </div>\n\n          <div v-show=\"(!isService && !isUpdate) && v.$model.status\">\n            <div class=\"d-flex align-items-start mt-n4\">\n              <button class=\"product-create-info__outline-btn mb-4\" @click=\"toggleIsSku(index, !v.$model.is_skus)\">\n                {{ v.$model.is_skus ? 'Remover' : 'Inserir SKU' }}\n              </button>\n\n              <div v-show=\"v.$model.is_skus\">\n                <div class=\"d-flex align-items-start\">\n                  <div class=\"product-create-info__dash mx-1\"></div>\n                  <form-input class=\"flex-shrink-1\" placeholder=\"Insira o SKU do produto\" max-width=\"160px\"\n                    v-model=\"v.$model.code\" :error=\"validationMessage(v.code)\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <b-form-checkbox class=\"mt-n2\" v-show=\"isService\" v-model=\"productInfo.price_to_match\">\n          A combinar\n        </b-form-checkbox>\n      </template>\n\n      <b-form-checkbox class=\"mt-4\" v-model=\"productInfo.is_published\" switch :value=\"false\" :unchecked-value=\"true\">\n        Pausar anúncio\n      </b-form-checkbox>\n    </fieldset>\n\n    <div class=\"d-flex justify-content-end\">\n      <button v-if=\"!disabled\" class=\"btn btn-primary\" @click=\"validateInfo\">\n        {{ isUpdate ? 'Salvar' : `Criar ${registerType}` }}\n      </button>\n    </div>\n\n    <loading style=\"left: 0; height: 100%\" :active=\"loading || isParentLoading\" />\n  </product-create-or-edit-step>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport ProductCreateOrEditStep from \"@/views/Product/ProductCreateOrEditStep.vue\";\nimport FormInput from \"@/components/Form/FormInput.vue\";\nimport FormSelect from \"@/components/Form/FormSelect.vue\";\nimport FormPriceInput from \"@/components/Form/FormPriceInput.vue\";\n\nimport categoryService from '@/services/category.service';\n\nimport { BFormCheckbox } from 'bootstrap-vue';\n\nimport { required } from 'vuelidate/lib/validators';\nimport { validationMessage } from \"vuelidate-messages\";\nimport { currencyHigherThan, requiredIf } from \"@/helpers/validators\";\nimport outputFormat from \"@/helpers/outputFormat\";\nimport mixpanel from \"mixpanel-browser\";\n\n\nconst getRequiredMessage = () => 'Este campo é obrigatório.';\n\nconst errorMessages = {\n  required: getRequiredMessage,\n  requiredIf: getRequiredMessage,\n  currencyMinimum: getRequiredMessage,\n  higherThan: () => 'Deve ser maior que o valor promocional.',\n  higherThanService: () => 'Deve ser maior ou igual ao valor \"De\"'\n}\n\nconst ignoreOldPriceIf = (value: any, parentVm: any) => {\n  return !parentVm.in_promotion || !parentVm.status;\n}\n\nconst ignorePricesIfPriceToMatch = (value: any, parentVm: any, component: any) => {\n  return component.price_to_match;\n}\n\ninterface IProductInfo {\n  category_guid: string,\n  name: string,\n  description: string,\n  ordering: 100,\n  is_published: boolean,\n  register_type: 'Product' | 'Service',\n  price_to_match: boolean,\n  variant_value: any[],\n}\n\nexport default Vue.extend({\n  name: \"ProductCreateOrEditInfo\",\n  components: {\n    FormPriceInput,\n    FormSelect,\n    FormInput,\n    ProductCreateOrEditStep,\n    BFormCheckbox\n  },\n\n  props: {\n    open: {\n      type: Boolean,\n    },\n\n    data: {\n      type: [Object, Boolean],\n      default: () => false,\n    },\n\n    isParentLoading: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    disabled: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    hasCreatedProduct: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    product: {\n      type: [Object, Boolean],\n      default: () => false,\n    },\n\n    isService: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    isUpdatePage: {\n      type: Boolean,\n      default: () => false,\n    }\n  },\n\n  data() {\n\n\n    return {\n      categoryService: new categoryService(),\n      categoryOptions: [],\n      allCategories: [],\n      selectedCategory: {} as any,\n\n      loading: false,\n\n      productInfo: {\n        category_guid: '',\n        name: '',\n        description: '',\n        ordering: 100,\n        is_published: true,\n        register_type: 'Product',\n        price_to_match: false,\n        variant_value: [],\n      } as IProductInfo,\n    }\n  },\n\n  computed: {\n\n    variantsKeyName(): string {\n      return 'variant_value';\n    },\n\n    isUpdate(): boolean {\n      return this.hasCreatedProduct && Boolean(this.product);\n    },\n\n    registerType(): string {\n      return this.isService ? 'serviço' : 'produto';\n    },\n\n    stepTitle(): string {\n      return this.isUpdatePage\n        ? `Informações do ${this.isService ? 'serviço' : 'produto'}`\n        : `Insira informações e cadastre seu ${this.registerType}`\n    },\n\n    productNamePlaceholder() {\n      if (this.registerType === 'produto') {\n        return 'Nome do produto que será apresentado - Ex: Camiseta estampada roxa, bolo de chocolate, etc.'\n      }\n\n      return 'Nome do serviço - Ex: Assistência técnica, chaveiro, encanador, etc.';\n    }\n  },\n\n  watch: {\n\n    selectedCategory() {\n      // if (!this.selectedCategory || this.product){\n      //   return;    \n      // }\n\n      if (!this.selectedCategory) {\n        return;\n      }\n\n      const baseVariant = {\n        code: '',\n        guid: '',\n        new_price: '',\n        old_price: '',\n        value: '',\n        in_promotion: false,\n        is_skus: false,\n        status: true,\n      };\n\n      let variants = [\n        { ...baseVariant }\n      ];\n\n      if (this.selectedCategory.variant_status) {\n        variants = this.selectedCategory[this.variantsKeyName].map(({ value }) => {\n          return {\n            ...baseVariant,\n            value,\n          }\n        });\n      }\n\n      this.$set(this.productInfo, 'category_guid', this.selectedCategory.guid);\n      this.$set(this.productInfo, this.variantsKeyName, variants);\n      this.$set(this.productInfo, 'register_type', this.selectedCategory.register_type);\n      this.$set(this.productInfo, 'variant_value', this.product.skus.map(sku => ({ ...sku, value: sku || '' })));\n    },\n\n    product: {\n      handler: function (val) {\n        if (!val || !this.hasCreatedProduct) return;\n\n        this.productInfo = {\n          category_guid: val.category.guid,\n          name: val.name,\n          description: val.description,\n          is_published: val.is_published,\n          register_type: val.register_type,\n          price_to_match: val.price_to_match,\n          variant_value: val.skus.map(sku => ({ ...sku, value: sku || '' })),\n          ordering: val.ordering,\n        };\n      },\n      immediate: true,\n    },\n\n    'productInfo.price_to_match': function (newVal) {\n      if (!newVal) return;\n\n      this.productInfo[this.variantsKeyName][0].old_price = '0.01';\n      this.productInfo[this.variantsKeyName][0].new_price = '0.01';\n    }\n  },\n\n  validations() {\n\n    const variantValidations = {\n      $each: {\n        code: {\n          requiredIf: requiredIf(['is_skus', 'status']),\n        },\n        new_price: {\n          required,\n          currencyMinimum: currencyHigherThan({\n            value: '0,00',\n            ignoreIf: (value: any, parentVm: any) => !parentVm.status,\n          }),\n        },\n        old_price: {\n          higherThan: currencyHigherThan({\n            type: 'prop',\n            value: 'new_price',\n            ignoreIf: ignoreOldPriceIf\n          }),\n          currencyMinimum: currencyHigherThan({\n            value: '0,00',\n            ignoreIf: ignoreOldPriceIf\n          }),\n        },\n      }\n    }\n\n    if (this.isService) {\n      delete variantValidations.$each.old_price.higherThan;\n\n      variantValidations.$each.new_price['higherThanService'] = currencyHigherThan({\n        type: 'prop',\n        value: 'old_price',\n        ignoreIf: ignorePricesIfPriceToMatch,\n        allowEquals: true,\n      });\n    }\n\n    let baseValidations = {\n      productInfo: {\n        name: {\n          required,\n        },\n        description: {\n          required,\n        },\n      }\n    }\n\n    baseValidations['productInfo'][this.variantsKeyName] = variantValidations;\n\n    return baseValidations;\n  },\n\n  created() {\n\n    this.getAllCategories();\n  },\n\n  methods: {\n    getNewPriceHelpText(inPromotion) {\n      if (this.isService) {\n        return 'Até';\n      }\n\n      return inPromotion ? 'Valor promocional' : 'Valor unitário';\n    },\n\n    getOldPriceHelpText() {\n      if (this.isService) {\n        return 'De';\n      }\n\n      return 'Valor antigo';\n    },\n\n    validateIsSelectable(option) {\n      return !option.variant_status;\n    },\n\n    validationMessage: validationMessage(errorMessages, {}),\n\n    async getAllCategories() {\n      this.loading = true;\n      try {\n        const loggedUser: any = JSON.parse(localStorage.getItem('loggedUser') || '');\n        const { data } = await this.categoryService.getSellerCategories(loggedUser.slug);\n\n        this.allCategories = data.filter(category => {\n          if (this.isService || this.product && this.product.register_type === 'Service') {\n            return category.register_type === 'Service';\n          } else {\n            return category.register_type === 'Product';\n          }\n        });\n\n        const categoryGuid = this.$route.params.categoryGuid;\n\n        if (this.product) {\n          this.selectedCategory = this.allCategories.find((category: any) => category.guid === this.product.category.guid)\n        } else {\n          this.selectedCategory = categoryGuid ? this.allCategories.find((category: any) => category.guid === categoryGuid) : this.allCategories[0] || null;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n      this.loading = false;\n    },\n\n    setSKUPromotion(index, value) {\n      this.$set(this.productInfo[this.variantsKeyName], index, {\n        ...(this.productInfo[this.variantsKeyName][index] || {}),\n        in_promotion: value\n      });\n    },\n\n    toggleIsSku(index, value) {\n      this.$set(this.productInfo[this.variantsKeyName], index, {\n        ...(this.productInfo[this.variantsKeyName][index] || {}),\n        is_skus: value\n      });\n    },\n\n\n\n\n\n\n     editOrCreateProductMixpanel() {\n    mixpanel.track(\"Edit/Create_Product\", {\n\n    });\n\n    console.log(\"Edit/Create Product\")\n   \n\n  },\n\n    validateInfo() {\n      this.$v.$touch();\n\n      const formattedProductInfo = {\n        ...this.productInfo,\n        variant_value: this.productInfo[this.variantsKeyName].map((variant: any) => {\n          return {\n            guid: variant.guid,\n            status: variant.status,\n            value: variant.value,\n            new_price: outputFormat.currencyStringToInt(variant.new_price),\n            old_price: outputFormat.currencyStringToInt(\n              variant.in_promotion || this.isService\n                ? variant.old_price\n                : variant.new_price\n            ),\n            code: variant.is_skus || this.isUpdate ? variant.code : '',\n          }\n        })\n      }\n\n\n\n      if (this.$v.$invalid) {\n        this.$emit('submit-invalid', formattedProductInfo);\n      } else {\n        this.editOrCreateProductMixpanel()\n\n        this.$fire({\n          type: 'success',\n          title: 'Alterações salvas com sucesso!',\n          toast: true,\n          position: 'top',\n          showCloseButton: true,\n          showConfirmButton: false,\n          timer: 3000,\n\n        })\n        this.$emit('submit-valid', formattedProductInfo);\n\n\n      }\n\n\n\n\n\n\n\n    },\n  }\n});\n</script>\n\n<style scoped lang=\"scss\">\n::v-deep {\n  .custom-control-label {\n    color: #535556E5;\n    font-size: 1rem;\n    font-weight: 700;\n  }\n}\n\n.product-create-info {\n  &__outline-btn {\n    border: 1px solid $primary;\n    border-radius: 5px;\n\n    background-color: transparent;\n\n    color: $primary;\n    font-size: .625rem;\n\n    padding: 5px;\n    margin-top: calc(1rem + 8px);\n\n    height: 34px;\n\n    &--clear {\n      border-radius: 50%;\n\n      $clear-color: #fff;\n\n      color: $clear-color;\n      border-color: transparent;\n\n      width: 28px;\n      height: 28px;\n      margin-top: calc(1rem + 13px);\n\n      background-color: $primary;\n\n      span {\n        line-height: 1;\n        font-size: 18px;\n      }\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  &__dash {\n    margin-top: calc(1rem + 8px + 18px);\n    background: linear-gradient(90deg, rgba(0, 0, 0, 0.02) 0%, rgba(0, 0, 0, 0.2) 51.56%, rgba(0, 0, 0, 0.02) 100%);\n    height: 1px;\n    width: 20px;\n  }\n\n  &__sku {\n    &--variant-title {\n      span {\n        color: #535556E5;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>"]}]}