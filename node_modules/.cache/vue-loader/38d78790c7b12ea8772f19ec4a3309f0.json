{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/AstaPrecifique/src/views/Product/ProductCreateOrEditImages.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/views/Product/ProductCreateOrEditImages.vue","mtime":1673321154842},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/AstaPrecifique/node_modules/ts-loader/index.js","mtime":1673370387800},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProductCreateOrEditImages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProductCreateOrEditImages.vue","sourceRoot":"src/views/Product","sourcesContent":["<template>\n  <product-create-or-edit-step :step=\"2\" :open=\"open\" :title=\"stepTitle\" @header-click=\"$emit('header-click')\"\n    :hide-steps=\"isUpdatePage\">\n    <div class=\"product-create-or-edit-images p-1 px-md-4\">\n      <div class=\"product-create-or-edit-images__info d-flex align-items-center p-1 mb-4 mx-auto\">\n        <span class=\"material-icons mr-2\">\n          info\n        </span>\n        <span class=\"product-create-or-edit-images__text\">\n          Seu {{ isService ? 'serviço' : 'produto' }} já foi criado e está disponivel na sua vitrine, adicione imagens\n          para melhorar sua exposição na plataforma e atrair mais clientes para o seu negócio.\n        </span>\n      </div>\n\n      <input ref=\"imageInput\" accept=\".jpg,.jpeg,.png\" @input=\"onImageInput\" type=\"file\" style=\"display: none\">\n\n      <product-image-carousel class=\"mb-3\" v-model=\"imageList\" @delete-click=\"deleteImage\" @crop-click=\"cropImage\"\n        @add-click=\"addImage\" />\n\n      <div class=\"product-create-or-edit-images__image-specs\">\n        <ul>\n          <li>\n            {{\n            isService ? 'Certifique-se que as imagem demonstre o serviço oferecido' : 'Certifique-se que o produto\n            esteja visível'\n            }}\n          </li>\n          <li>\n            Tamanho máximo 6MB\n          </li>\n          <li>\n            Dimensões ideais: 600x600\n          </li>\n          <li>\n            Formatos permitidos: PNG/JPG/JPEG\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"d-flex align-items-center mt-3\"\n        :class=\"isUpdatePage ? 'justify-content-end' : 'justify-content-between'\">\n        <button v-if=\"!isUpdatePage\" class=\"btn btn-link d-flex align-items-center p-0\" @click=\"$emit('back')\">\n          <span class=\"material-icons\">chevron_left</span>\n          Voltar\n        </button>\n\n        <div class=\"d-flex align-items-center\">\n          <button v-if=\"!isUpdatePage\" class=\"btn btn-outline-primary mr-1 mr-sm-2\" @click=\"skip\">\n            Pular\n          </button>\n\n          <button class=\"btn btn-primary\" @click=\"updateProductImages\">\n            Salvar imagens\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <product-image-cropper v-if=\"openImageCropper\" :propShowCropperImage=\"openImageCropper\"\n      :prop-image-to-crop=\"imageToCrop\" :prop-product-guid=\"productGuid\" :prop-position=\"imageToCropPosition\"\n      :propDescription=\"''\" v-on:closeCropperImageModal=\"closeImageCropper\" />\n\n    <product-loading-screen v-if=\"openLoadingScreen\" :image-list=\"imageList\" :creating-product=\"productLoading\" />\n  </product-create-or-edit-step>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport ProductCreateOrEditStep from \"@/views/Product/ProductCreateOrEditStep.vue\";\nimport ProductImageCarousel from \"@/components/product-modal/product-image-carousel/ProductImageCarousel.vue\";\nimport ProductLoadingScreen from \"@/components/product-modal/product-loading-screen/ProductLoadingScreen.vue\";\nimport ProductImageCropper from \"@/components/product-modal/product-image-cropper/ProductImageCropper.vue\";\n\n\nimport Compressor from \"compressorjs\";\nimport productsService from \"@/services/products.service\";\n\ninterface IData {\n  imageToCrop: Blob | File | string | null;\n  imageList: any[];\n  openLoadingScreen: boolean;\n  productLoading: boolean;\n  productsService: productsService,\n  openImageCropper: boolean;\n  imageToCropPosition: number | null;\n}\n\nexport default Vue.extend({\n  name: \"ProductCreateOrEditImages\",\n  components: {\n    ProductImageCropper,\n    ProductLoadingScreen,\n    ProductImageCarousel,\n    ProductCreateOrEditStep,\n  },\n\n  props: {\n    open: {\n      type: Boolean,\n    },\n\n    productGuid: {\n      type: String,\n    },\n\n    isService: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    isUpdatePage: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    product: {\n      type: [Object, Boolean],\n      default: () => false,\n    }\n  },\n\n  data(): IData {\n    return {\n      imageToCropPosition: null,\n      imageToCrop: null,\n      imageList: [],\n\n      openLoadingScreen: false,\n      productLoading: false,\n      productsService: new productsService(),\n      openImageCropper: false,\n    }\n  },\n\n  computed: {\n    stepTitle(): string {\n      return this.isUpdatePage\n        ? `Fotos do ${this.isService ? 'serviço' : 'produto'}`\n        : `Melhore seu anúncio com fotos do seu ${this.isService ? 'serviço' : 'produto'}`\n    }\n  },\n\n  created() {\n    if (this.product) {\n      this.imageList = this.product.image_list;\n    }\n  },\n\n  methods: {\n    addImage() {\n      (this.$refs.imageInput as HTMLInputElement).click();\n    },\n\n    deleteImage(index) {\n      this.imageList.splice(index, 1);\n    },\n\n    cropImage(index) {\n      const image = this.imageList[index];\n      this.imageToCrop = image.image_url;\n      this.imageToCropPosition = index;\n\n      this.openImageCropper = true;\n    },\n\n    closeImageCropper([message, image]) {\n      if (message === 'success') {\n        this.$set(this.imageList, image.position, {\n          ...this.imageList[image.position],\n          image_url: image.image_url,\n          imageBlob: image.imageFile,\n        });\n      }\n\n      this.openImageCropper = false;\n      this.imageToCrop = null;\n      this.imageToCropPosition = null;\n    },\n\n    onUploadProgress(event, index) {\n      let progress: number = Math.round(\n        (event.loaded * 100) / event.total\n      );\n\n      if (this.imageList && this.imageList) {\n        this.$set(this.imageList, index, {\n          ...this.imageList[index],\n          uploadProgress: progress,\n        });\n      }\n    },\n\n    sendImageToS3(params) {\n      return this.productsService.uploadToS3({\n        ...params,\n      });\n    },\n\n    getSignatures(quantity) {\n      return this.productsService.getS3Signature(this.productGuid, quantity);\n    },\n\n    delay(ms) {\n      return new Promise((res) => setTimeout(res, ms));\n    },\n\n    skip() {\n      this.$emit('confirm-leave', true);\n      this.$router.push('/produtos');\n    },\n\n    async updateProductImages() {\n      try {\n        const oldImages = this.imageList.filter(image => !image.isNew);\n        const imagesToUpload = this.imageList.filter(image => image.isNew);\n\n        let signatures = [] as any[];\n\n        if (imagesToUpload.length > 0) {\n          const { data } = await this.getSignatures(imagesToUpload.length);\n\n          signatures = data;\n\n          this.openLoadingScreen = true;\n\n          const result = await Promise.allSettled(\n            imagesToUpload.map((image, index) => {\n              return this.sendImageToS3({\n                ...signatures[index].code,\n                image: image.imageBlob,\n                onUploadProgressCallback: this.onUploadProgress,\n                position: index,\n              });\n            }),\n          );\n        } else {\n          this.productLoading = true;\n        }\n\n        this.imageList.forEach(image => image.isNew = false)\n\n        await this.productsService.updateProductImages(\n          this.productGuid,\n          [\n            ...imagesToUpload.map((image, index) => {\n              const signature = signatures[index].code;\n              return signature.url + signature.fields.key;\n            }),\n            ...oldImages.map(image => image.image_url),\n          ]\n        );\n\n        this.productLoading = true;\n\n        this.openLoadingScreen = false;\n\n        await this.delay(500);\n\n        this.$emit('confirm-leave', true);\n        await this.$router.push('/produtos');\n\n        await this.$alert(\n          `Imagens ${this.isUpdatePage ? 'atualizadas' : 'adicionadas'} com sucesso`,\n          '',\n          'success', {\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n        });\n      } catch (e) {\n        console.error(e);\n\n        await this.$alert('Erro ao fazer o upload das imagens', '', 'error', {\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n        });\n      }\n\n      this.openLoadingScreen = false;\n    },\n\n    onImageInput(e) {\n      const fileInput = this.$refs.imageInput as HTMLInputElement || {};\n\n      if (fileInput && fileInput.files!.length) {\n        let imageFile: Blob | File = fileInput.files![0];\n        if (imageFile.size / 1000000 < 15) {\n          const compressor = new Compressor(imageFile, {\n            quality: 0.5,\n            width: 1250,\n            height: 1250,\n            convertSize: 0,\n            success: async (imageCompressed) => {\n              const reader = new FileReader();\n              if (imageCompressed.size / 1000000 < 6) {\n                imageFile = imageCompressed;\n                reader.readAsDataURL(imageCompressed);\n                reader.onload = async (e: any) => {\n                  this.imageList.push({\n                    image_url: e.target.result,\n                    imageBlob: await (await fetch(e.target.result)).blob(),\n                    isNew: true,\n                  });\n                  this.imageToCrop = e.target.result;\n                  //@ts-ignore\n                  fileInput.value = null;\n                };\n              } else {\n                alert(\"Reduza o tamanho de imagem e tente novamente.\");\n              }\n            },\n            error(err) {\n              console.log(\"erro comprimindo imagem\", err.message);\n            },\n          });\n        } else {\n          alert(\"Reduza o tamanho de imagem e tente novamente.\");\n        }\n      }\n    }\n  }\n});\n</script>\n\n<style scoped lang=\"scss\">\n.product-create-or-edit-images {\n  &__info {\n    width: 100%;\n    max-width: 527px;\n\n    background-color: rgba(0, 0, 0, 0.05);\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.1);\n\n    border-radius: 1px 3px 3px 1px;\n    border-left: 2px solid $primary;\n\n    font-size: .75rem;\n\n    line-height: 1;\n\n    text-align: justify;\n\n    span.material-icons {\n      color: $primary;\n    }\n\n    &__text {\n      color: rgba(0, 0, 0, 0.8);\n    }\n  }\n\n  &__image-specs {\n    li {\n      font-size: 0.75rem !important;\n      color: rgba(0, 0, 0, 0.8);\n    }\n  }\n}\n</style>"]}]}