{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/AstaPrecifique/src/components/HeaderSeller/HeaderSeller.vue?vue&type=template&id=10d47dcf&scoped=true&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/components/HeaderSeller/HeaderSeller.vue","mtime":1696982918093},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673370389594},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}