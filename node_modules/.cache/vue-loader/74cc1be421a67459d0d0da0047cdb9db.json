{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aline/AstaPrecifique/src/components/box/Frete/frete.view.html?vue&type=template&id=afe2e93e&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/components/box/Frete/frete.view.html","mtime":1675112993815},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}