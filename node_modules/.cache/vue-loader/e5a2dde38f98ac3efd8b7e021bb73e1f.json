{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/AstaPrecifique/src/components/logo-modal/logo-image-cropper.vue?vue&type=style&index=0&id=c730e8c6&lang=scss&scoped=true&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/components/logo-modal/logo-image-cropper.vue","mtime":1673321154834},{"path":"/home/aline/AstaPrecifique/node_modules/css-loader/dist/cjs.js","mtime":1673370389401},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673370389594},{"path":"/home/aline/AstaPrecifique/node_modules/postcss-loader/src/index.js","mtime":1673370389569},{"path":"/home/aline/AstaPrecifique/node_modules/sass-loader/dist/cjs.js","mtime":1673370393532},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmN1c3RvbS1tb2RhbCB7CiAgICB3aWR0aDogMzJ2dzsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY1Zjk7CiAgICAKICAgIC5idG4gewogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIH0KCiAgICAuc2xpZGVyIHsKICAgICAgICB0b3A6IDZweCAhaW1wb3J0YW50OwogICAgfQoKICAgIC52YXJpYW50IHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICB9CgogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHsKICAgICAgICB3aWR0aDogMTAwdnc7CiAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICBib3JkZXItcmFkaXVzOiAwOwogICAgICAgIAogICAgICAgIC5idG4gewogICAgICAgICAgICBmb250LXNpemU6IDEycHg7CiAgICAgICAgfQoKICAgICAgICBoNCB7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSBhbmQgKG1heC13aWR0aDogMTM2MHB4KSB7CiAgICAgICAgd2lkdGg6IDQ1dnc7CiAgICB9CgogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTM2MXB4KSBhbmQgKG1heC13aWR0aDogMTYwMHB4KSB7CiAgICAgICAgd2lkdGg6IDQwdnc7CiAgICB9Cn0KCi5wcmV2aWV3LWltYWdlIHsKCn0KCi5jcm9wcGVyIHsKICAgIGhlaWdodDogNDAwcHg7CiAgICBiYWNrZ3JvdW5kOiAjZGRkZGRkOwp9CgouY3JvcHBlci1hY3Rpb25zIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjkpOwogICAgYm9yZGVyLXJhZGl1czogNnB4OwoKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7CiAgICAgICAgYm90dG9tOiA1cHg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgIH0KCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkgewogICAgICAgIGxlZnQ6IDVweDsKICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgfQp9CgouYmctYmxhY2sgewogICAgYmFja2dyb3VuZDogIzAwMDAwMDsKfQoKLmNvbnRhaW5lci1jcm9wcGVyIHsKICAgIG1heC1oZWlnaHQ6IDgwdmg7CiAgICBtaW4taGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwp9Cgo="},{"version":3,"sources":["logo-image-cropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"logo-image-cropper.vue","sourceRoot":"src/components/logo-modal","sourcesContent":["<template>\n<modal :active=\"showImageCropper\">\n    <div class=\"card custom-modal\">\n        <div class=\"card-body text-center d-flex flex-column justify-content-between\">\n          <div class=\"custom-close\" title=\"Fechar Modal de Excluir\" @click=\"$emit('closeImageCropper')\">\n            <i class=\"fas fa-times\"></i>                \n          </div>\n\n          <div>\n            <h4 class=\"font-weight-bold text-dark text-center text-uppercase\">Ajustar Imagem</h4>\n            <p class=\"text-muted text-center mb-1\">Ajuste a imagem da sua logo.</p>\n          </div>\n\n          <div v-if=\"imageToCrop !== ''\" class=\"container-cropper\">\n              <div class=\"d-flex flex-column align-items-center justify-content-center position-relative bg-black\">\n                <cropper\n                  class=\"cropper\"\n                  ref=\"cropper\"\n                  :src=\"imageToCrop\"\n                  default-boundaries=\"fill\"\n                  stencil-component=\"circle-stencil\"\n                  :stencil-size=\"{\n                    width: 300,\n                    height: 300\n                  }\"\n                  image-restriction=\"none\"\n                  @change=\"changeCrop\">\n                </cropper>\n  \n                <div class=\"d-flex align-items-center justify-content-center cropper-actions\">\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\"\n                    @click=\"setZoomCropper(0.9)\">\n                    <span class=\"material-icons\">zoom_out</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\"\n                    @click=\"setZoomCropper(1.1)\">\n                    <span class=\"material-icons\">zoom_in</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Top\" @click=\"move('top')\">\n                    <span class=\"material-icons\">arrow_upward</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Left\" @click=\"move('left')\">\n                    <span class=\"material-icons\">arrow_back</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Right\" @click=\"move('right')\">\n                    <span class=\"material-icons\">arrow_forward</span>\n                  </button>\n                  <button class=\"btn btn-link text-muted d-flex align-items-center justify-content-center\" \n                    title=\"Move Bottom\" @click=\"move('bottom')\">\n                    <span class=\"material-icons\">arrow_downward</span>\n                  </button>\n                </div>   \n                  \n              </div>\n              <div class=\"d-flex justify-content-end mt-4\">\n                <button class=\"btn btn-link text-muted\" @click=\"$emit('closeImageCropper')\">\n                  Voltar\n                </button>\n                <button class=\"btn btn-primary d-flex align-items-center\" @click=\"saveCropperImageModal()\">\n                  Salvar\n                </button>\n              </div>\n          </div>\n        </div>\n    </div>\n</modal>\n\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { Cropper, CircleStencil } from 'vue-advanced-cropper'\nexport default Vue.extend({\n  components: { Cropper, CircleStencil },\n    name: 'LogoModal',\n    props: {\n      showImageCropper: {\n        type: Boolean,\n        required: true\n      },\n      imageToCrop: {\n        type: String,\n        required: true\n      }\n    },\n    data: () => ({\n      cropper: {} as any,\n      size: {\n        width: 0,\n        height: 0\n      },\n      resultImage: '',\n      resultImageBlob: {},\n      refreshCropper: false\n    }),\n    mounted() {\n      console.log('Mounted!')\n      this.cropper = this.$refs.cropper as Cropper;\n      this.cropper.refresh()\n    },\n    methods: {\n      move(direction) {\n        this.cropper = this.$refs.cropper as Cropper;\n        if (direction === 'left') {\n          this.cropper.move(-this.size.width / 8);\n        } else if (direction === 'right') {\n          this.cropper.move(this.size.width / 8);\n        } else if (direction === 'top') {\n          this.cropper.move(0, -this.size.height / 8);\n        } else if (direction === 'bottom') {\n          this.cropper.move(0, this.size.height / 8);\n        }\n      },\n      changeCrop({coordinates, canvas}) {\n        this.cropper = this.$refs.cropper as Cropper;\n        if (!this.refreshCropper) {\n          this.cropper.refresh()\n        }\n        this.size.width = Math.round(coordinates.width);\n        this.size.height = Math.round(coordinates.height);\n        this.resultImage = canvas.toDataURL();\n      },\n      setZoomCropper(factor) {\n        this.cropper = this.$refs.cropper as Cropper;\n        this.cropper.zoom(factor);\n      },\n      async saveCropperImageModal() {\n        this.resultImageBlob = await (await fetch(this.resultImage)).blob();\n\n        this.closeCropperImageModal('success', {\n          image_url: this.resultImage,\n          uploadProgress: 0,\n          imageFile: this.resultImageBlob,\n        });\n      },\n\n      closeCropperImageModal(msg: string, imageUrl) {\n        this.$emit('uploadImage', [msg, imageUrl]);\n      }\n    },\n  })\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-modal {\n    width: 32vw;\n    background-color: #f4f5f9;\n    \n    .btn {\n        font-size: 14px;\n    }\n\n    .slider {\n        top: 6px !important;\n    }\n\n    .variant {\n        font-size: 14px;\n    }\n\n    @media screen and (max-width: 992px) {\n        width: 100vw;\n        height: 100vh;\n        border-radius: 0;\n        \n        .btn {\n            font-size: 12px;\n        }\n\n        h4 {\n            margin-top: 20px;\n        }\n    }\n\n    @media screen and (min-width: 992px) and (max-width: 1360px) {\n        width: 45vw;\n    }\n\n    @media screen and (min-width: 1361px) and (max-width: 1600px) {\n        width: 40vw;\n    }\n}\n\n.preview-image {\n\n}\n\n.cropper {\n    height: 400px;\n    background: #dddddd;\n}\n\n.cropper-actions {\n    position: absolute;\n    background: rgba(255, 255, 255, .9);\n    border-radius: 6px;\n\n    @media screen and (max-width: 992px) {\n        bottom: 5px;\n        flex-direction: row;\n    }\n\n    @media screen and (min-width: 992px) {\n        left: 5px;\n        flex-direction: column;\n    }\n}\n\n.bg-black {\n    background: #000000;\n}\n\n.container-cropper {\n    max-height: 80vh;\n    min-height: -webkit-fill-available;\n}\n\n</style>"]}]}