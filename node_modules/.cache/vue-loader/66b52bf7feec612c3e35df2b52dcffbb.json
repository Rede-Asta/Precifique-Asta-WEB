{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/components/category-modal/CategoryModal.vue?vue&type=style&index=0&id=d4d40db6&lang=scss&scoped=true&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/components/category-modal/CategoryModal.vue","mtime":1696439584329},{"path":"/home/aline/GitHub/admin-frontend/node_modules/css-loader/dist/cjs.js","mtime":1673370389401},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673370389594},{"path":"/home/aline/GitHub/admin-frontend/node_modules/postcss-loader/src/index.js","mtime":1673370389569},{"path":"/home/aline/GitHub/admin-frontend/node_modules/sass-loader/dist/cjs.js","mtime":1673370393532},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY3VzdG9tLW1vZGFsIHsKICB3aWR0aDogMzB2dzsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY5OwoKICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgewogICAgd2lkdGg6IDEwMHZ3OwogIH0KCiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHsKICAgIHdpZHRoOiA0MnZ3OwogIH0KCiAgLmN1c3RvbS1ib2R5IHsKICAgIG1heC1oZWlnaHQ6IDc1dmg7CiAgICBvdmVyZmxvdy15OiBhdXRvOwogICAgcGFkZGluZzogMXJlbSAhaW1wb3J0YW50OwoKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7CiAgICAgIG1heC1oZWlnaHQ6IDEwMHZoOwogICAgfQogIH0KCiAgLmNhcmQtdGl0bGVzIHsKICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTsKCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgewogICAgICBtYXJnaW4tYm90dG9tOiA0NXB4OwogICAgfQogIH0KCiAgLmNhcmQtdGl0bGUsCiAgLmNhcmQtc3VidGl0bGUgewogICAgZm9udC1mYW1pbHk6IFJhbGV3YXk7CiAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDsKICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsKICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7CiAgICBsZXR0ZXItc3BhY2luZzogbm9ybWFsOwogICAgY29sb3I6ICM1MjUyNTI7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQoKICAuY2FyZC10aXRsZSB7CiAgICBmb250LXNpemU6IDI4cHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgewogICAgICBmb250LXNpemU6IDI2cHg7CiAgICB9CiAgfQoKICAuY2FyZC1zdWJ0aXRsZSB7CiAgICBmb250LXNpemU6IDIwcHg7CiAgICBmb250LXdlaWdodDogbm9ybWFsOwogICAgY29sb3I6ICM1MjUyNTI7CgogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgfQogIH0KfQoKLmNhcmQtZm9ybSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBib3gtc2hhZG93OiAwIDlweCAxNXB4IC0zcHggcmdiYSg0MywgODgsIDE2NCwgMC4yMyk7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKICBib3JkZXI6IG5vbmU7Cn0KCi5mb3JtLWxhYmVsLWlucHV0IHsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5idG4tYm9yZGVyIHsKICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhOwp9CgouaGVhZGVyLXRpdGxlLAouYnRuLWFjdGlvbiB7CiAgcG9zaXRpb246IHN0aWNreTsKICBwYWRkaW5nOiAxMnB4IDA7CiAgei1pbmRleDogOTk7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKfQoKLmhlYWRlci10aXRsZSB7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICB0b3A6IC0xLjI1cmVtOwoKICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgewogICAgaDQgewogICAgICBmb250LXNpemU6IDEuNHJlbTsKICAgIH0KICB9Cn0KCi5idG4tYWN0aW9uIHsKICBib3R0b206IC0xLjI1cmVtOwp9CgouY3VzdG9tLWNsb3NlIHsKICB6LWluZGV4OiA5OTk7CgogIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7CiAgICB0b3A6IDEwcHg7CiAgICByaWdodDogMTBweDsKICB9Cn0K"},{"version":3,"sources":["CategoryModal.vue"],"names":[],"mappingskBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CategoryModal.vue","sourceRoot":"src/components/category-modal","sourcesContent":["<template>\n  <modal :active=\"showCreateCategory || showEditCategory || isCategoryService\">\n    <section class=\"card custom-modal\">\n      <div class=\"card-body custom-body\">\n        <div class=\"custom-close\" title=\"Fechar Modal\" @click=\"closeCategoryModal()\">\n          <i class=\"fas fa-times\"></i>\n        </div>\n\n        <div class=\"d-flex justify-content-center flex-column card-titles\">\n          <h4 class=\"card-title\">{{ title }}</h4>\n          <p class=\"card-subtitle\">{{ subtitle }}</p>\n        </div>\n\n        <section class=\"p-2 p-md-3 card-form\">\n          <div class=\"form-group\">\n            <label for=\"category\" class=\"form-label-input m-0 text-muted\" title=\"Campo de preencimento obrigatório\">Nome\n              da Categoria *</label>\n            <input type=\"text\" class=\"form-control\" id=\"category\" aria-describedby=\"categoryHelp\"\n              placeholder=\"Digite o Nome da Categoria*\" :class=\"{\n                'is-invalid': msgInputs.name && categorySelected.name === '',\n                'is-valid':\n                  (!msgInputs.name && categorySelected.name !== '') ||\n                  (msgInputs.name !== '' && categorySelected.name !== ''),\n              }\" v-model=\"categorySelected.name\" />\n            <small id=\"categoryHelp\" class=\"form-text m-0\" v-if=\"!isCategoryService\" :class=\"{\n              'invalid-feedback':\n                msgInputs.name && categorySelected.name === '',\n              'text-muted': !msgInputs.name,\n            }\">\n              {{\n                msgInputs.name && categorySelected.name === \"\"\n                ? msgInputs.name\n                : \"Ex: Camisas, Calça, Bebidas, Sobremesas, etc.\"\n              }}\n            </small>\n            <small id=\"categoryHelp\" class=\"form-text m-0\" v-if=\"isCategoryService\" :class=\"{\n              'invalid-feedback':\n                msgInputs.name && categorySelected.name === '',\n              'text-muted': !msgInputs.name,\n            }\">\n              {{\n                msgInputs.name && categorySelected.name === \"\"\n                ? msgInputs.name\n                : \"Ex: Mão de Obra, Consultoria, Aulas Particulares, etc\"\n              }}\n            </small>\n          </div>\n\n          <button class=\"d-flex btn btn-link align-items-center mt-3 col-12 px-0\" @click=\"deleteCategory()\"\n            v-if=\"showEditCategory\">\n            <i class=\"fas fa-trash text-danger mr-2\"></i>\n            <small class=\"text-muted m-0 click variant\">Excluir Categoria</small>\n          </button>\n\n          <div class=\"d-flex align-items-start my-3\" v-if=\"!isCategoryService\">\n            <label class=\"switch\">\n              <input id=\"variant\" type=\"checkbox\" v-model=\"categorySelected.variant_status\" />\n              <span class=\"slider round\"></span>\n            </label>\n            <label for=\"variant\" class=\"text-muted m-0 click variant\"\n              :class=\"{ 'font-weight-bold': categorySelected.variant_status }\">\n              Produto com variantes</label>\n          </div>\n\n          <section v-if=\"categorySelected.variant_status\">\n            <div class=\"form-group\">\n              <label for=\"variant-name\" class=\"form-label-input m-0 text-muted\"\n                title=\"Campo de preencimento obrigatório\">Nome da Variante *</label>\n              <input type=\"text\" class=\"form-control\" id=\"variant-name\" aria-describedby=\"variantHelp\"\n                placeholder=\"Digite o Nome da Variante*\" :class=\"{\n                  'is-invalid':\n                    msgInputs.variant_name &&\n                    categorySelected.variant_name === '',\n                  'is-valid':\n                    (!msgInputs.variant_name &&\n                      categorySelected.variant_name !== '') ||\n                    (msgInputs.variant_name !== '' &&\n                      categorySelected.variant_name !== ''),\n                }\" v-model=\"categorySelected.variant_name\" />\n              <small id=\"variantHelp\" class=\"form-text m-0\" :class=\"{\n                'invalid-feedback':\n                  msgInputs.variant_name &&\n                  categorySelected.variant_name === '',\n                'text-muted': !msgInputs.variant_name,\n              }\">\n                {{\n                  msgInputs.variant_name && categorySelected.variant_name === \"\"\n                  ? msgInputs.variant_name\n                  : \"Ex: Tamanho, Sabor, Ano, Quantidade, Cor, etc.\"\n                }}\n              </small>\n            </div>\n\n            <div v-for=\"(ops, index) in categorySelected.variant_value\" :key=\"index\">\n              <div class=\"form-group row m-1\">\n                <label :for=\"'inputOp' + index\" class=\"\n                    col-3 col-sm-3 col-md-2 col-lg-2\n                    form-label-input\n                    m-0\n                    text-muted\n                    d-flex\n                    align-items-center\n                    justify-content-start\n                    p-0\n                  \" title=\"Opção 2 (Campo obrigatório)\">Opção {{ index + 1 }}*</label>\n                <div class=\"col-9 col-sm-9 col-md-10 col-lg-10 p-0\">\n                  <div class=\"input-group\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Nome da Opção *\"\n                      aria-describedby=\"variantValueHelp\" @change=\"\n                        modifiedOpt(categorySelected.variant_value[index])\n                        \" :id=\"'inputOp' + index\" :class=\"{\n    'is-invalid':\n      msgInputs.variant_value[index] &&\n      categorySelected.variant_value[index].value === '',\n    'is-valid':\n      (!msgInputs.variant_value[index] &&\n        categorySelected.variant_value[index].value !==\n        '') ||\n      (!msgInputs.variant_value[index] &&\n        categorySelected.variant_value[index].value !== ''),\n  }\" v-model=\"categorySelected.variant_value[index].value\" required />\n                    <div class=\"input-group-append\">\n                      <button class=\"btn btn-outline-light d-flex btn-border\" @click=\"\n                        removeNewOpt(\n                          index,\n                          categorySelected.variant_value[index]\n                        )\n                        \" v-if=\"categorySelected.variant_value.length > 2\">\n                        <span class=\"material-icons text-danger\">remove_circle</span>\n                      </button>\n                    </div>\n                  </div>\n                  <small id=\"variantValueHelp\" class=\"form-text m-0\" :class=\"{\n                    'invalid-feedback d-block':\n                      msgInputs.variant_value[index] &&\n                      categorySelected.variant_value[index].value === '',\n                    'text-muted': !msgInputs.variant_value[index],\n                  }\">\n                    {{\n                      msgInputs.variant_value[index] &&\n                      categorySelected.variant_value[index].value === \"\"\n                      ? msgInputs.variant_value[index]\n                      : \"Ex: P, M, G, 250ml, 1L, Azul, Verde, etc.\"\n                    }}\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            <button class=\"d-flex btn btn-link align-items-center mt-3 col-12 px-0\" @click=\"addNewOpt()\"\n              v-if=\"categorySelected.variant_value.length < 10\">\n              <span class=\"material-icons mr-2\">add_circle</span>\n              <small class=\"text-muted m-0 click variant\">Adicionar mais uma opção</small>\n            </button>\n          </section>\n\n          <div class=\"d-flex justify-content-center mt-4 btn-action\">\n            <button class=\"btn btn-primary w-100\" @click=\"saveCategory()\">\n              <i class=\"fas fa-folder-plus mr-2 fa-lg\"></i>\n              {{ titleBtn }}\n            </button>\n          </div>\n        </section>\n      </div>\n    </section>\n\n    <categoryDelete v-if=\"showDeleteCategory\" :propCategorySelected=\"categorySelected\"\n      :propShowDeleteCategory=\"showDeleteCategory\" v-on:closeDeleteCategoryModal=\"closeDeleteCategoryModal()\"\n      v-on:closeAllModal=\"closeCategoryModal()\" v-on:getCategories=\"getCategories($event)\"\n      v-on:loading=\"loading($event)\" />\n\n    <categoryConfirmEditVariant v-if=\"showConfirmEditVariant\" :propShowConfirmEditVariant=\"showConfirmEditVariant\"\n      :propDeletedAllVariants=\"deletedAllVariants\" v-on:closeConfirmEditVariant=\"closeConfirmEditVariant()\"\n      v-on:confirmEditVariant=\"confirmEditVariant()\" />\n  </modal>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport VueSimpleAlert from \"vue-simple-alert\";\nimport Swal, { SweetAlertType } from \"sweetalert2\";\n\nimport {\n  Category,\n  ICategory,\n  NotificationCategory,\n  VariantValue,\n} from \"@/models/category\";\nimport Seller from \"@/models/seller\";\nimport categoryService from \"@/services/category.service\";\nimport mixpanel from \"mixpanel-browser\";\n\n@Component({})\nexport class CategoryModal extends Vue {\n  @Prop() propCategorySelected!: Category;\n  @Prop() propLoggedUser!: Seller;\n  @Prop() propCreateCategory!: boolean;\n  @Prop() propEditCategory!: boolean;\n  @Prop() propIsCategoryService!: boolean;\n\n  public categorySelected: Category = this.propCategorySelected;\n  public categoryHasVariant: boolean | undefined =\n    this.categorySelected.variant_status;\n  public loggedUser: Seller = this.propLoggedUser;\n  public showEditCategory: boolean = this.propEditCategory;\n  public isCategoryService: boolean = this.propIsCategoryService;\n  public showCreateCategory: boolean = this.propCreateCategory;\n\n  public showConfirmEditVariant: boolean = false;\n  public deletedAllVariants: boolean = false;\n\n  public showDeleteCategory: boolean = false;\n  public title: string = \"\";\n  public subtitle: string = \"\";\n  public titleBtn: string = \"\";\n  public msgError: string = \"\";\n\n  public variantDelete: VariantValue[] = [];\n  public variantEdit: VariantValue[] = [];\n  public variantCreate: string[] = [];\n\n  public msgInputs: NotificationCategory = {\n    name: \"\",\n    variant_name: \"\",\n    variant_value: [],\n  };\n\n  private categoryService = new categoryService();\n\n  constructor() {\n    super();\n  }\n\n  created() {\n    if (this.showCreateCategory && !this.showEditCategory) {\n      this.setTitles(\n        \"Adicionar Categoria\",\n        \"Insira o nome da categoria e suas variantes\",\n        \"Salvar Categoria\"\n      );\n    } else if (this.showEditCategory) {\n      this.setTitles(\n        \"Editar Categoria\",\n        \"Edite o nome da categoria e suas variantes\",\n        \"Atualizar Categoria\"\n      );\n    }\n  }\n\n  private setTitles(title: string, subtitle: string, titleBtn: string) {\n    this.title = title;\n    this.subtitle = subtitle;\n    this.titleBtn = titleBtn;\n  }\n\n  public addNewOpt = () =>\n    this.categorySelected.variant_value.push({ value: \"\" });\n\n  public modifiedOpt(variantValue: VariantValue) {\n    if (\n      variantValue.guid &&\n      !this.variantEdit.find((variant) => variant.guid === variantValue.guid)\n    ) {\n      this.variantEdit.push(variantValue);\n    } else {\n      const variantIndex = this.variantEdit.findIndex(\n        (variant) => variant.guid === variantValue.guid\n      );\n\n      this.variantEdit[variantIndex].value = variantValue.value;\n    }\n  }\n\n  public removeNewOpt(index: number, variant: VariantValue) {\n    if (this.categorySelected.variant_value[index].value !== \"\") {\n      this.variantDelete.push(variant);\n    }\n    this.categorySelected.variant_value.splice(index, 1);\n  }\n\n  public saveCategory() {\n    this.validateAddCategory();\n    if (this.validateInputs()) {\n      if (this.showCreateCategory || this.isCategoryService) {\n        this.createCategory(this.setCategory(this.categorySelected));\n      } else {\n        this.removeDuplicate(this.categorySelected.variant_value)\n          .filter((variant) => !variant.guid)\n          .forEach((val) => {\n            this.variantCreate.push(val.value);\n          });\n\n        if (\n          this.variantCreate.length ||\n          this.variantDelete.length ||\n          this.categoryHasVariant !== this.categorySelected.variant_status\n        ) {\n          this.openConfirmEditModal();\n        } else {\n          if (this.variantCreate.length) {\n            this.createCategoryVariant();\n          }\n\n          if (this.variantDelete.length) {\n            this.deleteCategoryVariant();\n          }\n\n          if (this.variantEdit.length) {\n            this.editCategoryVariant();\n          }\n\n          this.editCategory(\n            this.setCategory(\n              this.categorySelected,\n              this.categorySelected.ordering\n            ),\n            this.categorySelected.guid\n          );\n        }\n      }\n    }\n  }\n\n  private openConfirmEditModal() {\n    if (!this.categorySelected.variant_status) {\n      this.deletedAllVariants = true;\n    }\n\n    this.showConfirmEditVariant = true;\n  }\n\n  private setCategory(category: ICategory, ordering: number = 100) {\n    if (category.variant_status) {\n      return {\n        name: category.name,\n        ordering,\n        variant_name: category.variant_name,\n        variant_status: category.variant_status,\n        variant_value: this.showCreateCategory\n          ? this.setCreateVariantValue(category.variant_value)\n          : category.variant_value,\n        register_type: this.isCategoryService ? \"Service\" : \"Product\",\n      };\n    } else {\n      return {\n        name: category.name,\n        ordering,\n        variant_status: category.variant_status,\n        register_type: this.isCategoryService ? \"Service\" : \"Product\",\n      };\n    }\n  }\n\n  private setCreateVariantValue(\n    variantValue: VariantValue[] = []\n  ): VariantValue[] {\n    const values: VariantValue[] = [];\n    variantValue.map((variant) => values.push({ value: variant.value }));\n    return values;\n  }\n\n  private validateAddCategory() {\n    this.resetMsgInputs();\n    [\"name\", \"variant_name\", \"variant_value\"].forEach((value) =>\n      this.checkInputs(value)\n    );\n  }\n\n  private checkInputs(categoryKey: string) {\n    if (categoryKey === \"variant_value\") {\n      this.checkVariantValue().find((value) => {\n        value >= 0\n          ? (this.msgInputs[categoryKey][value] = `A Opção ${value + 1\n            } é de preenchimento obrigatório`)\n          : (this.msgInputs[categoryKey][value] = \"\");\n      });\n    } else if (this.categorySelected[categoryKey] === \"\") {\n      this.msgInputs[categoryKey] = \"Este campo é de preenchimento obrigatório\";\n    }\n  }\n\n  private checkVariantValue(): number[] {\n    const valueIndex: number[] = [];\n    this.categorySelected.variant_value.forEach((value, index: number) => {\n      if (this.categorySelected.variant_value[index].value === \"\") {\n        valueIndex.push(index);\n      }\n    });\n    return valueIndex;\n  }\n\n  private createCategoryMixpanel() {\n    mixpanel.track(\"Create_Category_Product\", {\n\n    });\n\n    console.log(\"Create Category\")\n   \n\n  }\n\n\n    private validateInputs(): boolean {\n  let validateInput: boolean = false;\n  if (\n    this.categorySelected.name !== \"\" &&\n    (!this.categorySelected.variant_status || this.showEditCategory)\n  ) {\n    validateInput = true;\n  }\n  if (\n    this.categorySelected.variant_status &&\n    this.categorySelected.name !== \"\" &&\n    this.categorySelected.variant_name !== \"\" &&\n    !this.checkVariantValue().length\n  ) {\n    validateInput = true;\n  }\n  return validateInput;\n}\n\n    private resetMsgInputs() {\n  this.msgInputs = {\n    name: \"\",\n    variant_name: \"\",\n    variant_value: [],\n  };\n}\n\n    private createCategory(category: ICategory) {\n  this.categoryService\n    .createCategory(category, this.loggedUser.slug)\n    .then((data) => {\n      switch (data.status) {\n        case 201:\n        this.createCategoryMixpanel()\n          this.nextStatusSuccess(\n            `A Categoria ${category.name} foi cadastrada.`\n          );\n          break;\n\n        case 202:\n        this.createCategoryMixpanel()\n\n          data\n            .json()\n            .then((response) => this.editCategory(category, response.guid));\n          break;\n\n        case 304:\n          this.nextStatusError(\n            `A Categoria ${category.name} já está cadastrada.`\n          );\n          break;\n\n        default:\n          this.nextStatusDefault(\n            `Desculpe, ocorreu algum erro ao cadastrar a Categoria ${category.name}, por favor tente novamente mais tarde`\n          );\n          break;\n      }\n    });\n}\n\n    private async editCategory(category: ICategory, guid: string) {\n  const response = await this.categoryService.updateCategory(category, guid);\n  this.editResponse(response, category);\n}\n\n    private editCategoryVariant = async () =>\n  await this.categoryService.updateCategoryVariant(\n    this.variantEdit,\n    this.categorySelected.guid\n  );\n\n    private deleteCategoryVariant = async () =>\n  await this.categoryService.deleteCategoryVariant(\n    this.removeDuplicate(this.variantDelete),\n    this.categorySelected.guid\n  );\n\n    private createCategoryVariant = async () =>\n  await this.categoryService.createCategoryVariant(\n    this.variantCreate,\n    this.categorySelected.guid\n  );\n\n    private removeDuplicate = (array: VariantValue[]) =>\n  array.filter(\n    (arr) => !this[JSON.stringify(arr)] && (this[JSON.stringify(arr)] = true),\n    Object.create(null)\n  );\n\n    private editResponse(response: Response, category: ICategory) {\n  switch (response.status) {\n    case 202:\n      this.nextStatusSuccess(`A Categoria ${category.name} foi atualizada.`);\n      break;\n\n    case 304:\n      this.nextStatusError(\n        `A Categoria ${category.name} já está cadastrada.`\n      );\n      break;\n\n    default:\n      this.nextStatusDefault(\n        `Desculpe, ocorreu algum erro ao editar a Categoria ${category.name}, por favor tente novamente mais tarde`\n      );\n      break;\n  }\n}\n\n    private nextStatusSuccess(msg: string) {\n  this.loading(false);\n  this.getCategories(true);\n  this.toastMessage(\"success\", msg);\n  this.closeCategoryModal();\n}\n\n    private nextStatusError(msg: string) {\n  this.loading(false);\n  this.msgError = msg;\n  this.toastMessage(\"error\", msg);\n}\n\n    private nextStatusDefault(msg: string) {\n  this.loading(false);\n  this.toastMessage(\"error\", msg);\n}\n\n    public loading($event) {\n  this.$emit(\"loading\", $event);\n}\n\n    public getCategories($event) {\n  this.$emit(\"getCategories\", true);\n}\n\n    public closeCategoryModal() {\n  this.$emit(\"closeCategoryModal\", true);\n}\n\n    private toastMessage(type: SweetAlertType, title: string) {\n  VueSimpleAlert.fire({\n    type,\n    title,\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: 3000,\n    onOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer),\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  });\n}\n\n    public deleteCategory() {\n  this.showDeleteCategory = true;\n}\n\n    public closeDeleteCategoryModal() {\n  this.showDeleteCategory = false;\n}\n\n    public confirmEditVariant() {\n  if (this.variantCreate.length) {\n    this.createCategoryVariant();\n  }\n\n  if (this.variantDelete.length) {\n    this.deleteCategoryVariant();\n  }\n\n  this.editCategory(\n    this.setCategory(this.categorySelected, this.categorySelected.ordering),\n    this.categorySelected.guid\n  );\n}\n\n    public closeConfirmEditVariant() {\n  this.showConfirmEditVariant = false;\n}\n  }\n\nexport { CategoryModal as default };\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-modal {\n  width: 30vw;\n  background-color: #f4f5f9;\n\n  @media screen and (max-width: 992px) {\n    width: 100vw;\n  }\n\n  @media screen and (min-width: 992px) and (max-width: 1400px) {\n    width: 42vw;\n  }\n\n  .custom-body {\n    max-height: 75vh;\n    overflow-y: auto;\n    padding: 1rem !important;\n\n    @media screen and (max-width: 992px) {\n      max-height: 100vh;\n    }\n  }\n\n  .card-titles {\n    margin-bottom: 1.5rem;\n\n    @media screen and (max-width: 992px) {\n      margin-bottom: 45px;\n    }\n  }\n\n  .card-title,\n  .card-subtitle {\n    font-family: Raleway;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #525252;\n    text-align: center;\n  }\n\n  .card-title {\n    font-size: 28px;\n    font-weight: bold;\n\n    @media screen and (max-width: 992px) {\n      font-size: 26px;\n    }\n  }\n\n  .card-subtitle {\n    font-size: 20px;\n    font-weight: normal;\n    color: #525252;\n\n    @media screen and (max-width: 992px) {\n      font-size: 16px;\n    }\n  }\n}\n\n.card-form {\n  position: relative;\n  border-radius: 6px;\n  box-shadow: 0 9px 15px -3px rgba(43, 88, 164, 0.23);\n  background-color: #ffffff;\n  border: none;\n}\n\n.form-label-input {\n  font-size: 14px;\n}\n\n.btn-border {\n  border: 1px solid #ced4da;\n}\n\n.header-title,\n.btn-action {\n  position: sticky;\n  padding: 12px 0;\n  z-index: 99;\n  background-color: #ffffff;\n}\n\n.header-title {\n  flex-direction: column;\n  top: -1.25rem;\n\n  @media screen and (max-width: 992px) {\n    h4 {\n      font-size: 1.4rem;\n    }\n  }\n}\n\n.btn-action {\n  bottom: -1.25rem;\n}\n\n.custom-close {\n  z-index: 999;\n\n  @media screen and (max-width: 992px) {\n    top: 10px;\n    right: 10px;\n  }\n}\n</style>"]}]}