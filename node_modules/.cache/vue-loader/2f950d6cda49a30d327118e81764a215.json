{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/components/register-seller/precifique-code-form/PrecifiqueCodeForm.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/components/register-seller/precifique-code-form/PrecifiqueCodeForm.vue","mtime":1697735364461},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgppbXBvcnQgeyBJbnB1dEZvcm1zLCBUeXBlSGVscCB9IGZyb20gIkAvbW9kZWxzL2lucHV0Rm9ybXMiOwoKaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wLCBWdWUgfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKCkBDb21wb25lbnQoe30pCmV4cG9ydCBjbGFzcyBQcmVjaWZpcXVlQ29kZUZvcm0gZXh0ZW5kcyBWdWUgewogIEBQcm9wKCkgcHJvcEFycmF5SW5wdXRzITogSW5wdXRGb3Jtc1tdOwoKICBwdWJsaWMgYXJyYXlJbnB1dHM6IElucHV0Rm9ybXNbXSA9IHRoaXMucHJvcEFycmF5SW5wdXRzOwogIHB1YmxpYyByZWdQaG9uZSA9IC8oXGR7Mn0pKFxkezV9KShcZHs0fSkvOwogIHByaXZhdGUgcmVnaXN0ZXJTZXJ2aWNlID0gbmV3IFJlZ2lzdGVyU2VsbGVyU2VydmljZSgpOwoKICBwdWJsaWMgdmFsaWRhdGVJbnB1dHMoaW5wdXRzOiBJbnB1dEZvcm1zW10pIHsKICAgIGNvbnN0IHN0ZXBNb2RlbCA9IGlucHV0cy5tYXAoKGlucHV0KSA9PiBpbnB1dC5tb2RlbCk7CiAgICB0aGlzLmNoZWNrVXNlcihzdGVwTW9kZWxbMF0pOwogIH0KCiAgY2hlY2tVc2VyKHZhbHVlOiBzdHJpbmcpIHsKICAgIGNvbnN0IHJlZyA9IC9bYS16QS1aXHUwMEMwLVx1MDBGRiBdKy9pOwoKICAgIGlmIChyZWcudGVzdCh2YWx1ZSkgJiYgdmFsdWUuaW5jbHVkZXMoIkAiKSkgewogICAgICB0aGlzLmFycmF5SW5wdXRzWzBdLnR5cGUgPSAiZW1haWwiOwogICAgICB0aGlzLnZhbGlkYXRlU2VsbGVyKHsgcGhvbmU6ICIiLCBlbWFpbDogdmFsdWUgfSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmFycmF5SW5wdXRzWzBdLnR5cGUgPSAidGV4dCI7CiAgICAgIHRoaXMuYXJyYXlJbnB1dHNbMF0ubW9kZWwgPSB0aGlzLmFkZE1hc2sodmFsdWUpOwogICAgICB0aGlzLnZhbGlkYXRlU2VsbGVyKHsgcGhvbmU6IHRoaXMucmVtb3ZlTWFzayh2YWx1ZSksIGVtYWlsOiAiIiB9KTsKICAgIH0KCiAgICB0aGlzLiRlbWl0KCJzdGVwTW9kZWxMb2dpbiIsIHRoaXMuYXJyYXlJbnB1dHNbMF0ubW9kZWwpOwogIH0KCiAgcHJpdmF0ZSBhZGRNYXNrKG1vYmlsZTogc3RyaW5nKSB7CiAgICByZXR1cm4gbW9iaWxlLnJlcGxhY2UoCiAgICAgIHRoaXMucmVnUGhvbmUsCiAgICAgIChyZWdleCwgYXJnMSwgYXJnMiwgYXJnMykgPT4gYCgke2FyZzF9KSAke2FyZzJ9LSR7YXJnM31gCiAgICApOwogIH0KCiAgcHJpdmF0ZSByZW1vdmVNYXNrKG1vYmlsZSkgewogICAgcmV0dXJuIG1vYmlsZS5yZXBsYWNlKC9bXjAtOV0vZywgIiIpOwogIH0KCiAgcHJpdmF0ZSBhc3luYyB2YWxpZGF0ZVNlbGxlcih2YWx1ZTogeyBwaG9uZTogc3RyaW5nOyBlbWFpbDogc3RyaW5nIH0pIHsKICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZWdpc3RlclNlcnZpY2UudmFsaWRhdGVTZWxsZXIodmFsdWUpOwogICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgIHZhbHVlLnBob25lCiAgICAgID8gdGhpcy5jaGVja1Bob25lKGRhdGEucGhvbmUsIHRoaXMuYXJyYXlJbnB1dHMpCiAgICAgIDogdGhpcy5jaGVja0VtYWlsKGRhdGEuZW1haWwsIHRoaXMuYXJyYXlJbnB1dHMpOwogIH0KCiAgcHJpdmF0ZSBjaGVja1Bob25lKGRhdGE6IGJvb2xlYW4sIGlucHV0czogSW5wdXRGb3Jtc1tdKSB7CiAgICAhZGF0YQogICAgICA/IHRoaXMuc2V0SGVscChpbnB1dHMsIDAsICJPayIsICJ2YWxpZCIpCiAgICAgIDogdGhpcy5zZXRIZWxwKAogICAgICAgICAgaW5wdXRzLAogICAgICAgICAgMCwKICAgICAgICAgICJWZW5kZWRvciBjb20gZXN0ZSBOw7ptZXJvIHBhcmEgY29udGF0byBuw6NvIGV4aXN0ZS4iLAogICAgICAgICAgImludmFsaWQiCiAgICAgICAgKTsKICB9CiAgcHJpdmF0ZSBjaGVja0VtYWlsKGRhdGE6IGJvb2xlYW4sIGlucHV0czogSW5wdXRGb3Jtc1tdKSB7CiAgICAhZGF0YQogICAgICA/IHRoaXMuc2V0SGVscChpbnB1dHMsIDAsICJPayIsICJ2YWxpZCIpCiAgICAgIDogdGhpcy5zZXRIZWxwKAogICAgICAgICAgaW5wdXRzLAogICAgICAgICAgMCwKICAgICAgICAgICJWZW5kZWRvciBjb20gZXN0ZSBFbWFpbCBuw6NvIGV4aXN0ZS4iLAogICAgICAgICAgImludmFsaWQiCiAgICAgICAgKTsKICB9CgogIHByaXZhdGUgc2V0SGVscCgKICAgIGlucHV0czogSW5wdXRGb3Jtc1tdLAogICAgaW5kZXg6IG51bWJlciwKICAgIGhlbHBNc2c6IHN0cmluZywKICAgIHR5cGU6IFR5cGVIZWxwCiAgKSB7CiAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgY2FzZSAidmFsaWQiOgogICAgICAgIHRoaXMuc2V0Q2xhc3NBbmRIZWxwKGlucHV0cywgaW5kZXgsICJoZWxwIiwgaGVscE1zZyk7CiAgICAgICAgdGhpcy5zZXRDbGFzc0FuZEhlbHAoCiAgICAgICAgICBpbnB1dHMsCiAgICAgICAgICBpbmRleCwKICAgICAgICAgICJjbGFzc0hlbHAiLAogICAgICAgICAgImZvcm0tdGV4dCB2YWxpZC1mZWVkYmFjayIKICAgICAgICApOwogICAgICAgIHRoaXMuc2V0Q2xhc3NBbmRIZWxwKAogICAgICAgICAgaW5wdXRzLAogICAgICAgICAgaW5kZXgsCiAgICAgICAgICAiY2xhc3NJbnB1dCIsCiAgICAgICAgICAiZm9ybS1jb250cm9sIGlzLXZhbGlkIgogICAgICAgICk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgImludmFsaWQiOgogICAgICAgIHRoaXMuc2V0Q2xhc3NBbmRIZWxwKGlucHV0cywgaW5kZXgsICJoZWxwIiwgaGVscE1zZyk7CiAgICAgICAgdGhpcy5zZXRDbGFzc0FuZEhlbHAoCiAgICAgICAgICBpbnB1dHMsCiAgICAgICAgICBpbmRleCwKICAgICAgICAgICJjbGFzc0hlbHAiLAogICAgICAgICAgImZvcm0tdGV4dCBpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICk7CiAgICAgICAgdGhpcy5zZXRDbGFzc0FuZEhlbHAoCiAgICAgICAgICBpbnB1dHMsCiAgICAgICAgICBpbmRleCwKICAgICAgICAgICJjbGFzc0lucHV0IiwKICAgICAgICAgICJmb3JtLWNvbnRyb2wgaXMtaW52YWxpZCIKICAgICAgICApOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICJub3JtYWwiOgogICAgICAgIHRoaXMuc2V0Q2xhc3NBbmRIZWxwKGlucHV0cywgaW5kZXgsICJoZWxwIiwgaGVscE1zZyk7CiAgICAgICAgdGhpcy5zZXRDbGFzc0FuZEhlbHAoCiAgICAgICAgICBpbnB1dHMsCiAgICAgICAgICBpbmRleCwKICAgICAgICAgICJjbGFzc0hlbHAiLAogICAgICAgICAgImZvcm0tdGV4dCB0ZXh0LW11dGVkIgogICAgICAgICk7CiAgICAgICAgdGhpcy5zZXRDbGFzc0FuZEhlbHAoaW5wdXRzLCBpbmRleCwgImNsYXNzSW5wdXQiLCAiZm9ybS1jb250cm9sIik7CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBwcml2YXRlIHNldENsYXNzQW5kSGVscCgKICAgIGlucHV0czogSW5wdXRGb3Jtc1tdLAogICAgaW5kZXg6IG51bWJlciwKICAgIG5hbWU6IHN0cmluZywKICAgIHZhbHVlOiBzdHJpbmcKICApIHsKICAgIGlucHV0c1tpbmRleF1bbmFtZV0gPSB2YWx1ZTsKICB9Cn0KCmV4cG9ydCB7IFByZWNpZmlxdWVDb2RlRm9ybSBhcyBkZWZhdWx0IH07Cg=="},{"version":3,"sources":["PrecifiqueCodeForm.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"PrecifiqueCodeForm.vue","sourceRoot":"src/components/register-seller/precifique-code-form","sourcesContent":["<template>\n  <section id=\"login\" class=\"col-12 col-xl-10 mx-auto my-4\">\n    <input-form\n      v-if=\"arrayInputs\"\n      :propArrayInputs=\"arrayInputs\"\n      v-on:validateInputs=\"validateInputs\"\n    />\n  </section>\n</template>\n\n<script lang=\"ts\">\n  import { InputForms, TypeHelp } from \"@/models/inputForms\";\n\n  import { Component, Prop, Vue } from \"vue-property-decorator\";\n\n  @Component({})\n  export class PrecifiqueCodeForm extends Vue {\n    @Prop() propArrayInputs!: InputForms[];\n\n    public arrayInputs: InputForms[] = this.propArrayInputs;\n    public regPhone = /(\\d{2})(\\d{5})(\\d{4})/;\n    private registerService = new RegisterSellerService();\n\n    public validateInputs(inputs: InputForms[]) {\n      const stepModel = inputs.map((input) => input.model);\n      this.checkUser(stepModel[0]);\n    }\n\n    checkUser(value: string) {\n      const reg = /[a-zA-Z\\u00C0-\\u00FF ]+/i;\n\n      if (reg.test(value) && value.includes(\"@\")) {\n        this.arrayInputs[0].type = \"email\";\n        this.validateSeller({ phone: \"\", email: value });\n      } else {\n        this.arrayInputs[0].type = \"text\";\n        this.arrayInputs[0].model = this.addMask(value);\n        this.validateSeller({ phone: this.removeMask(value), email: \"\" });\n      }\n\n      this.$emit(\"stepModelLogin\", this.arrayInputs[0].model);\n    }\n\n    private addMask(mobile: string) {\n      return mobile.replace(\n        this.regPhone,\n        (regex, arg1, arg2, arg3) => `(${arg1}) ${arg2}-${arg3}`\n      );\n    }\n\n    private removeMask(mobile) {\n      return mobile.replace(/[^0-9]/g, \"\");\n    }\n\n    private async validateSeller(value: { phone: string; email: string }) {\n      const response = await this.registerService.validateSeller(value);\n      const data = await response.json();\n      value.phone\n        ? this.checkPhone(data.phone, this.arrayInputs)\n        : this.checkEmail(data.email, this.arrayInputs);\n    }\n\n    private checkPhone(data: boolean, inputs: InputForms[]) {\n      !data\n        ? this.setHelp(inputs, 0, \"Ok\", \"valid\")\n        : this.setHelp(\n            inputs,\n            0,\n            \"Vendedor com este Número para contato não existe.\",\n            \"invalid\"\n          );\n    }\n    private checkEmail(data: boolean, inputs: InputForms[]) {\n      !data\n        ? this.setHelp(inputs, 0, \"Ok\", \"valid\")\n        : this.setHelp(\n            inputs,\n            0,\n            \"Vendedor com este Email não existe.\",\n            \"invalid\"\n          );\n    }\n\n    private setHelp(\n      inputs: InputForms[],\n      index: number,\n      helpMsg: string,\n      type: TypeHelp\n    ) {\n      switch (type) {\n        case \"valid\":\n          this.setClassAndHelp(inputs, index, \"help\", helpMsg);\n          this.setClassAndHelp(\n            inputs,\n            index,\n            \"classHelp\",\n            \"form-text valid-feedback\"\n          );\n          this.setClassAndHelp(\n            inputs,\n            index,\n            \"classInput\",\n            \"form-control is-valid\"\n          );\n          break;\n        case \"invalid\":\n          this.setClassAndHelp(inputs, index, \"help\", helpMsg);\n          this.setClassAndHelp(\n            inputs,\n            index,\n            \"classHelp\",\n            \"form-text invalid-feedback\"\n          );\n          this.setClassAndHelp(\n            inputs,\n            index,\n            \"classInput\",\n            \"form-control is-invalid\"\n          );\n          break;\n        case \"normal\":\n          this.setClassAndHelp(inputs, index, \"help\", helpMsg);\n          this.setClassAndHelp(\n            inputs,\n            index,\n            \"classHelp\",\n            \"form-text text-muted\"\n          );\n          this.setClassAndHelp(inputs, index, \"classInput\", \"form-control\");\n          break;\n      }\n    }\n\n    private setClassAndHelp(\n      inputs: InputForms[],\n      index: number,\n      name: string,\n      value: string\n    ) {\n      inputs[index][name] = value;\n    }\n  }\n\n  export { PrecifiqueCodeForm as default };\n</script>\n\n<style lang=\"scss\" scoped></style>"]}]}