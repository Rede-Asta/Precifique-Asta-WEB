{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aline/AstaPrecifique/src/views/Cupon/CuponCreateOrEditInfo.vue?vue&type=style&index=0&id=7ac22f50&scoped=true&lang=scss&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/views/Cupon/CuponCreateOrEditInfo.vue","mtime":1696439584697},{"path":"/home/aline/AstaPrecifique/node_modules/css-loader/dist/cjs.js","mtime":1673370389401},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673370389594},{"path":"/home/aline/AstaPrecifique/node_modules/postcss-loader/src/index.js","mtime":1673370389569},{"path":"/home/aline/AstaPrecifique/node_modules/sass-loader/dist/cjs.js","mtime":1673370393532},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/index.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgewogIC5jdXN0b20tY29udHJvbC1sYWJlbCB7CiAgICBjb2xvcjogIzUzNTU1NkU1OwogICAgZm9udC1zaXplOiAxcmVtOwogICAgZm9udC13ZWlnaHQ6IDcwMDsKICB9Cn0KCi5wcm9kdWN0LWNyZWF0ZS1pbmZvIHsKICAmX19vdXRsaW5lLWJ0biB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkcHJpbWFyeTsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKCiAgICBjb2xvcjogJHByaW1hcnk7CiAgICBmb250LXNpemU6IC42MjVyZW07CgogICAgcGFkZGluZzogNXB4OwogICAgbWFyZ2luLXRvcDogY2FsYygxcmVtICsgOHB4KTsKCiAgICBoZWlnaHQ6IDM0cHg7CgogICAgJi0tY2xlYXIgewogICAgICBib3JkZXItcmFkaXVzOiA1MCU7CgogICAgICAkY2xlYXItY29sb3I6ICNmZmY7CgogICAgICBjb2xvcjogJGNsZWFyLWNvbG9yOwogICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OwoKICAgICAgd2lkdGg6IDI4cHg7CiAgICAgIGhlaWdodDogMjhweDsKICAgICAgbWFyZ2luLXRvcDogY2FsYygxcmVtICsgMTNweCk7CgogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeTsKCiAgICAgIHNwYW4gewogICAgICAgIGxpbmUtaGVpZ2h0OiAxOwogICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgfQoKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICB9CgogICAgCiAgfQoKICBzZWxlY3QgewogICAgcGFkZGluZzogMTBweCA4cHg7CiAgfQoKICBsYWJlbHsKICAgIG1hcmdpbi10b3A6IDMlOwogIH0KCiAgJl9fZGFzaCB7CiAgICBtYXJnaW4tdG9wOiBjYWxjKDFyZW0gKyA4cHggKyAxOHB4KTsKICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgwLCAwLCAwLCAwLjAyKSAwJSwgcmdiYSgwLCAwLCAwLCAwLjIpIDUxLjU2JSwgcmdiYSgwLCAwLCAwLCAwLjAyKSAxMDAlKTsKICAgIGhlaWdodDogMXB4OwogICAgd2lkdGg6IDIwcHg7CiAgfQoKICAmX19za3UgewogICAgJi0tdmFyaWFudC10aXRsZSB7CiAgICAgIHNwYW4gewogICAgICAgIGNvbG9yOiAjNTM1NTU2RTU7CiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgICAgfQogICAgfQogIH0KfQojY3Vwb25EaXNjb3VudCwgI21pbmltdW1WYWx1ZXsKICB3aWR0aDogMjAlOwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQojY3Vwb25zTnVtYmVyewogIHdpZHRoOiAxMDAlOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3JkZXItY29sb3I6IGdyYXk7Cn0K"},{"version":3,"sources":["CuponCreateOrEditInfo.vue"],"names":[],"mappingsshBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CuponCreateOrEditInfo.vue","sourceRoot":"src/views/Cupon","sourcesContent":["<template>\n  <cupon-create-or-edit-step :step=\"1\" :open=\"open\" title=\"Informações do lote de cupons\" :hide-steps=\"isUpdatePage\">\n    <fieldset class=\"product-create-info p-1 px-md-5\" :disabled=\"disabled\">\n      \n      <!-- <form-select label=\"Tipo de Cupon\" placeholder=\"Tipo de Cupon\" name=\"tipo-cupon\"\n        id=\"cupon-type\" :options=\"allCuponTypes\" v-model=\"selectedCuponType\" @change=\"changeCuponType()\"/> -->\n\n      <div v-if=\"flagCreate\">\n        <label>Tipo de cupom</label>\n        <select id=\"cuponType\" v-model=\"selectedCuponType\"\n            @change=\"setCuponType\">\n            <option v-for=\"(cupontype, index) in allCuponTypes\" :key=\"index\" :value=\"cupontype\">\n                {{ cupontype }}\n            </option>\n        </select>\n      </div>\n\n      <div v-if=\"selectedCuponType != 'FRETE GRATIS' && flagCreate\">\n        <label>Desconto de Cupon</label>\n        <div>\n            <input id=\"cuponDiscount\" v-model=\"cuponDiscount\" type=\"text\">\n        </div>\n      </div>\n\n      <div>\n        <label>Valor minimo de compra</label>\n        <div>\n            <input id=\"minimumValue\" v-model=\"minimumValue\" type=\"text\">\n        </div>\n      </div>  \n\n      <div>\n        <label>Número de cupons disponiveis</label>\n        <div>\n            <input id=\"cuponsNumber\" v-model=\"cuponsNumber\" type=\"text\">\n        </div>\n      </div> \n\n      <div v-if=\"flagCreate\">\n        <label>Data de expiração</label>\n        <select id=\"expirationDate\" v-model=\"selectedExpirationDate\"\n            @change=\"setExpirationDate\">\n            <option v-for=\"(expirationDate, index) in allExpirationDates\" :key=\"index\" :value=\"expirationDate\">\n                {{ expirationDate }}\n            </option>\n        </select>\n      </div>  \n\n    </fieldset>\n\n    <div class=\"d-flex justify-content-end mt-25 pb-20\">\n      <button class=\"btn btn-primary\" @click=\"validateInfo\">\n        Criar Cupons\n      </button>\n    </div>\n\n    <loading style=\"left: 0; height: 100%\" :active=\"loading || isParentLoading\" />\n  </cupon-create-or-edit-step>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport CuponCreateOrEditStep from \"@/views/Cupon/CuponCreateOrEditStep.vue\";\nimport cuponService from \"@/services/cupon.service\";\n\n\nimport FormInput from \"@/components/Form/FormInput.vue\";\nimport FormSelect from \"@/components/Form/FormSelect.vue\";\nimport FormPriceInput from \"@/components/Form/FormPriceInput.vue\";\n\nimport categoryService from '@/services/category.service';\n\nimport { BFormCheckbox } from 'bootstrap-vue';\n\nimport { required } from 'vuelidate/lib/validators';\nimport { validationMessage } from \"vuelidate-messages\";\nimport { currencyHigherThan, requiredIf } from \"@/helpers/validators\";\nimport outputFormat from \"@/helpers/outputFormat\";\n\nimport Swal, { SweetAlertType } from \"sweetalert2\";\nimport VueSimpleAlert from \"vue-simple-alert\";\n\nconst getRequiredMessage = () => 'Este campo é obrigatório.';\n\nconst errorMessages = {\n  required: getRequiredMessage,\n  requiredIf: getRequiredMessage,\n  currencyMinimum: getRequiredMessage,\n  higherThan: () => 'Deve ser maior que o valor promocional.',\n  higherThanService: () => 'Deve ser maior ou igual ao valor \"De\"'\n}\n\nconst ignoreOldPriceIf = (value: any, parentVm: any) => {\n  return !parentVm.in_promotion || !parentVm.status;\n}\n\nconst ignorePricesIfPriceToMatch = (value: any, parentVm: any, component: any) => {\n  return component.price_to_match;\n}\n\ninterface IProductInfo {\n  category_guid: string,\n  name: string,\n  description: string,\n  ordering: 100,\n  is_published: boolean,\n  register_type: 'Product' | 'Service',\n  price_to_match: boolean,\n  variant_value: any[],\n}\n\nexport default Vue.extend({\n  name: \"CuponCreateOrEditInfo\",\n  components: {\n    FormPriceInput,\n    FormSelect,\n    FormInput,\n    CuponCreateOrEditStep,\n    BFormCheckbox\n  },\n\n  props: {    \n    open: {\n      type: Boolean,\n    },\n\n    data: {\n      type: [Object, Boolean],\n      default: () => false,\n    },\n\n    isParentLoading: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    disabled: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    hasCreatedProduct: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    product: {\n      type: [Object, Boolean],\n      default: () => false,\n    },\n\n    isService: {\n      type: Boolean,\n      default: () => false,\n    },\n\n    isUpdatePage: {\n      type: Boolean,\n      default: () => false,\n    }\n  },\n\n  data() {\n    return {\n      allCuponTypes: [\"VALOR FIXO\", \"FRETE GRATIS\"],\n      selectedCuponType: '',\n      allExpirationDates: [\"7 Dias\", \"15 Dias\", \"21 Dias\"],\n      selectedExpirationDate: '',\n      cuponDiscount: 0,\n      minimumValue: 0,\n      cuponsNumber: 0,\n      cupon: {guid:''},\n      cuponService: new cuponService(),\n      flagCreate: false,\n\n      categoryService: new categoryService(),\n      categoryOptions: [],      \n      selectedCategory: {} as any,  \n      loading: false,\n\n      productInfo: {\n        category_guid: '',\n        name: '',\n        description: '',\n        ordering: 100,\n        is_published: true,\n        register_type: 'Product',\n        price_to_match: false,\n        variant_value: [],\n      } as IProductInfo,\n    }\n  },\n\n  computed: {\n\n    variantsKeyName(): string {\n      return 'variant_value';\n    },\n\n    isUpdate(): boolean {\n      return this.hasCreatedProduct && Boolean(this.product);\n    },\n\n    registerType(): string {\n      return this.isService ? 'serviço' : 'produto';\n    },\n\n    productNamePlaceholder() {\n      if (this.registerType === 'produto') {\n        return 'Nome do produto que será apresentado - Ex: Camiseta estampada roxa, bolo de chocolate, etc.'\n      }\n\n      return 'Nome do serviço - Ex: Assistência técnica, chaveiro, encanador, etc.';\n    },\n  },\n\n  watch: {\n\n    selectedCategory() {\n      // if (!this.selectedCategory || this.product){\n      //   return;    \n      // }\n\n      if (!this.selectedCategory) {\n        return;\n      }\n\n      if (!this.selectedCuponType) {\n        return;\n      }\n\n\n      const baseVariant = {\n        code: '',\n        guid: '',\n        new_price: '',\n        old_price: '',\n        value: '',\n        in_promotion: false,\n        is_skus: false,\n        status: true,\n      };\n\n      let variants = [\n        { ...baseVariant }\n      ];\n\n      if (this.selectedCategory.variant_status) {\n        variants = this.selectedCategory[this.variantsKeyName].map(({ value }) => {\n          return {\n            ...baseVariant,\n            value,\n          }\n        });\n      }\n\n      this.$set(this.productInfo, 'category_guid', this.selectedCategory.guid);\n      this.$set(this.productInfo, this.variantsKeyName, variants);\n      this.$set(this.productInfo, 'register_type', this.selectedCategory.register_type);\n      this.$set(this.productInfo, 'variant_value', this.product.skus.map(sku => ({ ...sku, value: sku || '' })));\n    },\n\n    product: {\n      handler: function (val) {\n        if (!val || !this.hasCreatedProduct) return;\n\n        this.productInfo = {\n          category_guid: val.category.guid,\n          name: val.name,\n          description: val.description,\n          is_published: val.is_published,\n          register_type: val.register_type,\n          price_to_match: val.price_to_match,\n          variant_value: val.skus.map(sku => ({ ...sku, value: sku || '' })),\n          ordering: val.ordering,\n        };\n      },\n      immediate: true,\n    },\n\n    'productInfo.price_to_match': function (newVal) {\n      if (!newVal) return;\n\n      this.productInfo[this.variantsKeyName][0].old_price = '0.01';\n      this.productInfo[this.variantsKeyName][0].new_price = '0.01';\n    }\n  },\n\n  validations() {\n\n    const variantValidations = {\n      $each: {\n        code: {\n          requiredIf: requiredIf(['is_skus', 'status']),\n        },\n        new_price: {\n          required,\n          currencyMinimum: currencyHigherThan({\n            value: '0,00',\n            ignoreIf: (value: any, parentVm: any) => !parentVm.status,\n          }),\n        },\n        old_price: {\n          higherThan: currencyHigherThan({\n            type: 'prop',\n            value: 'new_price',\n            ignoreIf: ignoreOldPriceIf\n          }),\n          currencyMinimum: currencyHigherThan({\n            value: '0,00',\n            ignoreIf: ignoreOldPriceIf\n          }),\n        },\n      }\n    }\n\n    if (this.isService) {\n      delete variantValidations.$each.old_price.higherThan;\n\n      variantValidations.$each.new_price['higherThanService'] = currencyHigherThan({\n        type: 'prop',\n        value: 'old_price',\n        ignoreIf: ignorePricesIfPriceToMatch,\n        allowEquals: true,\n      });\n    }\n\n    let baseValidations = {\n      productInfo: {\n        name: {\n          required,\n        },\n        description: {\n          required,\n        },\n      }\n    }\n\n    baseValidations['productInfo'][this.variantsKeyName] = variantValidations;\n\n    return baseValidations;\n  },\n\n  created() {\n    this.getCupon();\n  },\n\n  methods: {\n\n    async getCupon(){\n      try {\n        if (this.$route.params.cuponGuid) {\n          const cuponGuid = this.$route.params.cuponGuid\n          const response = await this.cuponService.getCupon(cuponGuid)\n          this.cupon = response.data\n          const {minimum_purchase, seller_coupons} = response.data\n          console.log(\"editar responsse....\", response.data)\n          this.minimumValue = minimum_purchase\n          this.cuponsNumber = seller_coupons[0].quantity\n        }else{\n          this.flagCreate = true\n        }\n       \n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    setCuponType(selected: any){\n      console.log(\"selected\", selected.target.value)\n      this.selectedCuponType = selected.target.value;\n    },\n\n    setExpirationDate(selected: any){\n      console.log(\"selected\", selected.target.value)\n      this.selectedExpirationDate = selected.target.value;\n    },\n\n    getNewPriceHelpText(inPromotion) {\n      if (this.isService) {\n        return 'Até';\n      }\n\n      return inPromotion ? 'Valor promocional' : 'Valor unitário';\n    },\n\n    getOldPriceHelpText() {\n      if (this.isService) {\n        return 'De';\n      }\n\n      return 'Valor antigo';\n    },\n\n    validateIsSelectable(option) {\n      return !option.variant_status;\n    },\n\n    validationMessage: validationMessage(errorMessages, {}),\n\n    setSKUPromotion(index, value) {\n      this.$set(this.productInfo[this.variantsKeyName], index, {\n        ...(this.productInfo[this.variantsKeyName][index] || {}),\n        in_promotion: value\n      });\n    },\n\n    toggleIsSku(index, value) {\n      this.$set(this.productInfo[this.variantsKeyName], index, {\n        ...(this.productInfo[this.variantsKeyName][index] || {}),\n        is_skus: value\n      });\n    },\n\n    async validateInfo() {\n      if (!this.flagCreate) {\n        if (this.validateUpdateCoupon()) {\n          const editedCoupon = {\n            coupon_data: {\n              quantity: Number(this.cuponsNumber),\n              minimum_purchase: this.minimumValue,\n            },\n          }        \n          this.$emit('submit-valid', editedCoupon, this.cupon?.guid);\n        }       \n      }else{\n        if (this.validateCreateCoupon()) {\n          let now = Date();\n          let selected = this.selectedExpirationDate.split(\" \");\n          const expiration_date = this.addDays(now, Number(selected[0]))\n\n          let cuponType = \"shipping\"\n          if (this.selectedCuponType == \"VALOR FIXO\") {\n            cuponType = \"fixed\"\n          }\n\n          const cupon = {\n            type: cuponType,\n            discount: Number(this.cuponDiscount),\n            minimum_purchase: Number(this.minimumValue),\n            quantity: Number(this.cuponsNumber),\n            expiration_date: expiration_date,\n            created_by: \"seller\",\n          }\n\n          this.$emit('submit-valid', cupon);\n        }\n        \n      }\n    },\n\n    validateUpdateCoupon(){\n      let toReturn = true\n      if (!this.cuponsNumber) {\n        this.toastMessage(\n            \"error\",\n            \"Deve preencher o número de cupons\"\n        );\n        toReturn = false\n      }\n      if (!this.minimumValue) {\n        this.toastMessage(\n            \"error\",\n            \"Deve preencher o valor mínimo de compra\"\n        );\n        toReturn = false\n      }\n      return toReturn\n    },\n\n    validateCreateCoupon(){\n      let toReturn = true\n      if (!this.cuponsNumber) {\n        this.toastMessage(\n            \"error\",\n            \"Deve preencher o número de cupons\"\n        );\n        toReturn = false\n      }\n      if (!this.minimumValue) {\n        this.toastMessage(\n            \"error\",\n            \"Deve preencher o valor mínimo de compra\"\n        );\n        toReturn = false\n      }\n      if (!this.selectedCuponType) {\n        this.toastMessage(\n            \"error\",\n            \"Deve selecionar o tipo de cupom\"\n        );\n      }\n      if (this.selectedCuponType != 'FRETE GRATIS' && !this.cuponDiscount) {\n        this.toastMessage(\n            \"error\",\n            \"Deve preencher o desconto de cupon\"\n        );\n      }\n      if (!this.selectedExpirationDate) {\n        this.toastMessage(\n            \"error\",\n            \"Deve selecionar a data de expiração\"\n        );\n      }\n\n      return toReturn\n    },\n\n    toastMessage(type: SweetAlertType, title: string) {\n      VueSimpleAlert.fire({\n        type,\n        title,\n        toast: true,\n        position: \"top-end\",\n        showConfirmButton: false,\n        timer: 3000,\n        onOpen: (toast) => {\n          toast.addEventListener(\"mouseenter\", Swal.stopTimer),\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n        },\n      });\n    },\n\n    addDays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result;\n    },\n  }\n});\n</script>\n\n<style scoped lang=\"scss\">\n::v-deep {\n  .custom-control-label {\n    color: #535556E5;\n    font-size: 1rem;\n    font-weight: 700;\n  }\n}\n\n.product-create-info {\n  &__outline-btn {\n    border: 1px solid $primary;\n    border-radius: 5px;\n\n    background-color: transparent;\n\n    color: $primary;\n    font-size: .625rem;\n\n    padding: 5px;\n    margin-top: calc(1rem + 8px);\n\n    height: 34px;\n\n    &--clear {\n      border-radius: 50%;\n\n      $clear-color: #fff;\n\n      color: $clear-color;\n      border-color: transparent;\n\n      width: 28px;\n      height: 28px;\n      margin-top: calc(1rem + 13px);\n\n      background-color: $primary;\n\n      span {\n        line-height: 1;\n        font-size: 18px;\n      }\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    \n  }\n\n  select {\n    padding: 10px 8px;\n  }\n\n  label{\n    margin-top: 3%;\n  }\n\n  &__dash {\n    margin-top: calc(1rem + 8px + 18px);\n    background: linear-gradient(90deg, rgba(0, 0, 0, 0.02) 0%, rgba(0, 0, 0, 0.2) 51.56%, rgba(0, 0, 0, 0.02) 100%);\n    height: 1px;\n    width: 20px;\n  }\n\n  &__sku {\n    &--variant-title {\n      span {\n        color: #535556E5;\n        font-weight: 500;\n      }\n    }\n  }\n}\n#cuponDiscount, #minimumValue{\n  width: 20%;\n  border-radius: 5px;\n}\n#cuponsNumber{\n  width: 100%;\n  border-radius: 5px;\n  border-color: gray;\n}\n</style>"]}]}