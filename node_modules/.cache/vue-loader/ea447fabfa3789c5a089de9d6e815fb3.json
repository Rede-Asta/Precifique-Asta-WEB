{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aline/AstaPrecifique/src/components/box/horarioAtendimento/horarioAtendimento.component.html?vue&type=template&id=b47fddaa&scoped=true&","dependencies":[{"path":"/home/aline/AstaPrecifique/src/components/box/horarioAtendimento/horarioAtendimento.component.html","mtime":1677526632477},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}