{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aline/GitHub/admin-frontend/src/components/box/editarMeuNegocio/editarMeuNegocio.component.html?vue&type=template&id=2eebdaec&","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/components/box/editarMeuNegocio/editarMeuNegocio.component.html","mtime":1696439584169},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673370389594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}