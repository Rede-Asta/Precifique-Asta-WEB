{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js!/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js??ref--13-2!/home/aline/GitHub/admin-frontend/src/views/login-precifique-new-password/login-precifique-new-password.view.ts","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/views/login-precifique-new-password/login-precifique-new-password.view.ts","mtime":1697048728324},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/aline/GitHub/admin-frontend/src/views/login-precifique-new-password/login-precifique-new-password.view.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Vue } from 'vue-property-decorator';\n\nimport Swal, { SweetAlertType } from 'sweetalert2';\nimport VueSimpleAlert from 'vue-simple-alert';\n\n\nimport UserStorage from '@/services/UserStorage';\nimport productsService from '@/services/products.service';\nimport RegisterSellerService from '@/services/register.service';\nimport UserService from '@/services/user.service';\n\nimport { InputForms } from '@/models/inputForms';\nimport { listStatusSellerValid } from '@/environments/list_status_valid';\n\nimport {\n  PushNotifications,\n} from '@capacitor/push-notifications';\nimport { Device } from '@capacitor/device';\nimport isApp from '../../environments/environment';\nimport mixpanel from \"mixpanel-browser\";\n\n\n@Component({})\nexport class loginPrecifiqueNewPasswordView extends Vue {\n\n  @Prop() propPage!: string;\n\n  public page: string = this.propPage;\n\n  private registerService = new RegisterSellerService();\n  private productsService = new productsService();\n  private userService = new UserService();\n\n  public deviceId: string = '';\n  public showVerificationCode: boolean = false;\n  public optIn: string = 'phone';\n  public refresh: boolean = false;\n  public businessName: string = '';\n  public email: string = '';\n  public phone: string = '';\n  private redirectSocialCommerce: string = '';\n\n  public fcmRegister: boolean = false;\n\n  public inputLogin: InputForms[] = [{\n    tag: 'input',\n    label: 'Nova senha',\n    type: 'text',\n    id: 'businessNameInput',\n    classContainer: 'form-group my-2 col-12',\n    classInput: 'form-control',\n    ariaDescribedby: 'businessNameHelp',\n    placeholder: '',\n    help: '',\n    required: false,\n    model: '',\n    classHelp: 'form-text text-muted',\n    hasToastHelp: false,\n    toastHelp: '',\n    showInput: true,\n  },\n\n  {\n    tag: 'input',\n    label: 'Confirme a nova senha',\n    type: 'text',\n    id: 'businessNameInput',\n    classContainer: 'form-group my-2 col-12',\n    classInput: 'form-control',\n    ariaDescribedby: 'businessNameHelp',\n    placeholder: '',\n    help: '',\n    required: false,\n    model: '',\n    classHelp: 'form-text text-muted',\n    hasToastHelp: false,\n    toastHelp: '',\n    showInput: true,\n  }\n];\n\n\n  public notification = {};\n\n  mounted() {\n    const query = this.$route.query;\n\n    if (query.redirect) {\n      this.redirectSocialCommerce = decodeURIComponent(String(query.redirect || ''));\n    }\n\n    this.setDeviceId();\n    if (isApp) {\n      this.notificationPush();\n    }\n\n    const data = localStorage.getItem('loggedUser');\n    const pertinho: any = JSON.parse(localStorage.getItem('pertinho') || '{}');\n    if (data) {\n      const statusSellerAccount = JSON.parse(data);\n      if (!listStatusSellerValid.includes(statusSellerAccount.account_status)) {\n        this.$router.push(`quero-vender?etapa=${statusSellerAccount.account_status}`);\n      } else {\n        if (query.redirect) {\n          window.open(`${this.redirectSocialCommerce}?guid=${pertinho.guid}&type=consumer&token=${pertinho.token}`,\n            '_self');\n          return;\n        }\n        this.$router.push(`dashboard`);\n      }\n    }\n  }\n\n  private notificationPush() {\n    try {\n      PushNotifications.requestPermissions().then(result => {\n        if (result.receive === 'granted') {\n          PushNotifications.register();\n        }\n      });\n\n      PushNotifications.addListener('registration',\n        async (token) => {\n          const info = await Device.getInfo();\n          const deviceID = (await Device.getId()).uuid;\n\n          if (!this.fcmRegister && deviceID && token.value && info.platform) {\n            this.userService.registerNotLogged4Notifications(token.value, deviceID, info.platform, 'vendedores').then((result) => {\n              this.fcmRegister = true;\n            }).catch((err) => {\n              // alert(err);\n            })\n          }\n\n        },\n      );\n\n      PushNotifications.addListener('pushNotificationReceived',\n        (notification) => {\n          this.toastMessage('success', JSON.stringify(notification.body));\n        },\n      );\n\n      // Method called when tapping on a notification\n      PushNotifications.addListener('pushNotificationActionPerformed',\n        (notification) => {\n          const url = notification.notification.data.link;\n          // alert(url);\n\n          if (url.search('pertinho.com.br')) {\n            const page = url.split('.br').pop();\n            window.location.href = page;\n          } else {\n            window.location.href = url;\n          }\n        },\n      );\n    } catch (error) {\n      // alert(error)\n    }\n  }\n\n  private async setDeviceId() {\n    const device_id = (await Device.getId()).uuid;\n    this.deviceId = device_id;\n    localStorage.setItem('device_id', JSON.stringify(device_id));\n  }\n\n  public stepModelLogin(value: string) {\n    const reg = /[a-zA-Z\\u00C0-\\u00FF ]+/i;\n\n    reg.test(value) && value.includes('@')\n      ? (this.email = value)\n      : (this.email = this.removeMask(value));\n  }\n\n  public codeConfirm(code: string) {\n    this.codeLoginSeller(code);\n  }\n\n  public refreshCodeConfirm() {\n    this.loginSeller();\n  }\n\n  public async loginSeller() {\n\n    const response = await this.registerService.loginSeller({\n      email: this.email,\n      device_id: this.deviceId,\n      auth: 2,\n    });\n    switch (response.status) {\n      case 201:\n      case 202:\n\n        this.openVerificationCode();\n        this.loginSellerMixpanel();\n\n        break;\n      case 400:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error);\n        break;\n    }\n  }\n\n  loginSellerMixpanel() {\n\n    mixpanel.track(\"Login_Seller\", {\n\n\n      'email': this.email,\n      'devide_id': this.deviceId\n\n    });\n    mixpanel.identify(this.email);\n\n  }\n  private async codeLoginSeller(code: string) {\n    const response = await this.registerService.codeLoginSeller({\n      email: this.email,\n      code,\n      device_id: this.deviceId,\n      auth: 2,\n    });\n    switch (response.status) {\n      case 201:\n      case 202:\n        const data = await response.json();\n        localStorage.setItem('pertinho', JSON.stringify(data));\n        UserStorage.saveData(JSON.stringify(data));\n        if (this.redirectSocialCommerce) {\n          window.open(`${this.redirectSocialCommerce}/feed?guid=${data.guid}&type=consumer&token=${data.token}`,\n            '_self');\n        }\n        await this.getUser();\n        this.closeVerificationCode();\n        break;\n      case 400:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error);\n        break;\n    }\n  }\n\n  private async getUser() {\n    const response = await this.productsService.getProdcutsAll();\n    switch (response.status) {\n      case 200:\n      case 201:\n      case 202:\n        const data = await response.json();\n        localStorage.setItem('loggedUser', JSON.stringify(data));\n        const loggedUser = JSON.parse(localStorage.getItem('loggedUser') || '');\n        this.toastMessage('success', `Bem vindo, ${loggedUser.name}!`);\n        data.account_status !== 'F'\n          ? this.redirectPageRegister(data.account_status)\n          : this.redirectPage();\n        break;\n      case 400:\n      case 404:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error.detail ? error.detail : error);\n        break;\n    }\n  }\n\n  private redirectPageRegister(accountStatus: string) {\n    this.$router.push(`/quero-vender?etapa=${accountStatus}`);\n  }\n\n  private redirectPage() {\n    localStorage.getItem('key-acpd')\n      ? this.$router.push(`meus-pedidos/${localStorage.getItem('key-acpd')}`)\n      : this.page === 'courses'\n        ? this.$emit('closeModalLogin', true)\n        : this.$router.push('dashboard');\n  }\n\n  private toastMessage(type: SweetAlertType, title: string) {\n    VueSimpleAlert.fire({\n      type,\n      title,\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 5000,\n      onOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer),\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n      },\n    });\n  }\n\n  public openVerificationCode() {\n    this.showVerificationCode = true;\n  }\n\n  public closeVerificationCode() {\n    this.showVerificationCode = false;\n  }\n\n  private removeMask(mobile) {\n    return mobile.replace(/[^0-9]/g, '');\n  }\n\n  private randomNumberLetters() {\n    const d = new Date();\n    const n = d.getTime();\n    return (\n      Math.floor(Math.random() * 65536) +\n      Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 5) +\n      'PERTINHO' +\n      n\n    );\n  }\n\n  private isMobile() {\n    return Boolean(\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent,\n      ),\n    );\n  }\n}\n"],"sourceRoot":""}]}