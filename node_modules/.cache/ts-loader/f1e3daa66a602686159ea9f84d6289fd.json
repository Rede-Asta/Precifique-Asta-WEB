{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js!/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js??ref--13-2!/home/aline/GitHub/admin-frontend/src/views/login-precifique-code/login-precifique-code.view.ts","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/views/login-precifique-code/login-precifique-code.view.ts","mtime":1697660909021},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvYWxpbmUvR2l0SHViL2FkbWluLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wLCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKCnZhciBsb2dpblByZWNpZmlxdWVDb2RlVmlldyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhsb2dpblByZWNpZmlxdWVDb2RlVmlldywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIobG9naW5QcmVjaWZpcXVlQ29kZVZpZXcpOwoKICBmdW5jdGlvbiBsb2dpblByZWNpZmlxdWVDb2RlVmlldygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgbG9naW5QcmVjaWZpcXVlQ29kZVZpZXcpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5wYWdlID0gX3RoaXMucHJvcFBhZ2U7CiAgICBfdGhpcy5kZXZpY2VJZCA9ICcnOwogICAgX3RoaXMuc2hvd1ZlcmlmaWNhdGlvbkNvZGUgPSBmYWxzZTsKICAgIF90aGlzLnJlZnJlc2ggPSBmYWxzZTsKICAgIF90aGlzLmJ1c2luZXNzTmFtZSA9ICcnOwogICAgX3RoaXMuaW5wdXRMb2dpbiA9IFt7CiAgICAgIHRhZzogJ2lucHV0JywKICAgICAgbGFiZWw6ICdDw7NkaWdvJywKICAgICAgdHlwZTogJ3RleHQnLAogICAgICBpZDogJ2J1c2luZXNzTmFtZUlucHV0JywKICAgICAgY2xhc3NDb250YWluZXI6ICdmb3JtLWdyb3VwIG15LTIgY29sLTEyJywKICAgICAgY2xhc3NJbnB1dDogJ2Zvcm0tY29udHJvbCcsCiAgICAgIGFyaWFEZXNjcmliZWRieTogJ2J1c2luZXNzTmFtZUhlbHAnLAogICAgICBwbGFjZWhvbGRlcjogJycsCiAgICAgIGhlbHA6ICcnLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIG1vZGVsOiAnJywKICAgICAgY2xhc3NIZWxwOiAnZm9ybS10ZXh0IHRleHQtbXV0ZWQnLAogICAgICBoYXNUb2FzdEhlbHA6IGZhbHNlLAogICAgICB0b2FzdEhlbHA6ICcnLAogICAgICBzaG93SW5wdXQ6IHRydWUKICAgIH1dOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKGxvZ2luUHJlY2lmaXF1ZUNvZGVWaWV3LCBbewogICAga2V5OiAibW91bnRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbW91bnRlZCgpIHt9CiAgfSwgewogICAga2V5OiAic2VuZENvZGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZW5kQ29kZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0aGlzLm9wZW5WZXJpZmljYXRpb25Db2RlKCk7IC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5wcmVjaWZpcXVlU2VydmljZS5zZW5kRW1haWwoewogICAgICAgICAgICAgICAgLy8gZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICAvLyB9KTsKICAgICAgICAgICAgICAgIC8vIHN3aXRjaCAocmVzcG9uc2Uuc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAvLyAgIGNhc2UgMjAxOgogICAgICAgICAgICAgICAgLy8gICBjYXNlIDIwMjoKICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLm9wZW5WZXJpZmljYXRpb25Db2RlKCk7CiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyAgIGNhc2UgNDAwOgogICAgICAgICAgICAgICAgLy8gICBjYXNlIDQyMzoKICAgICAgICAgICAgICAgIC8vICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLnRvYXN0TWVzc2FnZSgnZXJyb3InLCBlcnJvcik7CiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyB9CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBzZW5kQ29kZSgpIHsKICAgICAgICByZXR1cm4gX3NlbmRDb2RlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZW5kQ29kZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogIm9wZW5WZXJpZmljYXRpb25Db2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuVmVyaWZpY2F0aW9uQ29kZSgpIHsKICAgICAgdGhpcy5zaG93VmVyaWZpY2F0aW9uQ29kZSA9IHRydWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xvc2VWZXJpZmljYXRpb25Db2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9zZVZlcmlmaWNhdGlvbkNvZGUoKSB7CiAgICAgIHRoaXMuc2hvd1ZlcmlmaWNhdGlvbkNvZGUgPSBmYWxzZTsKICAgIH0KICB9XSk7CgogIHJldHVybiBsb2dpblByZWNpZmlxdWVDb2RlVmlldzsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCgpXSwgbG9naW5QcmVjaWZpcXVlQ29kZVZpZXcucHJvdG90eXBlLCAicHJvcFBhZ2UiLCB2b2lkIDApOwoKbG9naW5QcmVjaWZpcXVlQ29kZVZpZXcgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoe30pXSwgbG9naW5QcmVjaWZpcXVlQ29kZVZpZXcpOwpleHBvcnQgeyBsb2dpblByZWNpZmlxdWVDb2RlVmlldyB9Ow=="},{"version":3,"sources":["/home/aline/GitHub/admin-frontend/src/views/login-precifique-code/login-precifique-code.view.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC;;AAOA,IAAa,uBAAb;AAAA;;AAAA;;AAAA,qCAAA;AAAA;;AAAA;;;AAIS,UAAA,IAAA,GAAe,MAAK,QAApB;AACA,UAAA,QAAA,GAAmB,EAAnB;AACA,UAAA,oBAAA,GAAgC,KAAhC;AACA,UAAA,OAAA,GAAmB,KAAnB;AACA,UAAA,YAAA,GAAuB,EAAvB;AAIA,UAAA,UAAA,GAA2B,CAAC;AACjC,MAAA,GAAG,EAAE,OAD4B;AAEjC,MAAA,KAAK,EAAE,QAF0B;AAGjC,MAAA,IAAI,EAAE,MAH2B;AAIjC,MAAA,EAAE,EAAE,mBAJ6B;AAKjC,MAAA,cAAc,EAAE,wBALiB;AAMjC,MAAA,UAAU,EAAE,cANqB;AAOjC,MAAA,eAAe,EAAE,kBAPgB;AAQjC,MAAA,WAAW,EAAE,EARoB;AASjC,MAAA,IAAI,EAAE,EAT2B;AAUjC,MAAA,QAAQ,EAAE,KAVuB;AAWjC,MAAA,KAAK,EAAE,EAX0B;AAYjC,MAAA,SAAS,EAAE,sBAZsB;AAajC,MAAA,YAAY,EAAE,KAbmB;AAcjC,MAAA,SAAS,EAAE,EAdsB;AAejC,MAAA,SAAS,EAAE;AAfsB,KAAD,CAA3B;AAZT;AAqEC;;AArED;AAAA;AAAA,8BA+BS,CAAK;AA/Bd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCI,qBAAK,oBAAL,GApCJ,CAsCI;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2CA8D6B;AACzB,WAAK,oBAAL,GAA4B,IAA5B;AACD;AAhEH;AAAA;AAAA,4CAkE8B;AAC1B,WAAK,oBAAL,GAA4B,KAA5B;AACD;AApEH;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAEU,UAAA,CAAA,CAAP,IAAI,EAAG,CAAA,E,iCAAA,E,UAAA,E,KAAkB,CAAlB,CAAA;;AAFG,uBAAuB,GAAA,UAAA,CAAA,CADnC,SAAS,CAAC,EAAD,CAC0B,CAAA,EAAvB,uBAAuB,CAAvB;SAAA,uB","sourcesContent":["import { Component, Prop, Vue } from 'vue-property-decorator';\nimport { InputForms } from '@/models/inputForms';\n\n\n\n\n@Component({})\nexport class loginPrecifiqueCodeView extends Vue {\n\n  @Prop() propPage!: string;\n\n  public page: string = this.propPage;\n  public deviceId: string = '';\n  public showVerificationCode: boolean = false;\n  public refresh: boolean = false;\n  public businessName: string = '';\n  \n  \n\n  public inputLogin: InputForms[] = [{\n    tag: 'input',\n    label: 'CÃ³digo',\n    type: 'text',\n    id: 'businessNameInput',\n    classContainer: 'form-group my-2 col-12',\n    classInput: 'form-control',\n    ariaDescribedby: 'businessNameHelp',\n    placeholder: '',\n    help: '',\n    required: false,\n    model: '',\n    classHelp: 'form-text text-muted',\n    hasToastHelp: false,\n    toastHelp: '',\n    showInput: true,\n  }];\n\n\n  mounted() {}\n\n\n  public async sendCode() {\n\n    this.openVerificationCode()\n\n    // const response = await this.precifiqueService.sendEmail({\n    // email: this.email,\n    // });\n\n   \n\n    // switch (response.status) {\n    //   case 201:\n    //   case 202:\n\n    //     this.openVerificationCode();\n      \n\n    //     break;\n    //   case 400:\n    //   case 423:\n    //     const error = await response.json();\n    //     this.toastMessage('error', error);\n    //     break;\n    // }\n  }\n\n\n\n  public openVerificationCode() {\n    this.showVerificationCode = true;\n  }\n\n  public closeVerificationCode() {\n    this.showVerificationCode = false;\n  }\n}\n"],"sourceRoot":""}]}