{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js!/home/aline/AstaPrecifique/node_modules/ts-loader/index.js??ref--13-2!/home/aline/AstaPrecifique/src/services/user.service.ts","dependencies":[{"path":"/home/aline/AstaPrecifique/src/services/user.service.ts","mtime":1698162862615},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/AstaPrecifique/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/aline/AstaPrecifique/src/services/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport UserStorage from '@/services/UserStorage';\nimport environment from '@/environments/environment';\nimport { default as ProductsService } from './products.service';\nconst productsService = new ProductsService()\nexport default class userService {\n\n    public detail?: string;\n    private headersToken = {\n        'Authorization': environment.setAuthorizationToken(),\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'x-token': UserStorage.returnToken(),\n    };\n\n    private headers = {\n        'Authorization': environment.setAuthorizationToken(),\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    };\n\n    public getHorario() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/openingHours/`, requestOptions);\n    }\n\n    public getSocialMedia() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/socialNetworks/`, requestOptions).then(response => response.json());\n    }\n\n    public listProdcutsAll() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions).then(response => response.json());\n    }\n\n    public listObterPagamentos() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/paymentMethods/`, requestOptions).then(response => response.json());\n    }\n\n    public listPagamentos() {\n        const requestOptions = { headers: this.headers };\n        return fetch(`${environment.setAPI()}/choices/payments/`, requestOptions).then(response => response.json());\n    }\n\n    public imageToCrop(img: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify({ data: img }),\n        };\n        return fetch(`${environment.setAPI()}/catalog/v3/product/upload/`, requestOptions);\n    }\n\n    public qrcodeCatalog(guid: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n        };\n        return fetch(`${environment.setAPI()}/seller/${guid}/qrcode-catalog`, requestOptions);\n    }\n\n    public sendMessageNotification(slug: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify(slug),\n        };\n        return fetch(`${environment.setAPI()}/seller/${slug}/resend/confirmation`, requestOptions);\n    }\n\n    public uploadlogo(slug: string, img: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify({ data: img }),\n        };\n\n        return fetch(`${environment.setAPI()}/seller/${slug}/logo/`, requestOptions);\n    }\n    public async uploadToS3({ url, fields, image, onUploadProgressCb, }) {\n        const formData = new FormData();\n        const config = {};\n\n        Object.entries(fields).forEach(([key, value]) => {\n            // @ts-ignore\n            formData.append(key, value);\n        });\n\n        formData.append('file', image.imageFile);\n\n        if (onUploadProgressCb) {\n            config[\"onUploadProgress\"] = (event) => {\n                onUploadProgressCb(event);\n            };\n        }\n\n        const response = await axios.post(url, formData, config);\n\n        return response;\n    }\n    public async uploadLogoV2(img: string, cb: Function) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n        };\n        const response = await fetch(`${environment.setAPI()}/seller/${UserStorage.returnGuid()}/sign_logo/`, requestOptions);\n        const { code: { url, fields } } = await response.json();\n\n        return await this.uploadToS3({\n            url,\n            fields,\n            image: img,\n            onUploadProgressCb: cb,\n        });\n    }\n\n    public async uploadVitrine(img: string, cb: Function) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n        };\n        const response = await fetch(`${environment.setAPI()}/seller/${UserStorage.returnGuid()}/sign_cover_photo/`, requestOptions);\n        const { code: { url, fields } } = await response.json();\n\n        return await this.uploadToS3({\n            url,\n            fields,\n            image: img,\n            onUploadProgressCb: cb,\n        });\n    }\n\n    public login(username: string, password: string, grantType: string) {\n        const details = 'username' + '=' + username + '&' + 'grant_type' + '=' + grantType + '&password=' + password;\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Basic ZmFyRHFUUUtaalU0ZEp2V0xwQnNDbXgwOTlSQmNWMkxaenJuZXJ3cTpOZ3hnZ3REUzZLRTR2U1BXeGFMakNlQzhJaE90QXI5RzB0M0FlaHVZSEVkOTdNcUxVNjFjaUw3QzQ0T1JEWlNGWnZTdEhsM2VYWnlHUTgyN0lMRjNOWndERE4ySTYwODVSM3RVWmpzbVUyMFdET0dmSVdteGhzeUdGQTd2dHMzRA==',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: details,\n        };\n\n        return fetch(`${environment.setAPI()}/seller/login/`, {\n            body: JSON.stringify({\n                email: username,\n                password,\n            }),\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n\n    public sendEmail(email: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify({ email }),\n        };\n\n        return fetch(`${environment.setAPI()}/auth/reset/`, requestOptions);\n    }\n\n    public changePassword(email: string, newpassword: string, token: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify({ email, token, newpassword }),\n        };\n\n        return fetch(`${environment.setAPI()}/auth/reset/renew/`, requestOptions);\n    }\n\n    public updateSeller(body: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            body: JSON.stringify(body),\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n    }\n\n    public updateHorario(body: any) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/openingHours/`, requestOptions);\n    }\n\n    public updateSellerAddress(body: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/address/`, requestOptions);\n    }\n\n\n    public updateShowAddress(body: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n        \n    }\n\n    public updateWhenClosed(body: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n        \n    }\n\n    public updateOutOfRadius(body: any) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n        \n    }\n    \n\n\n\n\n\n    public updateCategory(body: any) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/category/`, requestOptions);\n    }\n\n    public updateDeliveryRegions(body: any) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/delivery/`, requestOptions);\n    }\n\n    public updateSocialNetwork(body: any) {\n        const requestOptions = {\n            method: 'GET',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/socialNetwork/`, requestOptions);\n    }\n\n    // public updateDocument(document) {\n    //     const requestOptions = {\n    //         method: 'PATCH',\n    //         headers: this.headersToken,\n    //         body: JSON.stringify({ document }),\n    //     };\n    //     const guid: any = UserStorage.returnGuid();\n    //     return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n    // }\n\n    public updateSize(size, seller_name, name, email, document) {\n        const requestOptions = {\n            method: 'PATCH',\n            headers: this.headersToken,\n            body: JSON.stringify({ size, seller_name, name, email, document }),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n    }\n\n    public listUpdatePagamentos(body: any) {\n        const requestOptions: object = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/paymentMethods/`, requestOptions);\n    }\n\n    public postSocialMedia(body: any) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/socialNetworks/`, requestOptions);\n    }\n\n    public authorizeInstagram(code) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/instagram/${guid}?code=${code}`, requestOptions);\n    }\n\n    public optOutInstagram() {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/instagram/${guid}`, requestOptions);\n    }\n\n    public desabilitaVendedor() {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/disable/${guid}`, requestOptions);\n    }\n\n    public habilitaVendedor() {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/disable/${guid}`, requestOptions);\n    }\n\n    public scoreSeller() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/score/${guid}`, requestOptions).then(response => response.json());\n    }\n\n    public getSellerReview() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/reviewed/${guid}`, requestOptions).then(response => response.json());\n    }\n\n    public getSellerReviewOrders() {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/reviewed/orders/${guid}`, requestOptions).then(response => response.json());\n    }\n\n    public getSellerBySlug(slug) {\n        const requestOptions = { headers: this.headers };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/share/${slug}/`, requestOptions).then(response => response.json());\n    }\n\n    public getSellerShowAddress() {\n        const requestOptions = {\n            method: 'GET',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions).then(response => response.json());\n    }\n\n\n    public getSellerWhenClosed() {\n        const requestOptions = {\n            method: 'GET',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions).then(response => response.json());\n    }\n\n\n    public getSellerOutOfRadius() {\n        const requestOptions = {\n            method: 'GET',\n            headers: this.headersToken,\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions).then(response => response.json());\n    }\n\n    \n\n\n\n\n\n\n\n    public getModalAdmin() {\n        return fetch('https://images-pertinho-campanhas.s3.amazonaws.com/modal/modal-welcome.json').then(response => response.json());\n    }\n\n    public async getChatbotInfo() {\n        return fetch('https://images-pertinho-campanhas.s3.amazonaws.com/vendedores/chatbot_de-para.json').then(response => response.json());\n    }\n\n    public postSellerReviewer(body: any, orderId: any) {\n        const requestOptions = {\n            method: 'POST',\n            headers: this.headersToken,\n            body: JSON.stringify(body),\n        };\n        const guid: any = UserStorage.returnGuid();\n        return fetch(`${environment.setAPI()}/seller/review/${guid}/${orderId}`, requestOptions);\n    }\n\n    public registerNotLogged4Notifications(token: string, deviceId: string, platform: string, application_name: string){\n        return axios.post(`${environment.setAPIPush}/save/fcmtoken`,\n        {pushToken: token, deviceId: deviceId, platform: platform, application_name: application_name})\n    }  \n\n    public logout = () => UserStorage.clearData();\n}\n"],"sourceRoot":""}]}