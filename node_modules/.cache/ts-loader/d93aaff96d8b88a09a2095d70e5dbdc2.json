{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js!/home/aline/AstaPrecifique/node_modules/ts-loader/index.js??ref--13-2!/home/aline/AstaPrecifique/src/services/products.service.ts","dependencies":[{"path":"/home/aline/AstaPrecifique/src/services/products.service.ts","mtime":1673321154842},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/AstaPrecifique/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/aline/AstaPrecifique/src/services/products.service.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport UserStorage          from '@/services/UserStorage';\n\nimport environment          from '@/environments/environment';\n\nexport default class productsService {\n\n  private headersToken = {\n    'Authorization': environment.setAuthorizationToken(),\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'x-token': UserStorage.returnToken(),\n  };\n\n  private headers = {\n      'Authorization': environment.setAuthorizationToken(),\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Headers': 'Content-Type',\n  };\n\n  public getProducts(categoryGuid: string) {\n      const requestOptions = { headers: this.headers };\n      return fetch(`${environment.setAPIv2()}/catalog/product/${categoryGuid}`, requestOptions);\n  }\n\n  public getProductDetail(productGuid: string) {\n      return axios.get(`${environment.setAPIv2()}/catalog/product/detail/${productGuid}`, {\n        headers: {\n          ...this.headersToken,\n        }\n      });\n  }\n\n  public getProductsPromotion() {\n    const requestOptions = { headers: this.headers };\n    return fetch(`${environment.setAPI()}/catalog/product/promotion`, requestOptions);\n  }\n\n  public getProductDetailPromotion(promotionGuid: string, sellerId: string) {\n    const requestOptions = { headers: this.headers };\n    return fetch(`${environment.setAPI()}/catalog/product/promotion/${promotionGuid}/seller/${sellerId}`, requestOptions);\n  }\n\n  public getProdcutsAll() {\n    const guid: any = UserStorage.returnGuid();\n    const requestOptions = { headers: this.headers };\n    return fetch(`${environment.setAPI()}/seller/${guid}/`, requestOptions);\n  }\n\n  public createProduct(product, categoryGuid: string) {\n    const requestOptions = {\n      method: 'POST',\n      headers: this.headersToken,\n      body: JSON.stringify(product),\n    };\n    return fetch(`${environment.setAPIv2()}/catalog/product/${categoryGuid}`, requestOptions);\n  }\n\n  public createProductNew(product, categoryGuid) {\n    return axios.post(`${environment.setAPIv2()}/catalog/product/${categoryGuid}`, product, {\n      headers: this.headersToken,\n    });\n  }\n\n  public editProduct(product, productGuid?: string) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: this.headersToken,\n      body: JSON.stringify(product),\n    };\n    return fetch(`${environment.setAPIv2()}/catalog/product/detail/${productGuid}`, requestOptions);\n  }\n\n  public editProductNew(product, productGuid: string) {\n    return axios.patch(`${environment.setAPIv2()}/catalog/product/detail/${productGuid}`, product, {\n      headers: this.headersToken,\n    });\n  }\n\n  public deleteProduct(productGuid?: string) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: this.headersToken,\n    };\n    return fetch(`${environment.setAPIv2()}/catalog/product/detail/${productGuid}`, requestOptions);\n  }\n\n  public async getS3Signature(productGuid, quantity) {\n    return axios.post(`${environment.setAPI()}/catalog/product/signature/${productGuid}`, {}, {\n      params: {\n        count: quantity\n      },\n      headers: this.headersToken,\n    });\n  }\n\n  public async updateProductImages(productGuid, images) {\n    return axios.put(`${environment.setAPI()}/catalog/product/signature/${productGuid}`, {\n      images,\n    }, {\n      headers: this.headersToken,\n    });\n  }\n\n  public async uploadToS3({url, fields, image, onUploadProgressCallback, position}) {\n    const formData = new FormData();\n    const config = {};\n\n    Object.entries(fields).forEach(([key, value]) => {\n      // @ts-ignore\n      formData.append(key, value);\n    });\n\n    formData.append('file', image);\n\n    if (onUploadProgressCallback) {\n      config[\"onUploadProgress\"] = (event) => {\n        onUploadProgressCallback(event, position);\n      };\n    }\n\n    const response = await axios.post(url, formData, config);\n\n    return response;\n  }\n\n  public async uploadImage({data, position, onUploadProgressCallback}, productGuid: string) {\n    const requestOptions = {\n      method: 'POST',\n      headers: this.headersToken,\n      body: JSON.stringify({position}),\n    };\n\n    if (!data) return {status: 200};\n\n    const response = await fetch(\n        `${environment.setAPIv3()}/catalog/product/upload/${productGuid}`,\n        requestOptions\n    );\n\n    const {code: {url, fields}} = await response.json();\n\n    return await this.uploadToS3({\n        url,\n        image: data,\n        fields,\n        onUploadProgressCallback,\n        position,\n    });\n  }\n\n  public async updateImage({position, data, onUploadProgressCallback}, productGuid: string) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: this.headersToken,\n      body: JSON.stringify({position}),\n    };\n\n    const response = await fetch(`${environment.setAPIv3()}/catalog/product/upload/${productGuid}`, requestOptions);\n\n    const {code: {url, fields}} = await response.json();\n\n    return await this.uploadToS3({\n      url,\n      fields,\n      image: data,\n      onUploadProgressCallback,\n      position,\n    });\n  }\n\n  public updatePositionImage(body, productGuid: string, position) {\n    const requestOptions = {\n      method: 'PUT',\n      headers: this.headersToken,\n      body: JSON.stringify(body),\n    };\n    return fetch(`${environment.setAPIv2()}/catalog/product/upload/${productGuid}?position=${position}`, requestOptions);\n  }\n\n  public deleteImage(productGuid: string, position: number) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: this.headersToken,\n    };\n    return fetch(`${environment.setAPIv2()}/catalog/product/upload/${productGuid}?position=${position}`, requestOptions);\n  }\n\n  public importProduct(body, slug: string) {\n    const requestOptions = {\n      method: 'POST',\n      headers: this.headersToken,\n      body: JSON.stringify(body),\n    };\n    return fetch(`${environment.setAPI()}/catalog/product/import/${slug}`, requestOptions);\n  }\n\n  public importProductsDonwloadFile(body) {\n    const requestOptions = {\n      method: 'POST',\n      headers: this.headersToken,\n      body: JSON.stringify(body),\n    };\n    const guid: any = UserStorage.returnGuid();\n    return fetch(`${environment.setAPI()}/catalog/product/import/${guid}/file`, requestOptions);\n  }\n\n  public importProductsSendFile(body) {\n    const requestOptions = {\n      method: 'POST',\n      headers: this.headersToken,\n      body: JSON.stringify({file: body}),\n    };\n    const guid: any = UserStorage.returnGuid();\n    return fetch(`${environment.setAPI()}/catalog/product/import/${guid}`, requestOptions);\n  }\n}\n"],"sourceRoot":""}]}