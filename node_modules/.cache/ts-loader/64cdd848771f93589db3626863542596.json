{"remainingRequest":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js!/home/aline/AstaPrecifique/node_modules/ts-loader/index.js??ref--13-2!/home/aline/AstaPrecifique/src/views/Login/login.view.ts","dependencies":[{"path":"/home/aline/AstaPrecifique/src/views/Login/login.view.ts","mtime":1696439584845},{"path":"/home/aline/AstaPrecifique/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/AstaPrecifique/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/AstaPrecifique/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5saW5rLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvYWxpbmUvQXN0YVByZWNpZmlxdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9ob21lL2FsaW5lL0FzdGFQcmVjaWZpcXVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvYWxpbmUvQXN0YVByZWNpZmlxdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9hbGluZS9Bc3RhUHJlY2lmaXF1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9ob21lL2FsaW5lL0FzdGFQcmVjaWZpcXVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCBTd2FsIGZyb20gJ3N3ZWV0YWxlcnQyJzsKaW1wb3J0IFZ1ZVNpbXBsZUFsZXJ0IGZyb20gJ3Z1ZS1zaW1wbGUtYWxlcnQnOwppbXBvcnQgVXNlclN0b3JhZ2UgZnJvbSAnQC9zZXJ2aWNlcy9Vc2VyU3RvcmFnZSc7CmltcG9ydCBwcm9kdWN0c1NlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy9wcm9kdWN0cy5zZXJ2aWNlJzsKaW1wb3J0IFJlZ2lzdGVyU2VsbGVyU2VydmljZSBmcm9tICdAL3NlcnZpY2VzL3JlZ2lzdGVyLnNlcnZpY2UnOwppbXBvcnQgVXNlclNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy91c2VyLnNlcnZpY2UnOwppbXBvcnQgeyBsaXN0U3RhdHVzU2VsbGVyVmFsaWQgfSBmcm9tICdAL2Vudmlyb25tZW50cy9saXN0X3N0YXR1c192YWxpZCc7CmltcG9ydCB7IFB1c2hOb3RpZmljYXRpb25zIH0gZnJvbSAnQGNhcGFjaXRvci9wdXNoLW5vdGlmaWNhdGlvbnMnOwppbXBvcnQgeyBEZXZpY2UgfSBmcm9tICdAY2FwYWNpdG9yL2RldmljZSc7CmltcG9ydCBpc0FwcCBmcm9tICcuLi8uLi9lbnZpcm9ubWVudHMvZW52aXJvbm1lbnQnOwppbXBvcnQgbWl4cGFuZWwgZnJvbSAibWl4cGFuZWwtYnJvd3NlciI7Cgp2YXIgbG9naW5WaWV3ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKGxvZ2luVmlldywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIobG9naW5WaWV3KTsKCiAgZnVuY3Rpb24gbG9naW5WaWV3KCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBsb2dpblZpZXcpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5wYWdlID0gX3RoaXMucHJvcFBhZ2U7CiAgICBfdGhpcy5yZWdpc3RlclNlcnZpY2UgPSBuZXcgUmVnaXN0ZXJTZWxsZXJTZXJ2aWNlKCk7CiAgICBfdGhpcy5wcm9kdWN0c1NlcnZpY2UgPSBuZXcgcHJvZHVjdHNTZXJ2aWNlKCk7CiAgICBfdGhpcy51c2VyU2VydmljZSA9IG5ldyBVc2VyU2VydmljZSgpOwogICAgX3RoaXMuZGV2aWNlSWQgPSAnJzsKICAgIF90aGlzLnNob3dWZXJpZmljYXRpb25Db2RlID0gZmFsc2U7CiAgICBfdGhpcy5vcHRJbiA9ICdwaG9uZSc7CiAgICBfdGhpcy5yZWZyZXNoID0gZmFsc2U7CiAgICBfdGhpcy5idXNpbmVzc05hbWUgPSAnJzsKICAgIF90aGlzLmVtYWlsID0gJyc7CiAgICBfdGhpcy5waG9uZSA9ICcnOwogICAgX3RoaXMucmVkaXJlY3RTb2NpYWxDb21tZXJjZSA9ICcnOwogICAgX3RoaXMuZmNtUmVnaXN0ZXIgPSBmYWxzZTsKICAgIF90aGlzLmlucHV0TG9naW4gPSBbewogICAgICB0YWc6ICdpbnB1dCcsCiAgICAgIGxhYmVsOiAnRS1tYWlsIG91IFRlbGVmb25lIGNvbSBXaGF0c0FwcCcsCiAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgaWQ6ICdidXNpbmVzc05hbWVJbnB1dCcsCiAgICAgIGNsYXNzQ29udGFpbmVyOiAnZm9ybS1ncm91cCBteS0yIGNvbC0xMicsCiAgICAgIGNsYXNzSW5wdXQ6ICdmb3JtLWNvbnRyb2wnLAogICAgICBhcmlhRGVzY3JpYmVkYnk6ICdidXNpbmVzc05hbWVIZWxwJywKICAgICAgcGxhY2Vob2xkZXI6ICdEaWdpdGUgc2V1IEUtbWFpbCBvdSBUZWxlZm9uZSBjb20gV2hhdHNBcHAnLAogICAgICBoZWxwOiAnJywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIG1vZGVsOiAnJywKICAgICAgY2xhc3NIZWxwOiAnZm9ybS10ZXh0IHRleHQtbXV0ZWQnLAogICAgICBoYXNUb2FzdEhlbHA6IGZhbHNlLAogICAgICB0b2FzdEhlbHA6ICcnLAogICAgICBzaG93SW5wdXQ6IHRydWUKICAgIH1dOwogICAgX3RoaXMubm90aWZpY2F0aW9uID0ge307CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MobG9naW5WaWV3LCBbewogICAga2V5OiAibW91bnRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgICAgdmFyIHF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnk7CgogICAgICBpZiAocXVlcnkucmVkaXJlY3QpIHsKICAgICAgICB0aGlzLnJlZGlyZWN0U29jaWFsQ29tbWVyY2UgPSBkZWNvZGVVUklDb21wb25lbnQoU3RyaW5nKHF1ZXJ5LnJlZGlyZWN0IHx8ICcnKSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2V0RGV2aWNlSWQoKTsKCiAgICAgIGlmIChpc0FwcCkgewogICAgICAgIHRoaXMubm90aWZpY2F0aW9uUHVzaCgpOwogICAgICB9CgogICAgICB2YXIgZGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsb2dnZWRVc2VyJyk7CiAgICAgIHZhciBwZXJ0aW5obyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BlcnRpbmhvJykgfHwgJ3t9Jyk7CgogICAgICBpZiAoZGF0YSkgewogICAgICAgIHZhciBzdGF0dXNTZWxsZXJBY2NvdW50ID0gSlNPTi5wYXJzZShkYXRhKTsKCiAgICAgICAgaWYgKCFsaXN0U3RhdHVzU2VsbGVyVmFsaWQuaW5jbHVkZXMoc3RhdHVzU2VsbGVyQWNjb3VudC5hY2NvdW50X3N0YXR1cykpIHsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCJxdWVyby12ZW5kZXI/ZXRhcGE9Ii5jb25jYXQoc3RhdHVzU2VsbGVyQWNjb3VudC5hY2NvdW50X3N0YXR1cykpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAocXVlcnkucmVkaXJlY3QpIHsKICAgICAgICAgICAgd2luZG93Lm9wZW4oIiIuY29uY2F0KHRoaXMucmVkaXJlY3RTb2NpYWxDb21tZXJjZSwgIj9ndWlkPSIpLmNvbmNhdChwZXJ0aW5oby5ndWlkLCAiJnR5cGU9Y29uc3VtZXImdG9rZW49IikuY29uY2F0KHBlcnRpbmhvLnRva2VuKSwgJ19zZWxmJyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiZGFzaGJvYXJkIik7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAibm90aWZpY2F0aW9uUHVzaCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbm90aWZpY2F0aW9uUHVzaCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0cnkgewogICAgICAgIFB1c2hOb3RpZmljYXRpb25zLnJlcXVlc3RQZXJtaXNzaW9ucygpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgaWYgKHJlc3VsdC5yZWNlaXZlID09PSAnZ3JhbnRlZCcpIHsKICAgICAgICAgICAgUHVzaE5vdGlmaWNhdGlvbnMucmVnaXN0ZXIoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBQdXNoTm90aWZpY2F0aW9ucy5hZGRMaXN0ZW5lcigncmVnaXN0cmF0aW9uJywgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRva2VuKSB7CiAgICAgICAgICAgIHZhciBpbmZvLCBkZXZpY2VJRDsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBEZXZpY2UuZ2V0SW5mbygpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgIGluZm8gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgIHJldHVybiBEZXZpY2UuZ2V0SWQoKTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICBkZXZpY2VJRCA9IF9jb250ZXh0LnNlbnQudXVpZDsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpczIuZmNtUmVnaXN0ZXIgJiYgZGV2aWNlSUQgJiYgdG9rZW4udmFsdWUgJiYgaW5mby5wbGF0Zm9ybSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnVzZXJTZXJ2aWNlLnJlZ2lzdGVyTm90TG9nZ2VkNE5vdGlmaWNhdGlvbnModG9rZW4udmFsdWUsIGRldmljZUlELCBpbmZvLnBsYXRmb3JtLCAndmVuZGVkb3JlcycpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIuZmNtUmVnaXN0ZXIgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgey8vIGFsZXJ0KGVycik7CiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgICBQdXNoTm90aWZpY2F0aW9ucy5hZGRMaXN0ZW5lcigncHVzaE5vdGlmaWNhdGlvblJlY2VpdmVkJywgZnVuY3Rpb24gKG5vdGlmaWNhdGlvbikgewogICAgICAgICAgX3RoaXMyLnRvYXN0TWVzc2FnZSgnc3VjY2VzcycsIEpTT04uc3RyaW5naWZ5KG5vdGlmaWNhdGlvbi5ib2R5KSk7CiAgICAgICAgfSk7IC8vIE1ldGhvZCBjYWxsZWQgd2hlbiB0YXBwaW5nIG9uIGEgbm90aWZpY2F0aW9uCgogICAgICAgIFB1c2hOb3RpZmljYXRpb25zLmFkZExpc3RlbmVyKCdwdXNoTm90aWZpY2F0aW9uQWN0aW9uUGVyZm9ybWVkJywgZnVuY3Rpb24gKG5vdGlmaWNhdGlvbikgewogICAgICAgICAgdmFyIHVybCA9IG5vdGlmaWNhdGlvbi5ub3RpZmljYXRpb24uZGF0YS5saW5rOyAvLyBhbGVydCh1cmwpOwoKICAgICAgICAgIGlmICh1cmwuc2VhcmNoKCdwZXJ0aW5oby5jb20uYnInKSkgewogICAgICAgICAgICB2YXIgcGFnZSA9IHVybC5zcGxpdCgnLmJyJykucG9wKCk7CiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gcGFnZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgey8vIGFsZXJ0KGVycm9yKQogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0RGV2aWNlSWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZXREZXZpY2VJZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRldmljZV9pZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIERldmljZS5nZXRJZCgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBkZXZpY2VfaWQgPSBfY29udGV4dDIuc2VudC51dWlkOwogICAgICAgICAgICAgICAgdGhpcy5kZXZpY2VJZCA9IGRldmljZV9pZDsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkZXZpY2VfaWQnLCBKU09OLnN0cmluZ2lmeShkZXZpY2VfaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc2V0RGV2aWNlSWQoKSB7CiAgICAgICAgcmV0dXJuIF9zZXREZXZpY2VJZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc2V0RGV2aWNlSWQ7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJzdGVwTW9kZWxMb2dpbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3RlcE1vZGVsTG9naW4odmFsdWUpIHsKICAgICAgdmFyIHJlZyA9IC9bYS16QS1aXHUwMEMwLVx1MDBGRiBdKy9pOwogICAgICByZWcudGVzdCh2YWx1ZSkgJiYgdmFsdWUuaW5jbHVkZXMoJ0AnKSA/IHRoaXMuZW1haWwgPSB2YWx1ZSA6IHRoaXMuZW1haWwgPSB0aGlzLnJlbW92ZU1hc2sodmFsdWUpOwogICAgfQogIH0sIHsKICAgIGtleTogImNvZGVDb25maXJtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb2RlQ29uZmlybShjb2RlKSB7CiAgICAgIHRoaXMuY29kZUxvZ2luU2VsbGVyKGNvZGUpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZnJlc2hDb2RlQ29uZmlybSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVmcmVzaENvZGVDb25maXJtKCkgewogICAgICB0aGlzLmxvZ2luU2VsbGVyKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9naW5TZWxsZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dpblNlbGxlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBlcnJvcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJTZXJ2aWNlLmxvZ2luU2VsbGVyKHsKICAgICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICAgIGRldmljZV9pZDogdGhpcy5kZXZpY2VJZCwKICAgICAgICAgICAgICAgICAgYXV0aDogMgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSByZXNwb25zZS5zdGF0dXM7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IF9jb250ZXh0My50MCA9PT0gMjAxID8gNiA6IF9jb250ZXh0My50MCA9PT0gMjAyID8gNiA6IF9jb250ZXh0My50MCA9PT0gNDAwID8gOSA6IF9jb250ZXh0My50MCA9PT0gNDIzID8gOSA6IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHRoaXMub3BlblZlcmlmaWNhdGlvbkNvZGUoKTsKICAgICAgICAgICAgICAgIHRoaXMubG9naW5TZWxsZXJNaXhwYW5lbCgpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoImJyZWFrIiwgMTQpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGVycm9yID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICB0aGlzLnRvYXN0TWVzc2FnZSgnZXJyb3InLCBlcnJvcik7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgiYnJlYWsiLCAxNCk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBsb2dpblNlbGxlcigpIHsKICAgICAgICByZXR1cm4gX2xvZ2luU2VsbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBsb2dpblNlbGxlcjsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImxvZ2luU2VsbGVyTWl4cGFuZWwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luU2VsbGVyTWl4cGFuZWwoKSB7CiAgICAgIG1peHBhbmVsLnRyYWNrKCJMb2dpbl9TZWxsZXIiLCB7CiAgICAgICAgJ2VtYWlsJzogdGhpcy5lbWFpbCwKICAgICAgICAnZGV2aWRlX2lkJzogdGhpcy5kZXZpY2VJZAogICAgICB9KTsKICAgICAgbWl4cGFuZWwuaWRlbnRpZnkodGhpcy5lbWFpbCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY29kZUxvZ2luU2VsbGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY29kZUxvZ2luU2VsbGVyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChjb2RlKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhLCBlcnJvcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJTZXJ2aWNlLmNvZGVMb2dpblNlbGxlcih7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgICAgICAgICAgICBjb2RlOiBjb2RlLAogICAgICAgICAgICAgICAgICBkZXZpY2VfaWQ6IHRoaXMuZGV2aWNlSWQsCiAgICAgICAgICAgICAgICAgIGF1dGg6IDIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gcmVzcG9uc2Uuc3RhdHVzOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSBfY29udGV4dDQudDAgPT09IDIwMSA/IDYgOiBfY29udGV4dDQudDAgPT09IDIwMiA/IDYgOiBfY29udGV4dDQudDAgPT09IDQwMCA/IDE2IDogX2NvbnRleHQ0LnQwID09PSA0MjMgPyAxNiA6IDIxOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwZXJ0aW5obycsIEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgICAgICAgICAgIFVzZXJTdG9yYWdlLnNhdmVEYXRhKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKCiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWRpcmVjdFNvY2lhbENvbW1lcmNlKSB7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKCIiLmNvbmNhdCh0aGlzLnJlZGlyZWN0U29jaWFsQ29tbWVyY2UsICIvZmVlZD9ndWlkPSIpLmNvbmNhdChkYXRhLmd1aWQsICImdHlwZT1jb25zdW1lciZ0b2tlbj0iKS5jb25jYXQoZGF0YS50b2tlbiksICdfc2VsZicpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRVc2VyKCk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlVmVyaWZpY2F0aW9uQ29kZSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoImJyZWFrIiwgMjEpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBlcnJvciA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgdGhpcy50b2FzdE1lc3NhZ2UoJ2Vycm9yJywgZXJyb3IpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoImJyZWFrIiwgMjEpOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY29kZUxvZ2luU2VsbGVyKF94MikgewogICAgICAgIHJldHVybiBfY29kZUxvZ2luU2VsbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjb2RlTG9naW5TZWxsZXI7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJnZXRVc2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0VXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhLCBsb2dnZWRVc2VyLCBlcnJvcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvZHVjdHNTZXJ2aWNlLmdldFByb2RjdXRzQWxsKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSByZXNwb25zZS5zdGF0dXM7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IF9jb250ZXh0NS50MCA9PT0gMjAwID8gNiA6IF9jb250ZXh0NS50MCA9PT0gMjAxID8gNiA6IF9jb250ZXh0NS50MCA9PT0gMjAyID8gNiA6IF9jb250ZXh0NS50MCA9PT0gNDAwID8gMTQgOiBfY29udGV4dDUudDAgPT09IDQwNCA/IDE0IDogX2NvbnRleHQ1LnQwID09PSA0MjMgPyAxNCA6IDE5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsb2dnZWRVc2VyJywgSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICAgICAgICAgICAgbG9nZ2VkVXNlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xvZ2dlZFVzZXInKSB8fCAnJyk7CiAgICAgICAgICAgICAgICB0aGlzLnRvYXN0TWVzc2FnZSgnc3VjY2VzcycsICJCZW0gdmluZG8sICIuY29uY2F0KGxvZ2dlZFVzZXIubmFtZSwgIiEiKSk7CiAgICAgICAgICAgICAgICBkYXRhLmFjY291bnRfc3RhdHVzICE9PSAnRicgPyB0aGlzLnJlZGlyZWN0UGFnZVJlZ2lzdGVyKGRhdGEuYWNjb3VudF9zdGF0dXMpIDogdGhpcy5yZWRpcmVjdFBhZ2UoKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJicmVhayIsIDE5KTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgZXJyb3IgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMudG9hc3RNZXNzYWdlKCdlcnJvcicsIGVycm9yLmRldGFpbCA/IGVycm9yLmRldGFpbCA6IGVycm9yKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJicmVhayIsIDE5KTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldFVzZXIoKSB7CiAgICAgICAgcmV0dXJuIF9nZXRVc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRVc2VyOwogICAgfSgpCiAgfSwgewogICAga2V5OiAicmVkaXJlY3RQYWdlUmVnaXN0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZGlyZWN0UGFnZVJlZ2lzdGVyKGFjY291bnRTdGF0dXMpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9xdWVyby12ZW5kZXI/ZXRhcGE9Ii5jb25jYXQoYWNjb3VudFN0YXR1cykpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZGlyZWN0UGFnZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVkaXJlY3RQYWdlKCkgewogICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgna2V5LWFjcGQnKSA/IHRoaXMuJHJvdXRlci5wdXNoKCJtZXVzLXBlZGlkb3MvIi5jb25jYXQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2tleS1hY3BkJykpKSA6IHRoaXMucGFnZSA9PT0gJ2NvdXJzZXMnID8gdGhpcy4kZW1pdCgnY2xvc2VNb2RhbExvZ2luJywgdHJ1ZSkgOiB0aGlzLiRyb3V0ZXIucHVzaCgnZGFzaGJvYXJkJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAidG9hc3RNZXNzYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0b2FzdE1lc3NhZ2UodHlwZSwgdGl0bGUpIHsKICAgICAgVnVlU2ltcGxlQWxlcnQuZmlyZSh7CiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgcG9zaXRpb246ICd0b3AtZW5kJywKICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgdGltZXI6IDUwMDAsCiAgICAgICAgb25PcGVuOiBmdW5jdGlvbiBvbk9wZW4odG9hc3QpIHsKICAgICAgICAgIHRvYXN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBTd2FsLnN0b3BUaW1lciksIHRvYXN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBTd2FsLnJlc3VtZVRpbWVyKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogIm9wZW5WZXJpZmljYXRpb25Db2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuVmVyaWZpY2F0aW9uQ29kZSgpIHsKICAgICAgdGhpcy5zaG93VmVyaWZpY2F0aW9uQ29kZSA9IHRydWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xvc2VWZXJpZmljYXRpb25Db2RlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9zZVZlcmlmaWNhdGlvbkNvZGUoKSB7CiAgICAgIHRoaXMuc2hvd1ZlcmlmaWNhdGlvbkNvZGUgPSBmYWxzZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW1vdmVNYXNrIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVNYXNrKG1vYmlsZSkgewogICAgICByZXR1cm4gbW9iaWxlLnJlcGxhY2UoL1teMC05XS9nLCAnJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmFuZG9tTnVtYmVyTGV0dGVycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmFuZG9tTnVtYmVyTGV0dGVycygpIHsKICAgICAgdmFyIGQgPSBuZXcgRGF0ZSgpOwogICAgICB2YXIgbiA9IGQuZ2V0VGltZSgpOwogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNjU1MzYpICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCAnJykuc3Vic3RyKDAsIDUpICsgJ1BFUlRJTkhPJyArIG47CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNNb2JpbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzTW9iaWxlKCkgewogICAgICByZXR1cm4gQm9vbGVhbigvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIGxvZ2luVmlldzsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCgpXSwgbG9naW5WaWV3LnByb3RvdHlwZSwgInByb3BQYWdlIiwgdm9pZCAwKTsKCmxvZ2luVmlldyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7fSldLCBsb2dpblZpZXcpOwpleHBvcnQgeyBsb2dpblZpZXcgfTs="},{"version":3,"sources":["/home/aline/AstaPrecifique/src/views/Login/login.view.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Vue } from 'vue-property-decorator';\n\nimport Swal, { SweetAlertType } from 'sweetalert2';\nimport VueSimpleAlert from 'vue-simple-alert';\n\n\nimport UserStorage from '@/services/UserStorage';\nimport productsService from '@/services/products.service';\nimport RegisterSellerService from '@/services/register.service';\nimport UserService from '@/services/user.service';\n\nimport { InputForms } from '@/models/inputForms';\nimport { listStatusSellerValid } from '@/environments/list_status_valid';\n\nimport {\n  PushNotifications,\n} from '@capacitor/push-notifications';\nimport { Device } from '@capacitor/device';\nimport isApp from '../../environments/environment';\nimport mixpanel from \"mixpanel-browser\";\n\n\n@Component({})\nexport class loginView extends Vue {\n\n  @Prop() propPage!: string;\n\n  public page: string = this.propPage;\n\n  private registerService = new RegisterSellerService();\n  private productsService = new productsService();\n  private userService = new UserService();\n\n  public deviceId: string = '';\n  public showVerificationCode: boolean = false;\n  public optIn: string = 'phone';\n  public refresh: boolean = false;\n  public businessName: string = '';\n  public email: string = '';\n  public phone: string = '';\n  private redirectSocialCommerce: string = '';\n\n  public fcmRegister: boolean = false;\n\n  public inputLogin: InputForms[] = [{\n    tag: 'input',\n    label: 'E-mail ou Telefone com WhatsApp',\n    type: 'text',\n    id: 'businessNameInput',\n    classContainer: 'form-group my-2 col-12',\n    classInput: 'form-control',\n    ariaDescribedby: 'businessNameHelp',\n    placeholder: 'Digite seu E-mail ou Telefone com WhatsApp',\n    help: '',\n    required: true,\n    model: '',\n    classHelp: 'form-text text-muted',\n    hasToastHelp: false,\n    toastHelp: '',\n    showInput: true,\n  }];\n\n  public notification = {};\n\n  mounted() {\n    const query = this.$route.query;\n\n    if (query.redirect) {\n      this.redirectSocialCommerce = decodeURIComponent(String(query.redirect || ''));\n    }\n\n    this.setDeviceId();\n    if (isApp) {\n      this.notificationPush();\n    }\n\n    const data = localStorage.getItem('loggedUser');\n    const pertinho: any = JSON.parse(localStorage.getItem('pertinho') || '{}');\n    if (data) {\n      const statusSellerAccount = JSON.parse(data);\n      if (!listStatusSellerValid.includes(statusSellerAccount.account_status)) {\n        this.$router.push(`quero-vender?etapa=${statusSellerAccount.account_status}`);\n      } else {\n        if (query.redirect) {\n          window.open(`${this.redirectSocialCommerce}?guid=${pertinho.guid}&type=consumer&token=${pertinho.token}`,\n            '_self');\n          return;\n        }\n        this.$router.push(`dashboard`);\n      }\n    }\n  }\n\n  private notificationPush() {\n    try {\n      PushNotifications.requestPermissions().then(result => {\n        if (result.receive === 'granted') {\n          PushNotifications.register();\n        }\n      });\n\n      PushNotifications.addListener('registration',\n        async (token) => {\n          const info = await Device.getInfo();\n          const deviceID = (await Device.getId()).uuid;\n\n          if (!this.fcmRegister && deviceID && token.value && info.platform) {\n            this.userService.registerNotLogged4Notifications(token.value, deviceID, info.platform, 'vendedores').then((result) => {\n              this.fcmRegister = true;\n            }).catch((err) => {\n              // alert(err);\n            })\n          }\n\n        },\n      );\n\n      PushNotifications.addListener('pushNotificationReceived',\n        (notification) => {\n          this.toastMessage('success', JSON.stringify(notification.body));\n        },\n      );\n\n      // Method called when tapping on a notification\n      PushNotifications.addListener('pushNotificationActionPerformed',\n        (notification) => {\n          const url = notification.notification.data.link;\n          // alert(url);\n\n          if (url.search('pertinho.com.br')) {\n            const page = url.split('.br').pop();\n            window.location.href = page;\n          } else {\n            window.location.href = url;\n          }\n        },\n      );\n    } catch (error) {\n      // alert(error)\n    }\n  }\n\n  private async setDeviceId() {\n    const device_id = (await Device.getId()).uuid;\n    this.deviceId = device_id;\n    localStorage.setItem('device_id', JSON.stringify(device_id));\n  }\n\n  public stepModelLogin(value: string) {\n    const reg = /[a-zA-Z\\u00C0-\\u00FF ]+/i;\n\n    reg.test(value) && value.includes('@')\n      ? (this.email = value)\n      : (this.email = this.removeMask(value));\n  }\n\n  public codeConfirm(code: string) {\n    this.codeLoginSeller(code);\n  }\n\n  public refreshCodeConfirm() {\n    this.loginSeller();\n  }\n\n  public async loginSeller() {\n\n    const response = await this.registerService.loginSeller({\n      email: this.email,\n      device_id: this.deviceId,\n      auth: 2,\n    });\n    switch (response.status) {\n      case 201:\n      case 202:\n\n        this.openVerificationCode();\n        this.loginSellerMixpanel();\n\n        break;\n      case 400:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error);\n        break;\n    }\n  }\n\n  loginSellerMixpanel() {\n\n    mixpanel.track(\"Login_Seller\", {\n\n\n      'email': this.email,\n      'devide_id': this.deviceId\n\n    });\n    mixpanel.identify(this.email);\n\n  }\n  private async codeLoginSeller(code: string) {\n    const response = await this.registerService.codeLoginSeller({\n      email: this.email,\n      code,\n      device_id: this.deviceId,\n      auth: 2,\n    });\n    switch (response.status) {\n      case 201:\n      case 202:\n        const data = await response.json();\n        localStorage.setItem('pertinho', JSON.stringify(data));\n        UserStorage.saveData(JSON.stringify(data));\n        if (this.redirectSocialCommerce) {\n          window.open(`${this.redirectSocialCommerce}/feed?guid=${data.guid}&type=consumer&token=${data.token}`,\n            '_self');\n        }\n        await this.getUser();\n        this.closeVerificationCode();\n        break;\n      case 400:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error);\n        break;\n    }\n  }\n\n  private async getUser() {\n    const response = await this.productsService.getProdcutsAll();\n    switch (response.status) {\n      case 200:\n      case 201:\n      case 202:\n        const data = await response.json();\n        localStorage.setItem('loggedUser', JSON.stringify(data));\n        const loggedUser = JSON.parse(localStorage.getItem('loggedUser') || '');\n        this.toastMessage('success', `Bem vindo, ${loggedUser.name}!`);\n        data.account_status !== 'F'\n          ? this.redirectPageRegister(data.account_status)\n          : this.redirectPage();\n        break;\n      case 400:\n      case 404:\n      case 423:\n        const error = await response.json();\n        this.toastMessage('error', error.detail ? error.detail : error);\n        break;\n    }\n  }\n\n  private redirectPageRegister(accountStatus: string) {\n    this.$router.push(`/quero-vender?etapa=${accountStatus}`);\n  }\n\n  private redirectPage() {\n    localStorage.getItem('key-acpd')\n      ? this.$router.push(`meus-pedidos/${localStorage.getItem('key-acpd')}`)\n      : this.page === 'courses'\n        ? this.$emit('closeModalLogin', true)\n        : this.$router.push('dashboard');\n  }\n\n  private toastMessage(type: SweetAlertType, title: string) {\n    VueSimpleAlert.fire({\n      type,\n      title,\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 5000,\n      onOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer),\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n      },\n    });\n  }\n\n  public openVerificationCode() {\n    this.showVerificationCode = true;\n  }\n\n  public closeVerificationCode() {\n    this.showVerificationCode = false;\n  }\n\n  private removeMask(mobile) {\n    return mobile.replace(/[^0-9]/g, '');\n  }\n\n  private randomNumberLetters() {\n    const d = new Date();\n    const n = d.getTime();\n    return (\n      Math.floor(Math.random() * 65536) +\n      Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 5) +\n      'PERTINHO' +\n      n\n    );\n  }\n\n  private isMobile() {\n    return Boolean(\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent,\n      ),\n    );\n  }\n}\n"],"sourceRoot":""}]}