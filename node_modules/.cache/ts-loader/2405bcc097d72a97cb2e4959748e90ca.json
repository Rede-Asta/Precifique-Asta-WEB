{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js!/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js??ref--13-2!/home/aline/GitHub/admin-frontend/src/views/Register-Seller/register-seller.ts","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/views/Register-Seller/register-seller.ts","mtime":1675112993851},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/aline/GitHub/admin-frontend/src/views/Register-Seller/register-seller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,GAApB,QAA6C,wBAA7C;AACA,OAAO,IAAP,MAA6C,aAA7C;AACA,OAAO,cAAP,MAA6C,kBAA7C;AAEA,SAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,QAA6C,yBAA7C;AAGA,OAAO,qBAAP,MAA6C,6BAA7C;AACA,OAAO,WAAP,MAA6C,wBAA7C;AACA,OAAO,eAAP,MAA6C,6BAA7C;AACA,SAAS,qBAAT,QAAsC,kCAAtC;AACA,OAAO,YAAP,MAAyB,wBAAzB;AAGA,SAAS,MAAT,QAAuB,mBAAvB;;AAGA,IAAa,cAAb;AAAA;;AAAA;;AAyCI,4BAAA;AAAA;;AAAA;;AACI;AAxCG,UAAA,SAAA,GAAoB,2CAApB;AACA,UAAA,UAAA,GAAqB,EAArB;AACA,UAAA,YAAA,GAAuB,EAAvB;AACA,UAAA,WAAA,GAAsB,EAAtB;AAEA,UAAA,IAAA,GAAe,EAAf;AACA,UAAA,KAAA,GAAsB,KAAtB;AACA,UAAA,KAAA,GAAsB,KAAtB;AACA,UAAA,KAAA,GAAsB,KAAtB;AACA,UAAA,KAAA,GAAsB,KAAtB;AACA,UAAA,KAAA,GAAgB,OAAhB;AACA,UAAA,OAAA,GAAmB,KAAnB;AACA,UAAA,YAAA,GAAuB,EAAvB;AACA,UAAA,KAAA,GAAgB,EAAhB;AACA,UAAA,KAAA,GAAgB,EAAhB;AACA,UAAA,gBAAA,GAA2B,EAA3B;AACA,UAAA,YAAA,GAAwB,KAAxB;AACA,UAAA,YAAA,GAAwB,IAAxB;AACA,UAAA,MAAA,GAAkB,KAAlB;AACA,UAAA,QAAA,GAAmB,EAAnB;AACA,UAAA,aAAA,GAAkC,EAAlC;AACA,UAAA,UAAA,GAAsB,KAAtB;AAEA,UAAA,SAAA,GAAqB,KAArB;AACA,UAAA,oBAAA,GAAgC,KAAhC;AACA,UAAA,cAAA,GAA0B,KAA1B;AACA,UAAA,QAAA,GAAoB,KAApB;AAEC,UAAA,eAAA,GAAkB,IAAI,qBAAJ,EAAlB;AACA,UAAA,eAAA,GAAkB,IAAI,eAAJ,EAAlB;AAED,UAAA,YAAA,GAAe;AACpB,aAAO,CADa;AAEpB,aAAO,CAFa;AAGpB,eAAS,CAHW;AAIpB,cAAQ,CAJY;AAKpB,cAAQ;AALY,KAAf;;AAshBC,UAAA,UAAA,GAAa,UAAC,MAAD,EAAmB;AACpC,YAAK,OAAL,CAAa;AACT,QAAA,KAAK,EAAE,eADE;AAET,QAAA,QAAQ,EAAE;AAFD,OAAb;AAIH,KALO;;AAOA,UAAA,YAAA,GAAe,UAAC,IAAD,EAAyB;AAC5C,UAAI,KAAK,GAAG,CAAZ;;AACA,cAAQ,IAAR;AACI,aAAK,KAAL;AACA,aAAK,GAAL;AACI,UAAA,KAAK,GAAG,CAAR;AACA;;AACJ,aAAK,KAAL;AACA,aAAK,GAAL;AACI,UAAA,KAAK,GAAG,CAAR;AACA;;AACJ,aAAK,OAAL;AACA,aAAK,GAAL;AACI,UAAA,KAAK,GAAG,CAAR;AACA;;AACJ,aAAK,MAAL;AACA,aAAK,GAAL;AACI,UAAA,KAAK,GAAG,CAAR;AACA;;AACJ,aAAK,MAAL;AACA,aAAK,GAAL;AACI,UAAA,KAAK,GAAG,CAAR;AACA;AApBR;;AAsBA,aAAO,KAAP;AACH,KAzBO;;AArhBR;AAEC;;AA3CL;AAAA;AAAA,8BA6CW;AACH,WAAK,UAAL,GAAkB,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAApC;AACA,WAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,GACM,KAAK,YAAL,GAAoB,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAD5C,GAEM,KAAK,YAAL,GAAoB,EAF1B;AAIA,WAAK,gBAAL;AACA,WAAK,oBAAL;AACA,WAAK,iBAAL;AACA,WAAK,YAAL;AACA,WAAK,eAAL;AACH;AAxDL;AAAA;AAAA,8BA0DW;AACH,WAAK,WAAL;AACA,WAAK,WAAL,GAAmB,YAAY,EAA/B;AACA,UAAM,IAAI,GAAG,YAAY,CAAC,OAAb,CAAqB,YAArB,CAAb;;AACA,UAAI,IAAJ,EAAU;AACN,YAAM,mBAAmB,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAA5B;;AACA,YAAI,CAAC,qBAAqB,CAAC,QAAtB,CAA+B,mBAAmB,CAAC,cAAnD,CAAL,EAAyE;AACrE,eAAK,OAAL,CAAa,IAAb,8BAAwC,mBAAmB,CAAC,cAA5D;AACH,SAFD,MAEO;AACH,eAAK,OAAL,CAAa,IAAb;AACH;AACJ;;AACD,WAAK,UAAL,GAAkB,IAAlB;AACH;AAvEL;AAAA;AAAA,mCAyEwB;AACf,WAAK,UAAN,GACM,KAAK,OAAL,CAAa,KAAK,2BAAL,CAAiC,KAAK,UAAtC,CAAb,CADN,GAEO,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAD,GACI,KAAK,OAAL,CAAa,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAb,CADJ,GAEI,KAAK,OAAL,CAAa,KAAb,CAJV;AAKH;AA/EL;AAAA;AAAA,sCAiF0B;AAClB,UAAM,YAAY,GAAG,YAAY,CAAC,OAAb,CAAqB,cAArB,IAAuC,YAAY,CAAC,OAAb,CAAqB,cAArB,CAAvC,GAA8E,EAAnG;;AACA,UAAI,YAAJ,EAAkB;AACd,aAAK,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,YAAX,EAAyB,KAA7C;AACH;AACJ;AAtFL;AAAA;AAAA,oCAwF2B,KAxF3B,EAwFyC;AACjC,WAAK,YAAL,GAAoB,KAApB;AACH;AA1FL;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA6F+B,KAAK,eAAL,CAAqB,gBAArB,EA7F/B;;AAAA;AA6Fc,gBAAA,QA7Fd;AAAA,8BA8FgB,QAAQ,CAAC,MA9FzB;AAAA,gDA+FiB,GA/FjB,uBAgGiB,GAhGjB,uBAiGiB,GAjGjB;AAAA;;AAAA;AAAA;AAAA,uBAkGmC,QAAQ,CAAC,IAAT,EAlGnC;;AAAA;AAkGsB,gBAAA,IAlGtB;AAmGgB,qBAAK,KAAL,CAAW,CAAX,EAAc,OAAd,GAAwB,EAAxB;AACA,gBAAA,IAAI,CAAC,GAAL,CAAS,UAAC,MAAD,EAAkB;AACvB,sBAAI,MAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAlB,EAA2B;AACvB,oBAAA,MAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAd,CAAsB,IAAtB,CAA2B;AAAE,sBAAA,EAAE,EAAE,MAAM,CAAC,CAAD,CAAZ;AAAiB,sBAAA,KAAK,YAAK,MAAM,CAAC,CAAD,CAAX,gBAAoB,MAAM,CAAC,CAAD,CAA1B;AAAtB,qBAA3B;AACH;AACJ,iBAJD;AApGhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA8G+B,KAAK,eAAL,CAAqB,oBAArB,EA9G/B;;AAAA;AA8Gc,gBAAA,QA9Gd;AAAA,+BA+GgB,QAAQ,CAAC,MA/GzB;AAAA,kDAgHiB,GAhHjB,wBAiHiB,GAjHjB,wBAkHiB,GAlHjB;AAAA;;AAAA;AAAA;AAAA,uBAmHmC,QAAQ,CAAC,IAAT,EAnHnC;;AAAA;AAmHsB,gBAAA,IAnHtB;AAoHgB,qBAAK,KAAL,CAAW,CAAX,EAAc,OAAd,GAAwB,EAAxB;AACA,gBAAA,IAAI,CAAC,GAAL,CAAS,UAAC,MAAD,EAAkB;AACvB,sBAAI,MAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAlB,EAA2B;AACvB,oBAAA,MAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAd,CAAsB,IAAtB,CAA2B;AAAE,sBAAA,EAAE,EAAE,MAAM,CAAC,CAAD,CAAZ;AAAiB,sBAAA,KAAK,YAAK,MAAM,CAAC,CAAD,CAAX,gBAAoB,MAAM,CAAC,CAAD,CAA1B;AAAtB,qBAA3B;AACH;AACJ,iBAJD;AArHhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+H+B,KAAK,eAAL,CAAqB,iBAArB,EA/H/B;;AAAA;AA+Hc,gBAAA,QA/Hd;AAAA,+BAgIgB,QAAQ,CAAC,MAhIzB;AAAA,kDAiIiB,GAjIjB,wBAkIiB,GAlIjB,wBAmIiB,GAnIjB;AAAA;;AAAA;AAAA;AAAA,uBAoImC,QAAQ,CAAC,IAAT,EApInC;;AAAA;AAoIsB,gBAAA,IApItB;AAqIgB,qBAAK,aAAL,GAAqB,IAArB;AACA,qBAAK,KAAL,CAAW,CAAX,EAAc,OAAd,GAAwB,IAAI,CAAC,GAAL,CAAS,UAAA,QAAQ,EAAG;AACxC,yBAAO;AACH,oBAAA,EAAE,EAAE,QAAQ,CAAC,IADV;AAEH,oBAAA,KAAK,EAAE,QAAQ,CAAC;AAFb,mBAAP;AAIH,iBALuB,CAAxB;AAtIhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAgJoB,IAhJpB,EAgJgC;AACxB,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,kBAAL;AACA,WAAK,oBAAL;AACA,WAAK,YAAL;AACH;AArJL;AAAA;AAAA,2CAuJgC;AACxB,cAAQ,KAAK,IAAb;AACI,aAAK,KAAL;AACI,eAAK,mBAAL,CAAyB,SAAzB,EAAoC,KAAK,KAAzC;AACA;;AACA,aAAK,KAAL;AACA,eAAK,mBAAL,CAAyB,SAAzB,EAAoC,KAAK,KAAzC;AACA;;AACJ,aAAK,OAAL;AACI,eAAK,mBAAL,CAAyB,WAAzB,EAAsC,KAAK,KAA3C;AACA;;AACJ,aAAK,MAAL;AACI,eAAK,mBAAL,CAAyB,UAAzB,EAAqC,KAAK,KAA1C;AACA;AAZR;AAcH;AAtKL;AAAA;AAAA,+BAwKmB;AACX,cAAQ,KAAK,IAAb;AACI,aAAK,KAAL;AACI,eAAK,OAAL,CAAa,KAAb;AACA;;AACJ,aAAK,OAAL;AACI,eAAK,OAAL,CAAa,KAAb;AACA;;AACJ,aAAK,MAAL;AACI,eAAK,OAAL,CAAa,OAAb;AACA;;AACJ,aAAK,MAAL;AACI,eAAK,OAAL,CAAa,MAAb;AACA;AAZR;AAcH;AAvLL;AAAA;AAAA,+BAyLmB;AACX,cAAQ,KAAK,IAAb;AACI,aAAK,KAAL;AACI,eAAK,mBAAL;AACA,eAAK,UAAL,CAAgB,wBAAhB,EAFJ,CAGI;;AACA;;AACJ,aAAK,KAAL;AACI;AACA,eAAK,cAAL;AACA,eAAK,UAAL,CAAgB,wBAAhB,EAHJ,CAII;;AACA;;AACJ,aAAK,OAAL;AACI,eAAK,4BAAL;AACA,eAAK,UAAL,CAAgB,sBAAhB;AACA,eAAK,YAAL,GAAoB,IAApB,CAHJ,CAII;;AACA;;AACJ,aAAK,MAAL;AACI,cAAI,SAAS,GAAG,EAAhB;AACA,cAAI,QAAQ,GAAG,EAAf;;AACA,cAAI,YAAY,CAAC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACnC,YAAA,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,WAArB,KAAqC,EAAhD,CAAZ;AACH;;AACD,cAAI,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AAClC,YAAA,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,KAAoC,EAA/C,CAAX;AACH;;AACD,eAAK,oBAAL,CAA0B;AACtB,YAAA,WAAW,EAAE,QAAQ,CAAC,CAAD,CADC;AAEtB,YAAA,MAAM,EAAE,QAAQ,CAAC,CAAD,CAAR,CAAY,EAFE;AAGtB,YAAA,QAAQ,EAAE,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAQ,CAAC,CAAD,CAAtB,GAA4B,SAAS,CAAC,CAAD;AAHzB,WAA1B,EAIG,MAJH;AAKA,eAAK,YAAL,GAAoB,IAApB;AACA,eAAK,UAAL,CAAgB,gBAAhB,EAfJ,CAgBI;;AACA;AAnCR;AAqCH;AA/NL;AAAA;AAAA,wCAiO4B;AACpB,WAAK,2BAAL;AACA,WAAK,eAAL;AACH;AApOL;AAAA;AAAA,mCAsOwB;AAChB,cAAQ,KAAK,IAAb;AACI,aAAK,KAAL;AACI,eAAK,SAAL,GAAiB,2CAAjB;AACA;;AACJ,aAAK,KAAL;AACI,eAAK,SAAL,GAAiB,wCAAjB;AACA;;AACJ,aAAK,OAAL;AACI,eAAK,SAAL,GAAiB,qDAAjB;AACA;;AACA,aAAK,MAAL;AACA,eAAK,SAAL,GAAiB,qCAAjB;AACA;;AACJ,aAAK,MAAL;AACI,eAAK,SAAL,GAAiB,4CAAjB;AACA;AAfR;AAiBH;AAxPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA2PiC,MAAM,CAAC,KAAP,EA3PjC;;AAAA;AA2Pc,gBAAA,SA3Pd,kBA2PiD,IA3PjD;AA4PQ,qBAAK,QAAL,GAAiB,SAAjB;AACA,gBAAA,YAAY,CAAC,OAAb,CAAqB,WAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,SAAf,CAAlC;;AA7PR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiQc,gBAAA,OAjQd,GAiQwB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,KAAmC,EAA9C,CAjQxB;AAkQc,gBAAA,YAlQd,GAkQ6B,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,cAArB,KAAwC,EAAnD,CAlQ7B;;AAqQQ,oBAAI,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACjC,kBAAA,WAAW,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,KAAmC,EAA9C,CAAd;AACH;;AAvQT,sBAyQY,OAAO,IAAI,YAzQvB;AAAA;AAAA;AAAA;;AA0QgB,gBAAA,OA1QhB,GA0Q0B,EA1Q1B;AA2QgB,gBAAA,QA3QhB,GA2Q2B,EA3Q3B;;AA6QY,oBAAI,KAAK,YAAL,KAAsB,cAA1B,EAA0C;AACtC,kBAAA,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC,CAAD,CAAX,CAAe,EAAlB,GAAuB,EAA5C;AACA,kBAAA,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC,CAAD,CAAd,GAAoB,EAA1C;AACH,iBAHD,MAGO,IAAI,KAAK,YAAL,KAAsB,IAA1B,EAAgC;AACnC,kBAAA,OAAO,GAAG,IAAV;AACA,kBAAA,QAAQ,GAAG,WAAW,CAAC,CAAD,CAAX,CAAe,KAAf,KAAyB,QAAzB,oBAA8C,WAAW,CAAC,CAAD,CAAzD,IAAiE,WAAW,CAAC,CAAD,CAAX,CAAe,KAA3F;AACH,iBAHM,MAGA,IAAI,KAAK,YAAT,EAAuB;AAC1B,kBAAA,OAAO,GAAG,KAAK,YAAf;AACH;;AAEK,gBAAA,IAvRlB,GAuRyB;AACT,kBAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CADJ;AAET,kBAAA,MAAM,EAAE,KAAK,UAAL,CAAgB,OAAO,CAAC,CAAD,CAAvB,CAFC;AAGT,kBAAA,KAAK,EAAE,OAAO,CAAC,CAAD,CAHL;AAIT,kBAAA,SAAS,EAAE,KAAK,QAJP;AAKT,kBAAA,IAAI,EAAE,CALG;AAMT,kBAAA,MAAM,EAAE,YAAY,CAAC,KANZ;AAOT,kBAAA,OAAO,EAAP,OAPS;AAQT,kBAAA,QAAQ,EAAR,QARS;AAST,kBAAA,MAAM,EAAE,KAAK,QATJ;AAUT,kBAAA,aAAa,EAAE,KAAK;AAVX,iBAvRzB;;AAoSY,oBAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,yBAAO,IAAI,CAAC,aAAZ;AACH;;AAtSb;AAAA,uBAwSmC,KAAK,eAAL,CAAqB,oBAArB,CAA0C,IAA1C,CAxSnC;;AAAA;AAwSkB,gBAAA,QAxSlB;AAAA,+BAySoB,QAAQ,CAAC,MAzS7B;AAAA,kDA0SqB,GA1SrB,yBA6SqB,GA7SrB,yBA8SqB,GA9SrB,yBA+SqB,GA/SrB;AAAA;;AAAA;AA2SoB,qBAAK,oBAAL;AA3SpB;;AAAA;AAAA;AAAA,uBAgTwC,QAAQ,CAAC,IAAT,EAhTxC;;AAAA;AAgT0B,gBAAA,KAhT1B;AAiToB,gBAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,KAAK,EAAG;AAC/B,0BAAQ,KAAR;AACI,yBAAK,QAAL;AACI,sBAAA,MAAI,CAAC,OAAL,CAAa,MAAI,CAAC,KAAlB,EAAyB,CAAzB,EAA4B,KAAK,CAAC,MAAN,CAAa,CAAb,CAA5B,EAA6C,SAA7C;;AACA;;AACJ,yBAAK,OAAL;AACI,sBAAA,MAAI,CAAC,OAAL,CAAa,MAAI,CAAC,KAAlB,EAAyB,CAAzB,EAA4B,KAAK,CAAC,KAAN,CAAY,CAAZ,CAA5B,EAA4C,SAA5C;;AACA;AANR;AAQH,iBATD;AAUA,qBAAK,WAAL;AA3TpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkUc,gBAAA,OAlUd,GAkUwB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,KAAmC,EAA9C,CAlUxB;AAmUc,gBAAA,YAnUd,GAmU6B,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,cAArB,KAAwC,EAAnD,CAnU7B;AAAA;AAAA,uBAoU+B,KAAK,eAAL,CAAqB,WAArB,CAAiC;AACpD,kBAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CADuC;AAEpD,kBAAA,MAAM,EAAE,KAAK,UAAL,CAAgB,OAAO,CAAC,CAAD,CAAvB,CAF4C;AAGpD,kBAAA,KAAK,EAAE,OAAO,CAAC,CAAD,CAHsC;AAIpD,kBAAA,SAAS,EAAE,KAAK,QAJoC;AAKpD,kBAAA,IAAI,EAAE,CAL8C;AAMpD,kBAAA,MAAM,EAAE,YAAY,CAAC;AAN+B,iBAAjC,CApU/B;;AAAA;AAoUc,gBAAA,QApUd;AAAA,+BA4UgB,QAAQ,CAAC,MA5UzB;AAAA,kDA6UiB,GA7UjB,wBA8UiB,GA9UjB,wBA+UiB,GA/UjB,wBAkViB,GAlVjB,yBAmViB,GAnVjB,yBAoViB,GApVjB;AAAA;;AAAA;AAgVgB,qBAAK,oBAAL;AAhVhB;;AAAA;AAAA;AAAA,uBAqVoC,QAAQ,CAAC,IAAT,EArVpC;;AAAA;AAqVsB,gBAAA,KArVtB;AAsVgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,KAAzD;AAtVhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGA2VkC,IA3VlC;AAAA;AAAA;AAAA;AAAA;AAAA;AA4Vc,gBAAA,OA5Vd,GA4VwB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,KAAmC,EAA9C,CA5VxB;AAAA;AAAA,uBA6V+B,KAAK,eAAL,CAAqB,eAArB,CAAqC;AACxD,kBAAA,KAAK,EAAE,KAAK,UAAL,CAAgB,OAAO,CAAC,CAAD,CAAvB,CADiD;AAExD,kBAAA,IAAI,EAAJ,IAFwD;AAGxD,kBAAA,SAAS,EAAE,KAAK,QAHwC;AAIxD,kBAAA,IAAI,EAAE;AAJkD,iBAArC,CA7V/B;;AAAA;AA6Vc,gBAAA,QA7Vd;AAAA,+BAmWgB,QAAQ,CAAC,MAnWzB;AAAA,kDAoWiB,GApWjB,wBAqWiB,GArWjB,wBAsWiB,GAtWjB,wBA8WiB,GA9WjB,yBA+WiB,GA/WjB,yBAgXiB,GAhXjB;AAAA;;AAAA;AAAA;AAAA,uBAuWmC,QAAQ,CAAC,IAAT,EAvWnC;;AAAA;AAuWsB,gBAAA,IAvWtB;AAwWgB,gBAAA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAjC;AACA,gBAAA,WAAW,CAAC,QAAZ,CAAqB,IAAI,CAAC,SAAL,CAAe,IAAf,CAArB;AACA,qBAAK,OAAL;AACA,qBAAK,qBAAL;AACA,qBAAK,UAAL,CAAgB,sBAAhB;AA5WhB;;AAAA;AAAA;AAAA,uBAiXoC,QAAQ,CAAC,IAAT,EAjXpC;;AAAA;AAiXsB,gBAAA,KAjXtB;AAkXgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,KAAzD;AACA,qBAAK,UAAL,CAAgB,cAAhB;AAnXhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAyX+B,KAAK,eAAL,CAAqB,cAArB,EAzX/B;;AAAA;AAyXc,gBAAA,QAzXd;AAAA,+BA0XgB,QAAQ,CAAC,MA1XzB;AAAA,kDA2XiB,GA3XjB,wBA4XiB,GA5XjB,wBA6XiB,GA7XjB,wBAsYiB,GAtYjB,yBAuYiB,GAvYjB,yBAwYiB,GAxYjB;AAAA;;AAAA;AAAA;AAAA,uBA8XmC,QAAQ,CAAC,IAAT,EA9XnC;;AAAA;AA8XsB,gBAAA,IA9XtB;AA+XgB,gBAAA,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAmC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAnC;AACM,gBAAA,UAhYtB,GAgYmC,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,YAArB,KAAsC,EAAjD,CAhYnC;AAiYgB,qBAAK,YAAL,CAAkB,SAAlB,uBAA2C,UAAU,CAAC,IAAtD;AACC,gBAAA,IAAI,CAAC,cAAL,KAAwB,GAAzB,GACM,KAAK,OAAL,CAAa,KAAK,2BAAL,CAAiC,IAAI,CAAC,cAAtC,CAAb,CADN,GAEM,KAAK,OAAL,CAAa,KAAb,CAFN;AAlYhB;;AAAA;AAAA;AAAA,uBAyYoC,QAAQ,CAAC,IAAT,EAzYpC;;AAAA;AAyYsB,gBAAA,KAzYtB;AA0YgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,KAAzD;AA1YhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgZc,gBAAA,OAhZd,GAgZwB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,gBAArB,KAA0C,EAArD,CAhZxB;AAiZc,gBAAA,QAjZd,GAiZyB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,QAArB,KAAkC,EAA7C,CAjZzB;AAkZQ,gBAAA,OAAO,CAAC,GAAR,GAAc,QAAQ,CAAC,GAAvB;AACA,gBAAA,OAAO,CAAC,GAAR,GAAc,QAAQ,CAAC,GAAvB;AACM,gBAAA,QApZd,GAoZyB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,KAAoC,EAA/C,CApZzB;AAAA;AAAA,uBAqZ+B,KAAK,eAAL,CAAqB,2BAArB,CAAiD,OAAjD,EAA0D,QAA1D,CArZ/B;;AAAA;AAqZc,gBAAA,QArZd;AAAA,+BAsZgB,QAAQ,CAAC,MAtZzB;AAAA,kDAuZiB,GAvZjB,yBA0ZiB,GA1ZjB,yBA2ZiB,GA3ZjB,yBA4ZiB,GA5ZjB;AAAA;;AAAA;AAwZgB,qBAAK,OAAL,CAAa,OAAb;AAxZhB;;AAAA;AAAA;AAAA,uBA6ZoC,QAAQ,CAAC,IAAT,EA7ZpC;;AAAA;AA6ZsB,gBAAA,KA7ZtB;AA8ZgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,KAAzD;AA9ZhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoac,gBAAA,SApad,GAoa0B,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,WAArB,KAAqC,EAAhD,CApa1B;AAqaS,gBAAA,SAAS,CAAC,CAAD,CAAV,GACM,KAAK,KAAL,CAAW,CAAX,EAAc,SAAd,GAA0B,KADhC,GAEM,KAAK,KAAL,CAAW,CAAX,EAAc,SAAd,GAA0B,IAFhC;AAGM,gBAAA,QAxad,GAwayB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,KAAoC,EAA/C,CAxazB;AAAA;AAAA,uBAya+B,KAAK,eAAL,CAAqB,4BAArB,CAAkD;AAAE,kBAAA,IAAI,EAAE,SAAS,CAAC,CAAD,CAAT,CAAa;AAArB,iBAAlD,EAA+E,QAA/E,CAza/B;;AAAA;AAyac,gBAAA,QAzad;AAAA,gCA0agB,QAAQ,CAAC,MA1azB;AAAA,oDA2aiB,GA3ajB,yBAkbiB,GAlbjB,0BAmbiB,GAnbjB,0BAobiB,GApbjB;AAAA;;AAAA;AA4agB,qBAAK,oBAAL,CAA0B;AACtB,kBAAA,KAAK,EAAE,SAAS,CAAC,CAAD,CADM;AAEtB,kBAAA,IAAI,EAAE,SAAS,CAAC,CAAD,CAAT,CAAa,EAFG;AAGtB,kBAAA,QAAQ,EAAE,SAAS,CAAC,CAAD;AAHG,iBAA1B,EAIG,MAJH;AA5ahB;;AAAA;AAAA;AAAA,uBAqboC,QAAQ,CAAC,IAAT,EArbpC;;AAAA;AAqbsB,gBAAA,KArbtB;AAsbgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,KAAzD;AAtbhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GA2buC,SA3bvC,EA2bkD,QA3blD;AAAA;AAAA;AAAA;AAAA;AAAA;AA4bc,gBAAA,QA5bd,GA4byB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,KAAoC,EAA/C,CA5bzB;AAAA;AAAA,uBA6b+B,KAAK,eAAL,CAAqB,oBAArB,CAA0C,SAA1C,EAAqD,QAArD,CA7b/B;;AAAA;AA6bc,gBAAA,QA7bd;AAAA,gCA8bgB,QAAQ,CAAC,MA9bzB;AAAA,oDA+biB,GA/bjB,yBAgciB,GAhcjB,yBA6ciB,GA7cjB,0BA8ciB,GA9cjB,0BA+ciB,GA/cjB;AAAA;;AAAA;AAicgB,qBAAK,OAAL,CAAa,QAAb;;AACA,oBAAI,QAAQ,KAAK,MAAjB,EAAyB;AACrB,uBAAK,UAAL,CAAgB,oBAAhB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,SAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,SAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,WAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,UAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,UAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,gBAAxB;AACA,kBAAA,YAAY,CAAC,UAAb,CAAwB,QAAxB;AACH;;AA3cjB;;AAAA;AAAA;AAAA,uBAgdoC,QAAQ,CAAC,IAAT,EAhdpC;;AAAA;AAgdsB,gBAAA,KAhdtB;AAidgB,qBAAK,YAAL,CAAkB,OAAlB,EAA2B,KAA3B;AAjdhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAsdoB,IAtdpB,EAsd0B,KAtd1B,EAsdyC,OAtdzC,EAsd0D,IAtd1D,EAsdwE;AAChE,MAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,IAAZ,GAAmB,OAAnB;;AACA,cAAQ,IAAR;AACI,aAAK,OAAL;AACI,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,SAAZ,GAAwB,0BAAxB;AACA,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,UAAZ,GAAyB,uBAAzB;AACA;;AACJ,aAAK,SAAL;AACI,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,SAAZ,GAAwB,4BAAxB;AACA,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,UAAZ,GAAyB,yBAAzB;AACA;;AACJ,aAAK,QAAL;AACI,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,SAAZ,GAAwB,sBAAxB;AACA,UAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,UAAZ,GAAyB,cAAzB;AACA;AAZR;AAcH;AAteL;AAAA;AAAA,+BAweuB,MAxevB,EAwe6B;AACrB,aAAO,MAAM,CAAC,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAP;AACH;AA1eL;AAAA;AAAA,0CA4e+B;AACvB,UAAM,CAAC,GAAG,IAAI,IAAJ,EAAV;AACA,UAAM,CAAC,GAAG,CAAC,CAAC,OAAF,EAAV;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,KAA3B,IAAoC,IAAI,CAAC,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,OAA3B,CAAmC,UAAnC,EAA+C,EAA/C,EAAmD,MAAnD,CAA0D,CAA1D,EAA6D,CAA7D,CAApC,GAAsG,UAAtG,GAAmH,CAA1H;AACH;AAhfL;AAAA;AAAA,+BAkfoB;AACZ,aAAO,OAAO,CAAC,iEAAiE,IAAjE,CAAsE,SAAS,CAAC,SAAhF,CAAD,CAAd;AACH;AApfL;AAAA;AAAA,0CAsf+B;AACvB,UAAI,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACjC,YAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,KAAmC,EAA9C,CAAhB;AACA,aAAK,YAAL,GAAoB,OAAO,CAAC,CAAD,CAA3B;AACA,aAAK,KAAL,GAAa,OAAO,CAAC,CAAD,CAApB;AACA,aAAK,KAAL,GAAa,OAAO,CAAC,CAAD,CAApB;AACH;;AACD,WAAK,YAAL;AACH;AA9fL;AAAA;AAAA,yCAggB8B;AACtB,MAAA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC,KAAK,IAAtC;AACH;AAlgBL;AAAA;AAAA,sCAogB6B,IApgB7B,EAogB2C,WApgB3C,EAogBiE;AACzD,MAAA,YAAY,CAAC,OAAb,CAAqB,IAArB,EAA2B,IAAI,CAAC,SAAL,CAAe,WAAf,CAA3B;AACH;AAtgBL;AAAA;AAAA,wCAwgBgC,IAxgBhC,EAwgB8C,WAxgB9C,EAwgBuE;AAC/D,UAAI,YAAY,CAAC,OAAb,CAAqB,IAArB,CAAJ,EAAgC;AAC5B,eAAO,WAAW,CAAC,OAAZ,CAAoB,UAAC,KAAD,EAAQ,KAAR;AAAA,iBAAkB,KAAK,CAAC,KAAN,GAAc,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,IAArB,KAA8B,EAAzC,EAA6C,KAA7C,CAAhC;AAAA,SAApB,CAAP;AACH;AACJ;AA5gBL;AAAA;AAAA,qCA8gByB;AACjB,WAAK,SAAL,GAAiB,IAAjB;AACH;AAhhBL;AAAA;AAAA,sCAkhB0B;AAClB,WAAK,SAAL,GAAiB,KAAjB;AACH;AAphBL;AAAA;AAAA,6BAshBoB,KAthBpB,EAshBiC;AACzB,WAAK,KAAL,GAAa,KAAb;AACH;AAxhBL;AAAA;AAAA,2CA0hB+B;AACvB,WAAK,oBAAL,GAA4B,IAA5B;AACH;AA5hBL;AAAA;AAAA,4CA8hBgC;AACxB,WAAK,oBAAL,GAA4B,KAA5B;AACH;AAhiBL;AAAA;AAAA,qCAkiByB;AACjB,WAAK,cAAL,GAAsB,IAAtB;AACH;AApiBL;AAAA;AAAA,sCAsiB0B;AAClB,WAAK,cAAL,GAAsB,KAAtB;AACH;AAxiBL;AAAA;AAAA,yCA0iB6B;AACrB,WAAK,WAAL;AACH;AA5iBL;AAAA;AAAA,gCA8iBuB,IA9iBvB,EA8iBmC;AAC3B,WAAK,eAAL,CAAqB,IAArB;AACH;AAhjBL;AAAA;AAAA,sCAkjB0B;AAClB,WAAK,QAAL,GAAgB,IAAhB;AACA,WAAK,oBAAL,GAA4B,KAA5B;AACH;AArjBL;AAAA;AAAA,gDAylBwC,aAzlBxC,EAylB6D;AACrD,UAAI,IAAI,GAAG,KAAX;;AACA,cAAQ,aAAR;AACI,aAAK,GAAL;AACI,UAAA,IAAI,GAAG,KAAP;AACA;;AACJ,aAAK,GAAL;AACI,UAAA,IAAI,GAAG,KAAP;AACA;;AACJ,aAAK,GAAL;AACI,UAAA,IAAI,GAAG,OAAP;AACA;;AACJ,aAAK,GAAL;AACI,UAAA,IAAI,GAAG,MAAP;AACA;;AACJ,aAAK,GAAL;AACI,UAAA,IAAI,GAAG,MAAP;AACA;AAfR;;AAiBA,aAAO,IAAP;AACH;AA7mBL;AAAA;AAAA,iCA+mByB,IA/mBzB,EA+mB+C,KA/mB/C,EA+mB4D;AACpD,MAAA,cAAc,CAAC,IAAf,CAAoB;AAChB,QAAA,IAAI,EAAJ,IADgB;AAEhB,QAAA,KAAK,EAAL,KAFgB;AAGhB,QAAA,KAAK,EAAE,IAHS;AAIhB,QAAA,QAAQ,EAAE,SAJM;AAKhB,QAAA,iBAAiB,EAAE,KALH;AAMhB,QAAA,KAAK,EAAE,IANS;AAOhB,QAAA,MAAM,EAAE,gBAAC,KAAD,EAAU;AACd,UAAA,KAAK,CAAC,gBAAN,CAAuB,YAAvB,EAAqC,IAAI,CAAC,SAA1C,GACA,KAAK,CAAC,gBAAN,CAAuB,YAAvB,EAAqC,IAAI,CAAC,WAA1C,CADA;AAEH;AAVe,OAApB;AAYH;AA5nBL;;AAAA;AAAA,EAAoC,GAApC,CAAA;;AAAa,cAAc,GAAA,UAAA,CAAA,CAD1B,SAAS,CAAC,EAAD,CACiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Component, Vue }               from 'vue-property-decorator';\nimport Swal, { SweetAlertType }         from 'sweetalert2';\nimport VueSimpleAlert                   from 'vue-simple-alert';\n\nimport { STEP1, STEP2, STEP3, STEP4 }   from './register-seller-steps';\nimport { InputForms, TypeHelp }         from '@/models/inputForms';\n\nimport RegisterSellerService            from '@/services/register.service';\nimport UserStorage                      from '@/services/UserStorage';\nimport productsService                  from '@/services/products.service';\nimport { listStatusSellerValid } from '@/environments/list_status_valid';\nimport getUtmCookie from \"@/helpers/getUtmCookie\";\nimport {ListCategories} from \"@/models/category\";\n\nimport { Device } from '@capacitor/device';\n\n@Component({})\nexport class RegisterSeller extends Vue {\n\n    public titlePage: string = 'Faça o cadastro do seu negócio. É grátis!';\n    public stepDefaul: string = '';\n    public paramParther: string = '';\n    public originByWay: string = '';\n\n    public step: string = '';\n    public step1: InputForms[] = STEP1;\n    public step2: InputForms[] = STEP2;\n    public step3: InputForms[] = STEP3;\n    public step4: InputForms[] = STEP4;\n    public optIn: string = 'phone';\n    public refresh: boolean = false;\n    public businessName: string = '';\n    public email: string = '';\n    public phone: string = '';\n    public verificationType: string = '';\n    public nextDisabled: boolean = false;\n    public prevDisabled: boolean = true;\n    public hasCpf: boolean = false;\n    public deviceId: string = '';\n    public subCategories: ListCategories[] = [];\n    public isRegister: boolean = false;\n\n    public showOptIn: boolean = false;\n    public showVerificationCode: boolean = false;\n    public showMapAddress: boolean = false;\n    public isUpdate: boolean = false;\n\n    private registerService = new RegisterSellerService();\n    private productsService = new productsService();\n\n    public stepToNumber = {\n      \"one\": 1,\n      \"two\": 2,\n      \"three\": 3,\n      \"four\": 4,\n      \"five\": 5,\n    };\n\n    constructor() {\n        super();\n    }\n\n    created() {\n        this.stepDefaul = this.$route.query.etapa as string;\n        this.$route.query.parceiro\n            ? this.paramParther = this.$route.query.parceiro as string\n            : this.paramParther = '';\n\n        this.getChoicesGender();\n        this.getChoicesSellersize();\n        this.getListCategories();\n        this.getStepForms();\n        this.getStepOneTerms();\n    }\n\n    mounted() {\n        this.setDeviceId();\n        this.originByWay = getUtmCookie();\n        const data = localStorage.getItem('loggedUser');\n        if (data) {\n            const statusSellerAccount = JSON.parse(data);\n            if (!listStatusSellerValid.includes(statusSellerAccount.account_status)) {\n                this.$router.push(`quero-vender?etapa=${statusSellerAccount.account_status}`);\n            } else {\n                this.$router.push(`dashboard`);\n            }\n        }\n        this.isRegister = true;\n    }\n\n    private getStepForms() {\n        (this.stepDefaul)\n            ? this.setStep(this.convertAccountStatusToSteps(this.stepDefaul))\n            : (localStorage.getItem('stepform'))\n                ? this.setStep(localStorage.getItem('stepform') as string)\n                : this.setStep('one');\n    }\n\n    public getStepOneTerms() {\n        const stepOneTerms = localStorage.getItem('stepOneTerms') ? localStorage.getItem('stepOneTerms') : '';\n        if (stepOneTerms) {\n            this.nextDisabled = JSON.parse(stepOneTerms).terms;\n        }\n    }\n\n    public setNextDisabled(value: boolean) {\n        this.nextDisabled = value;\n    }\n\n    private async getChoicesGender() {\n        const response = await this.registerService.getChoicesGender();\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                const data = await response.json();\n                this.step4[1].options = [];\n                data.map((seller: any[]) => {\n                    if (this.step4[1].options) {\n                        this.step4[1].options.push({ id: seller[0], label: `${seller[0]} - ${seller[1]}` });\n                    }\n                });\n                break;\n        }\n    }\n\n    private async getChoicesSellersize() {\n        const response = await this.registerService.getChoicesSellersize();\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                const data = await response.json();\n                this.step3[2].options = [];\n                data.map((seller: any[]) => {\n                    if (this.step3[3].options) {\n                        this.step3[3].options.push({ id: seller[0], label: `${seller[0]} - ${seller[1]}` });\n                    }\n                });\n                break;\n        }\n    }\n\n    private async getListCategories() {\n        const response = await this.registerService.getListCategories();\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                const data = await response.json();\n                this.subCategories = data;\n                this.step3[0].options = data.map(category => {\n                    return {\n                        id: category.name,\n                        label: category.name,\n                    }\n                });\n                break;\n        }\n    }\n\n    private setStep(step: string) {\n        this.step = step;\n        this.storageStepCurrent();\n        this.setStorageModelSteps();\n        this.setStepTitle();\n    }\n\n    private setStorageModelSteps() {\n        switch (this.step) {\n            case 'one':\n                this.setModelsArrayInput('stepOne', this.step1);\n                break;\n                case 'two':\n                this.setModelsArrayInput('stepTwo', this.step2);\n                break;\n            case 'three':\n                this.setModelsArrayInput('stepThree', this.step3);\n                break;\n            case 'four':\n                this.setModelsArrayInput('stepFour', this.step4);\n                break;\n        }\n    }\n\n    public prevStep() {\n        switch (this.step) {\n            case 'two':\n                this.setStep('one');\n                break;\n            case 'three':\n                this.setStep('two');\n                break;\n            case 'four':\n                this.setStep('three');\n                break;\n            case 'five':\n                this.setStep('four');\n                break;\n        }\n    }\n\n    public nextStep() {\n        switch (this.step) {\n            case 'one':\n                this.setVerificationCode();\n                this.setStepsGa('Informações de contato');\n                // this.setStep('two');\n                break;\n            case 'two':\n                // this.createRegisterSellerAddress();\n                this.openMapAddress();\n                this.setStepsGa('Localização da empresa');\n                // this.setStep('three');\n                break;\n            case 'three':\n                this.createRegisterSellerCategory();\n                this.setStepsGa('Categoria da empresa');\n                this.prevDisabled = true;\n                // this.setStep('four');\n                break;\n            case 'four':\n                let stepThree = {};\n                let stepFour = {};\n                if (localStorage.getItem('stepThree')) {\n                    stepThree = JSON.parse(localStorage.getItem('stepThree') || '');\n                }\n                if (localStorage.getItem('stepFour')) {\n                    stepFour = JSON.parse(localStorage.getItem('stepFour') || '');\n                }\n                this.updateRegisterSeller({\n                    seller_name: stepFour[0],\n                    gender: stepFour[1].id,\n                    document: stepFour[2] ? stepFour[2] : stepThree[4],\n                }, 'five');\n                this.prevDisabled = true;\n                this.setStepsGa('Dados Pessoais');\n                // this.setStep('five');\n                break;\n        }\n    }\n\n    public confirmAddressMap() {\n        this.createRegisterSellerAddress();\n        this.closeMapAddress();\n    }\n\n    private setStepTitle() {\n        switch (this.step) {\n            case 'one':\n                this.titlePage = 'Faça o cadastro do seu negócio. É grátis!';\n                break;\n            case 'two':\n                this.titlePage = 'Conta pra gente onde fica seu negócio!';\n                break;\n            case 'three':\n                this.titlePage = 'Agora, precisamos saber um pouco sobre seu negócio!';\n                break;\n                case 'four':\n                this.titlePage = 'Falta pouco! Conte mais sobre você.';\n                break;\n            case 'five':\n                this.titlePage = 'Que bom que você está na Pertinho de Casa!';\n                break;\n        }\n    }\n\n    private async setDeviceId() {\n        const device_id = (await Device.getId()).uuid;\n        this.deviceId =  device_id;\n        localStorage.setItem('device_id', JSON.stringify(device_id));\n    }\n\n    private async signupSeller() {\n        const stepOne = JSON.parse(localStorage.getItem('stepOne') || '');\n        const stepOneTerms = JSON.parse(localStorage.getItem('stepOneTerms') || '');\n        let partherData;\n\n        if (localStorage.getItem('parther')) {\n            partherData = JSON.parse(localStorage.getItem('parther') || '');\n        }\n\n        if (stepOne && stepOneTerms) {\n            let partner = '';\n            let observer = '';\n\n            if (this.paramParther === 'gastromotiva') {\n                partner = partherData ? partherData[0].id : '';\n                observer = partherData ? partherData[1] : '';\n            } else if (this.paramParther === 'oi') {\n                partner = 'oi';\n                observer = partherData[0].label === 'Outros' ? `Outros-${partherData[1]}` : partherData[0].label;\n            } else if (this.paramParther) {\n                partner = this.paramParther;\n            }\n\n            const data = {\n                name: stepOne[0],\n                mobile: this.removeMask(stepOne[1]),\n                email: stepOne[2],\n                device_id: this.deviceId,\n                auth: 2,\n                opt_in: stepOneTerms.optIn,\n                partner,\n                observer,\n                update: this.isUpdate,\n                origin_by_way: this.originByWay\n            }\n\n            if (!this.originByWay) {\n                delete data.origin_by_way;\n            }\n\n            const response = await this.registerService.createRegisterSeller(data);\n            switch (response.status) {\n                case 201:\n                    this.openVerificationCode();\n                    break;\n                case 400:\n                case 404:\n                case 423:\n                    const error = await response.json();\n                    Object.keys(error).forEach(value => {\n                        switch (value) {\n                            case 'mobile':\n                                this.setHelp(this.step1, 1, error.mobile[0], 'invalid');\n                                break;\n                            case 'email':\n                                this.setHelp(this.step1, 2, error.email[0], 'invalid');\n                                break;\n                        }\n                    });\n                    this.loginSeller();\n                    break;\n            }\n        }\n    }\n\n    private async loginSeller() {\n        const stepOne = JSON.parse(localStorage.getItem('stepOne') || '');\n        const stepOneTerms = JSON.parse(localStorage.getItem('stepOneTerms') || '');\n        const response = await this.registerService.loginSeller({\n            name: stepOne[0],\n            mobile: this.removeMask(stepOne[1]),\n            email: stepOne[2],\n            device_id: this.deviceId,\n            auth: 2,\n            opt_in: stepOneTerms.optIn,\n        });\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                this.openVerificationCode();\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error.detail ? error.detail : error);\n                break;\n        }\n    }\n\n    private async codeLoginSeller(code: string) {\n        const stepOne = JSON.parse(localStorage.getItem('stepOne') || '');\n        const response = await this.registerService.codeLoginSeller({\n            email: this.removeMask(stepOne[1]),\n            code,\n            device_id: this.deviceId,\n            auth: 2,\n        });\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                const data = await response.json();\n                localStorage.setItem('pertinho', JSON.stringify(data));\n                UserStorage.saveData(JSON.stringify(data));\n                this.getUser();\n                this.closeVerificationCode();\n                this.setStepsGa('Confirmação de token');\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error.detail ? error.detail : error);\n                this.setStepsGa('Token errado');\n                break;\n        }\n    }\n\n    private async getUser() {\n        const response = await this.productsService.getProdcutsAll();\n        switch (response.status) {\n            case 200:\n            case 201:\n            case 202:\n                const data = await response.json();\n                localStorage.setItem('loggedUser', JSON.stringify(data));\n                const loggedUser = JSON.parse(localStorage.getItem('loggedUser') || '');\n                this.toastMessage('success', `Bem vindo, ${loggedUser.name}!`);\n                (data.account_status !== 'F')\n                    ? this.setStep(this.convertAccountStatusToSteps(data.account_status))\n                    : this.setStep('two');\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error.detail ? error.detail : error);\n                break;\n        }\n    }\n\n    private async createRegisterSellerAddress() {\n        const address = JSON.parse(localStorage.getItem('stepTwoAddress') || '');\n        const myLatlng = JSON.parse(localStorage.getItem('latlng') || '');\n        address.lat = myLatlng.lat;\n        address.lng = myLatlng.lng;\n        const pertinho = JSON.parse(localStorage.getItem('pertinho') || '');\n        const response = await this.registerService.createRegisterSellerAddress(address, pertinho);\n        switch (response.status) {\n            case 201:\n                this.setStep('three');\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error.detail ? error.detail : error);\n                break;\n        }\n    }\n\n    private async createRegisterSellerCategory() {\n        const stepThree = JSON.parse(localStorage.getItem('stepThree') || '');\n        (stepThree[4])\n            ? this.step4[2].showInput = false\n            : this.step4[2].showInput = true;\n        const pertinho = JSON.parse(localStorage.getItem('pertinho') || '');\n        const response = await this.registerService.createRegisterSellerCategory({ cnae: stepThree[1].cnae }, pertinho);\n        switch (response.status) {\n            case 201:\n                this.updateRegisterSeller({\n                    about: stepThree[2],\n                    size: stepThree[3].id,\n                    document: stepThree[4],\n                }, 'four');\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error.detail ? error.detail : error);\n                break;\n        }\n    }\n\n    private async updateRegisterSeller(resgister, nextStep) {\n        const pertinho = JSON.parse(localStorage.getItem('pertinho') || '');\n        const response = await this.registerService.updateRegisterSeller(resgister, pertinho);\n        switch (response.status) {\n            case 201:\n            case 202:\n                this.setStep(nextStep);\n                if (nextStep === 'five') {\n                    this.setStepsGa('Finalizou cadastro');\n                    localStorage.removeItem('stepOne');\n                    localStorage.removeItem('stepTwo');\n                    localStorage.removeItem('stepThree');\n                    localStorage.removeItem('stepFour');\n                    localStorage.removeItem('stepform');\n                    localStorage.removeItem('stepTwoAddress');\n                    localStorage.removeItem('latlng');\n                }\n                break;\n            case 400:\n            case 404:\n            case 423:\n                const error = await response.json();\n                this.toastMessage('error', error);\n                break;\n        }\n    }\n\n    private setHelp(step, index: number, helpMsg: string, type: TypeHelp ) {\n        step[index].help = helpMsg;\n        switch (type) {\n            case 'valid':\n                step[index].classHelp = 'form-text valid-feedback';\n                step[index].classInput = 'form-control is-valid';\n                break;\n            case 'invalid':\n                step[index].classHelp = 'form-text invalid-feedback';\n                step[index].classInput = 'form-control is-invalid';\n                break;\n            case 'normal':\n                step[index].classHelp = 'form-text text-muted';\n                step[index].classInput = 'form-control';\n                break;\n        }\n    }\n\n    private removeMask(mobile) {\n        return mobile.replace(/[^0-9]/g, '');\n    }\n\n    private randomNumberLetters() {\n        const d = new Date();\n        const n = d.getTime();\n        return Math.floor(Math.random() * 65536) + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) + 'PERTINHO' + n;\n    }\n\n    private isMobile() {\n        return Boolean(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n    }\n\n    private setVerificationCode() {\n        if (localStorage.getItem('stepOne')) {\n            const stepOne = JSON.parse(localStorage.getItem('stepOne') || '');\n            this.businessName = stepOne[0];\n            this.phone = stepOne[1];\n            this.email = stepOne[2];\n        }\n        this.signupSeller();\n    }\n\n    private storageStepCurrent() {\n        localStorage.setItem('stepform', this.step);\n    }\n\n    public storageInputsStep(step: string, inputsModel: Array<{}>) {\n        localStorage.setItem(step, JSON.stringify(inputsModel));\n    }\n\n    private setModelsArrayInput(step: string, arrayInputs: InputForms[]) {\n        if (localStorage.getItem(step)) {\n            return arrayInputs.forEach((input, index) => input.model = JSON.parse(localStorage.getItem(step) || '')[index]);\n        }\n    }\n\n    public openOptInModal() {\n        this.showOptIn = true;\n    }\n\n    public closeOptInModal() {\n        this.showOptIn = false;\n    }\n\n    public setOptIn(optIn: string) {\n        this.optIn = optIn;\n    }\n\n    public openVerificationCode() {\n        this.showVerificationCode = true;\n    }\n\n    public closeVerificationCode() {\n        this.showVerificationCode = false;\n    }\n\n    public openMapAddress() {\n        this.showMapAddress = true;\n    }\n\n    public closeMapAddress() {\n        this.showMapAddress = false;\n    }\n\n    public refreshCodeConfirm() {\n        this.loginSeller();\n    }\n\n    public codeConfirm(code: string) {\n        this.codeLoginSeller(code);\n    }\n\n    public updateUserPhone(){\n        this.isUpdate = true;\n        this.showVerificationCode = false;\n    }\n\n    private setStepsGa = (action: string) => {\n        this.$setGtm({\n            event: 'step-cadastro',\n            nomeStep: action,\n        });\n    }\n\n    private convertSteps = (step: string): number => {\n        let index = 0;\n        switch (step) {\n            case 'one':\n            case 'P':\n                index = 1;\n                break;\n            case 'two':\n            case 'C':\n                index = 2;\n                break;\n            case 'three':\n            case 'E':\n                index = 3;\n                break;\n            case 'four':\n            case 'D':\n                index = 4;\n                break;\n            case 'five':\n            case 'F':\n                index = 5;\n                break;\n        }\n        return index;\n    }\n\n    private convertAccountStatusToSteps(accountStatus: string): string {\n        let step = 'one';\n        switch (accountStatus) {\n            case 'P':\n                step = 'one';\n                break;\n            case 'E':\n                step = 'two';\n                break;\n            case 'C':\n                step = 'three';\n                break;\n            case 'D':\n                step = 'four';\n                break;\n            case 'F':\n                step = 'five';\n                break;\n        }\n        return step;\n    }\n\n    private toastMessage(type: SweetAlertType, title: string) {\n        VueSimpleAlert.fire({\n            type,\n            title,\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 5000,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer),\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            },\n        });\n    }\n}\n\n"],"sourceRoot":""}]}