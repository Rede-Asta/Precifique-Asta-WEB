{"remainingRequest":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js!/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js??ref--13-2!/home/aline/GitHub/admin-frontend/src/services/cupon.service.ts","dependencies":[{"path":"/home/aline/GitHub/admin-frontend/src/services/cupon.service.ts","mtime":1696439584697},{"path":"/home/aline/GitHub/admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1673370377252},{"path":"/home/aline/GitHub/admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1673370377198},{"path":"/home/aline/GitHub/admin-frontend/node_modules/ts-loader/index.js","mtime":1673370387800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvYWxpbmUvR2l0SHViL2FkbWluLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvYWxpbmUvR2l0SHViL2FkbWluLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9hbGluZS9HaXRIdWIvYWRtaW4tZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IFVzZXJTdG9yYWdlIGZyb20gJ0Avc2VydmljZXMvVXNlclN0b3JhZ2UnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgZW52aXJvbm1lbnQgZnJvbSAnQC9lbnZpcm9ubWVudHMvZW52aXJvbm1lbnQnOwoKdmFyIGN1cG9uU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gY3Vwb25TZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIGN1cG9uU2VydmljZSk7CgogICAgdGhpcy5oZWFkZXJzVG9rZW4gPSB7CiAgICAgICdBdXRob3JpemF0aW9uJzogZW52aXJvbm1lbnQuc2V0QXV0aG9yaXphdGlvblRva2VuKCksCiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZScsCiAgICAgICd4LXRva2VuJzogVXNlclN0b3JhZ2UucmV0dXJuVG9rZW4oKQogICAgfTsKICAgIHRoaXMuaGVhZGVycyA9IHsKICAgICAgJ0F1dGhvcml6YXRpb24nOiBlbnZpcm9ubWVudC5zZXRBdXRob3JpemF0aW9uVG9rZW4oKSwKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQ29udGVudC1UeXBlJwogICAgfTsKICB9IC8vIHB1YmxpYyBhdXRoSGVhZGVyKCkgewogIC8vICAgICBjb25zdCB1c2VyTFM6IGFueSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJyk7CiAgLy8gICAgIGNvbnN0IHVzZXIgPSBKU09OLnBhcnNlKHVzZXJMUyk7CiAgLy8gICAgIGlmICh1c2VyICYmIHVzZXIudG9rZW4pIHsKICAvLyAgICAgICAgIHJldHVybiB7IEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHVzZXIudG9rZW4gfTsKICAvLyAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgIHJldHVybiB7fTsKICAvLyAgICAgfQogIC8vIH0KCgogIF9jcmVhdGVDbGFzcyhjdXBvblNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRDdXBvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRDdXBvbnMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGd1aWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZ3VpZCA9IFVzZXJTdG9yYWdlLnJldHVybkd1aWQoKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiIi5jb25jYXQoZW52aXJvbm1lbnQuc2V0QVBJKCksICIvc2VsbGVyL2NvdXBvbl9iYXRjaC8iKS5jb25jYXQoZ3VpZCksIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRDdXBvbnMoKSB7CiAgICAgICAgcmV0dXJuIF9nZXRDdXBvbnMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldEN1cG9uczsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImdldEN1cG9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0Q3Vwb24gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGN1cG9uR3VpZCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIiLmNvbmNhdChlbnZpcm9ubWVudC5zZXRBUEkoKSwgIi9jb3Vwb25fYmF0Y2gvIikuY29uY2F0KGN1cG9uR3VpZCksIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0Q3Vwb24oX3gpIHsKICAgICAgICByZXR1cm4gX2dldEN1cG9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRDdXBvbjsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImFkZEN1cG9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfYWRkQ3Vwb24gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGN1cG9uKSB7CiAgICAgICAgdmFyIGd1aWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGd1aWQgPSBVc2VyU3RvcmFnZS5yZXR1cm5HdWlkKCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgiIi5jb25jYXQoZW52aXJvbm1lbnQuc2V0QVBJKCksICIvc2VsbGVyL2NvdXBvbl9iYXRjaC8iKS5jb25jYXQoZ3VpZCksIGN1cG9uLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1Rva2VuCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0My5zZW50KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYWRkQ3Vwb24oX3gyKSB7CiAgICAgICAgcmV0dXJuIF9hZGRDdXBvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYWRkQ3Vwb247CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVDdXBvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3VwZGF0ZUN1cG9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChjdXBvbiwgY3Vwb25HdWlkKSB7CiAgICAgICAgdmFyIGd1aWQsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGd1aWQgPSBVc2VyU3RvcmFnZS5yZXR1cm5HdWlkKCk7CiAgICAgICAgICAgICAgICBkYXRhID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjdXBvbiksIHt9LCB7CiAgICAgICAgICAgICAgICAgIHNlbGxlcl9ndWlkX2xpc3Q6IFtndWlkXQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucGF0Y2goIiIuY29uY2F0KGVudmlyb25tZW50LnNldEFQSSgpLCAiL2NvdXBvbl9iYXRjaC8iKS5jb25jYXQoY3Vwb25HdWlkKSwgZGF0YSwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNUb2tlbgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDQuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHVwZGF0ZUN1cG9uKF94MywgX3g0KSB7CiAgICAgICAgcmV0dXJuIF91cGRhdGVDdXBvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBkYXRlQ3Vwb247CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBjdXBvblNlcnZpY2U7Cn0oKTsKCmV4cG9ydCB7IGN1cG9uU2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/aline/GitHub/admin-frontend/src/services/cupon.service.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,WAAP,MAAiC,wBAAjC;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP,MAAiC,4BAAjC;;IAIqB,Y;AAArB,0BAAA;AAAA;;AAEY,SAAA,YAAA,GAAe;AACnB,uBAAiB,WAAW,CAAC,qBAAZ,EADE;AAEnB,sBAAgB,kBAFG;AAGnB,sCAAgC,cAHb;AAInB,iBAAW,WAAW,CAAC,WAAZ;AAJQ,KAAf;AAOA,SAAA,OAAA,GAAU;AACd,uBAAiB,WAAW,CAAC,qBAAZ,EADH;AAEd,sBAAgB,kBAFF;AAGd,sCAAgC;AAHlB,KAAV;AA4CX,G,CAtCG;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAGU,gBAAA,I,GAAO,WAAW,CAAC,UAAZ,E;;uBACA,KAAK,CAAC,GAAN,WAAa,WAAW,CAAC,MAAZ,EAAb,kCAAyD,IAAzD,GAAiE;AAC1E,kBAAA,OAAO,EAAE,KAAK;AAD4D,iBAAjE,C;;;;;;;;;;;;;;;;;;;;;;gGAKK,S;;;;;;uBACL,KAAK,CAAC,GAAN,WAAa,WAAW,CAAC,MAAZ,EAAb,2BAAkD,SAAlD,GAA+D;AACxE,kBAAA,OAAO,EAAE,KAAK;AAD0D,iBAA/D,C;;;;;;;;;;;;;;;;;;;;;;gGAKK,K;;;;;;AACZ,gBAAA,I,GAAO,WAAW,CAAC,UAAZ,E;;uBACA,KAAK,CAAC,IAAN,WAAc,WAAW,CAAC,MAAZ,EAAd,kCAA0D,IAA1D,GAAkE,KAAlE,EAAyE;AAClF,kBAAA,OAAO,EAAE,KAAK;AADoE,iBAAzE,C;;;;;;;;;;;;;;;;;;;;;;mGAKQ,K,EAAO,S;;;;;;AACtB,gBAAA,I,GAAO,WAAW,CAAC,UAAZ,E;AACP,gBAAA,I,mCAAU,K;AAAO,kBAAA,gBAAgB,EAAE,CAAC,IAAD;;;uBAC5B,KAAK,CAAC,KAAN,WAAe,WAAW,CAAC,MAAZ,EAAf,2BAAoD,SAApD,GAAiE,IAAjE,EAAuE;AAChF,kBAAA,OAAO,EAAE,KAAK;AADkE,iBAAvE,C;;;;;;;;;;;;;;;;;;;;;;;;SAjDA,Y","sourcesContent":["import UserStorage          from '@/services/UserStorage';\nimport axios from 'axios';\n\nimport environment          from '@/environments/environment';\n\nimport { ICategory, VariantValue }    from '@/models/category';\n\nexport default class cuponService {\n\n    private headersToken = {\n        'Authorization': environment.setAuthorizationToken(),\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'x-token': UserStorage.returnToken(),\n    };\n\n    private headers = {\n        'Authorization': environment.setAuthorizationToken(),\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    };\n\n    // public authHeader() {\n    //     const userLS: any = localStorage.getItem('user');\n    //     const user = JSON.parse(userLS);\n\n    //     if (user && user.token) {\n    //         return { Authorization: 'Bearer ' + user.token };\n    //     } else {\n    //         return {};\n    //     }\n    // }\n\n    public async getCupons() {\n        const guid = UserStorage.returnGuid();\n        return await axios.get(`${environment.setAPI()}/seller/coupon_batch/${guid}`, {\n            headers: this.headers,\n        });\n    }\n\n    public async getCupon(cuponGuid) {\n        return await axios.get(`${environment.setAPI()}/coupon_batch/${cuponGuid}`, {\n            headers: this.headers,\n        });\n    }\n\n    public async addCupon(cupon){\n        const guid = UserStorage.returnGuid();\n        return await axios.post(`${environment.setAPI()}/seller/coupon_batch/${guid}`, cupon, {\n            headers: this.headersToken,\n        });\n    }\n\n    public async updateCupon(cupon, cuponGuid){\n        const guid = UserStorage.returnGuid();\n        const data ={...cupon, seller_guid_list: [guid]}\n        return await axios.patch(`${environment.setAPI()}/coupon_batch/${cuponGuid}`, data, {\n            headers: this.headersToken,\n        });\n    }\n}\n"],"sourceRoot":""}]}